cscope 15 D:\Projects ARM\Blink_EmBitz\Blink"               0000298072
	@D:\PROJEC~3\BLINK_~3\Blink\STM32F~1.LD

33 
OUTPUT_FORMAT
("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")

34 
	$OUTPUT_ARCH
(
¨m
)

35 
	$SEARCH_DIR
(.)

38 
MEMORY


40 
	`ROM
 (
rx
Ë: 
ORIGIN
 = 0x08000000, 
LENGTH
 = 32
K


41 
	`RAM
 (
rwx
Ë: 
ORIGIN
 = 0x20000000, 
LENGTH
 = 4
K


42 
	}
}

72 
	gSECTIONS


74 .
	gãxt
 :

76 
KEEP
(*(.
i§_ve˘‹
))

77 *(.
ãxt
*)

79 
KEEP
(*(.
öô
))

80 
KEEP
(*(.
föi
))

83 *
¸tbegö
.
o
(.
˘‹s
)

84 *
¸tbegö
?.
o
(.
˘‹s
)

85 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
˘‹s
)

86 *(
SORT
(.
˘‹s
.*))

87 *(.
˘‹s
)

90 *
¸tbegö
.
o
(.
dt‹s
)

91 *
¸tbegö
?.
o
(.
dt‹s
)

92 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
dt‹s
)

93 *(
SORT
(.
dt‹s
.*))

94 *(.
dt‹s
)

96 *(.
rod©a
*)

98 
KEEP
(*(.
eh_‰ame
*))

99 } > 
ROM


101 .
ARM
.
exèb
 :

103 *(.
ARM
.
exèb
* .
gnu
.
lök⁄˚
.
¨mexèb
.*)

104 } > 
ROM


106 
__exidx_°¨t
 = .;

107 .
	gARM
.
	gexidx
 :

109 *(.
ARM
.
exidx
* .
gnu
.
lök⁄˚
.
¨mexidx
.*)

110 } > 
ROM


111 
__exidx_íd
 = .;

113 
	g__ëext
 = .;

115 .
	gd©a
 : 
AT
 (
__ëext
)

117 
__d©a_°¨t__
 = .;

118 *(
	gvèbÀ
)

119 *(.
	gd©a
*)

121 . = 
ALIGN
(4);

123 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_°¨t
 = .);

124 
KEEP
(*(.
¥eöô_¨øy
))

125 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_íd
 = .);

127 . = 
ALIGN
(4);

129 
PROVIDE_HIDDEN
 (
__öô_¨øy_°¨t
 = .);

130 
KEEP
(*(
SORT
(.
öô_¨øy
.*)))

131 
KEEP
(*(.
öô_¨øy
))

132 
PROVIDE_HIDDEN
 (
__öô_¨øy_íd
 = .);

135 . = 
ALIGN
(4);

137 
PROVIDE_HIDDEN
 (
__föi_¨øy_°¨t
 = .);

138 
KEEP
(*(
SORT
(.
föi_¨øy
.*)))

139 
KEEP
(*(.
föi_¨øy
))

140 
PROVIDE_HIDDEN
 (
__föi_¨øy_íd
 = .);

142 . = 
ALIGN
(4);

144 
	g__d©a_íd__
 = .;

146 } > 
	gRAM


148 .
bss
 (
NOLOAD
):

150 
__bss_°¨t__
 = .;

151 *(.
	gbss
*)

152 *(
	gCOMMON
)

153 
	g__bss_íd__
 = .;

154 } > 
	gRAM


156 .
hóp
 (
NOLOAD
):

158 
__íd__
 = .;

159 
	gíd
 = 
__íd__
;

160 *(.
	ghóp
*)

161 
	g__HópLimô
 = .;

162 } > 
	gRAM


167 .
°ack_dummy
 (
NOLOAD
):

169 *(.
°ack
)

170 } > 
RAM


174 
__SèckT›
 = 
ORIGIN
(
RAM
Ë+ 
LENGTH
(RAM);

175 
	g__SèckLimô
 = 
__SèckT›
 - 
SIZEOF
(.
°ack_dummy
);

176 
PROVIDE
(
__°ack
 = 
__SèckT›
);

179 
ASSERT
(
__SèckLimô
 >
__HópLimô
, "region RAM overflowed with stack")

	@D:\PROJEC~3\BLINK_~3\Blink\STM32F~2.LD

33 
OUTPUT_FORMAT
("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")

34 
	$OUTPUT_ARCH
(
¨m
)

35 
	$SEARCH_DIR
(.)

38 
MEMORY


40 
	`ROM
 (
rx
Ë: 
ORIGIN
 = 0x08000000, 
LENGTH
 = 32
K


41 
	`RAM
 (
rwx
Ë: 
ORIGIN
 = 0x20000000, 
LENGTH
 = 4
K


42 
	}
}

72 
	gSECTIONS


74 .
	gãxt
 :

76 
KEEP
(*(.
i§_ve˘‹
))

77 *(.
ãxt
*)

79 
KEEP
(*(.
öô
))

80 
KEEP
(*(.
föi
))

83 *
¸tbegö
.
o
(.
˘‹s
)

84 *
¸tbegö
?.
o
(.
˘‹s
)

85 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
˘‹s
)

86 *(
SORT
(.
˘‹s
.*))

87 *(.
˘‹s
)

90 *
¸tbegö
.
o
(.
dt‹s
)

91 *
¸tbegö
?.
o
(.
dt‹s
)

92 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
dt‹s
)

93 *(
SORT
(.
dt‹s
.*))

94 *(.
dt‹s
)

96 *(.
rod©a
*)

98 
KEEP
(*(.
eh_‰ame
*))

99 } > 
RAM


101 .
ARM
.
exèb
 :

103 *(.
ARM
.
exèb
* .
gnu
.
lök⁄˚
.
¨mexèb
.*)

104 } > 
RAM


106 
__exidx_°¨t
 = .;

107 .
	gARM
.
	gexidx
 :

109 *(.
ARM
.
exidx
* .
gnu
.
lök⁄˚
.
¨mexidx
.*)

110 } > 
RAM


111 
__exidx_íd
 = .;

113 
	g__ëext
 = .;

115 .
	gd©a
 : 
AT
 (
__ëext
)

117 
__d©a_°¨t__
 = .;

118 *(
	gvèbÀ
)

119 *(.
	gd©a
*)

121 . = 
ALIGN
(4);

123 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_°¨t
 = .);

124 
KEEP
(*(.
¥eöô_¨øy
))

125 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_íd
 = .);

127 . = 
ALIGN
(4);

129 
PROVIDE_HIDDEN
 (
__öô_¨øy_°¨t
 = .);

130 
KEEP
(*(
SORT
(.
öô_¨øy
.*)))

131 
KEEP
(*(.
öô_¨øy
))

132 
PROVIDE_HIDDEN
 (
__öô_¨øy_íd
 = .);

135 . = 
ALIGN
(4);

137 
PROVIDE_HIDDEN
 (
__föi_¨øy_°¨t
 = .);

138 
KEEP
(*(
SORT
(.
föi_¨øy
.*)))

139 
KEEP
(*(.
föi_¨øy
))

140 
PROVIDE_HIDDEN
 (
__föi_¨øy_íd
 = .);

142 . = 
ALIGN
(4);

144 
	g__d©a_íd__
 = .;

146 } > 
	gRAM


148 .
bss
 (
NOLOAD
):

150 
__bss_°¨t__
 = .;

151 *(.
	gbss
*)

152 *(
	gCOMMON
)

153 
	g__bss_íd__
 = .;

154 } > 
	gRAM


156 .
hóp
 (
NOLOAD
):

158 
__íd__
 = .;

159 
	gíd
 = 
__íd__
;

160 *(.
	ghóp
*)

161 
	g__HópLimô
 = .;

162 } > 
	gRAM


167 .
°ack_dummy
 (
NOLOAD
):

169 . = 
ALIGN
(8);

170 *(.
	g°ack
)

171 } > 
RAM


175 
	g__SèckT›
 = 
ORIGIN
(
RAM
Ë+ 
LENGTH
(RAM);

176 
	g__SèckLimô
 = 
__SèckT›
 - 
SIZEOF
(.
°ack_dummy
);

177 
PROVIDE
(
__°ack
 = 
__SèckT›
);

180 
ASSERT
(
__SèckLimô
 >
__HópLimô
, "region RAM overflowed with stack")

	@D:\PROJEC~3\BLINK_~3\Blink\cmsis\ARM_CO~1.H

24 #i‚de‡
_ARM_COMMON_TABLES_H


25 
	#_ARM_COMMON_TABLES_H


	)

27 
	~"¨m_m©h.h
"

29 
uöt16_t
 
¨mBôRevTabÀ
[256];

30 
q15_t
 
¨mRecùTabÀQ15
[64];

31 
q31_t
 
¨mRecùTabÀQ31
[64];

32 c⁄° 
q31_t
 
ªÆC€fAQ31
[1024];

33 c⁄° 
q31_t
 
ªÆC€fBQ31
[1024];

	@D:\PROJEC~3\BLINK_~3\Blink\cmsis\CORE_C~1.H

24 #i‚de‡
__CORE_CMFUNC_H


25 
	#__CORE_CMFUNC_H


	)

34 #i‡ 
deföed
 ( 
__CC_ARM
 )

37 #i‡(
__ARMCC_VERSION
 < 400677)

50 
__INLINE
 
uöt32_t
 
	$__gë_CONTROL
()

52 
uöt32_t
 
__ªgC⁄åﬁ
 
	`__ASM
("control");

53 (
__ªgC⁄åﬁ
);

54 
	}
}

63 
__INLINE
 
	$__£t_CONTROL
(
uöt32_t
 
c⁄åﬁ
)

65 
uöt32_t
 
__ªgC⁄åﬁ
 
	`__ASM
("control");

66 
__ªgC⁄åﬁ
 = 
c⁄åﬁ
;

67 
	}
}

76 
__INLINE
 
uöt32_t
 
	$__gë_IPSR
()

78 
uöt32_t
 
__ªgIPSR
 
	`__ASM
("ipsr");

79 (
__ªgIPSR
);

80 
	}
}

89 
__INLINE
 
uöt32_t
 
	$__gë_APSR
()

91 
uöt32_t
 
__ªgAPSR
 
	`__ASM
("apsr");

92 (
__ªgAPSR
);

93 
	}
}

102 
__INLINE
 
uöt32_t
 
	$__gë_xPSR
()

104 
uöt32_t
 
__ªgXPSR
 
	`__ASM
("xpsr");

105 (
__ªgXPSR
);

106 
	}
}

115 
__INLINE
 
uöt32_t
 
	$__gë_PSP
()

117 
uöt32_t
 
__ªgPro˚ssSèckPoöãr
 
	`__ASM
("psp");

118 (
__ªgPro˚ssSèckPoöãr
);

119 
	}
}

128 
__INLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

130 
uöt32_t
 
__ªgPro˚ssSèckPoöãr
 
	`__ASM
("psp");

131 
__ªgPro˚ssSèckPoöãr
 = 
t›OfProcSèck
;

132 
	}
}

141 
__INLINE
 
uöt32_t
 
	$__gë_MSP
()

143 
uöt32_t
 
__ªgMaöSèckPoöãr
 
	`__ASM
("msp");

144 (
__ªgMaöSèckPoöãr
);

145 
	}
}

154 
__INLINE
 
	$__£t_MSP
(
uöt32_t
 
t›OfMaöSèck
)

156 
uöt32_t
 
__ªgMaöSèckPoöãr
 
	`__ASM
("msp");

157 
__ªgMaöSèckPoöãr
 = 
t›OfMaöSèck
;

158 
	}
}

167 
__INLINE
 
uöt32_t
 
	$__gë_PRIMASK
()

169 
uöt32_t
 
__ªgPriMask
 
	`__ASM
("primask");

170 (
__ªgPriMask
);

171 
	}
}

180 
__INLINE
 
	$__£t_PRIMASK
(
uöt32_t
 
¥iMask
)

182 
uöt32_t
 
__ªgPriMask
 
	`__ASM
("primask");

183 
__ªgPriMask
 = (
¥iMask
);

184 
	}
}

187 #i‡ (
__CORTEX_M
 >= 0x03)

194 
	#__íabÀ_Áu…_úq
 
__íabÀ_fiq


	)

202 
	#__dißbÀ_Áu…_úq
 
__dißbÀ_fiq


	)

211 
__INLINE
 
uöt32_t
 
	$__gë_BASEPRI
()

213 
uöt32_t
 
__ªgBa£Pri
 
	`__ASM
("basepri");

214 (
__ªgBa£Pri
);

215 
	}
}

224 
__INLINE
 
	$__£t_BASEPRI
(
uöt32_t
 
ba£Pri
)

226 
uöt32_t
 
__ªgBa£Pri
 
	`__ASM
("basepri");

227 
__ªgBa£Pri
 = (
ba£Pri
 & 0xff);

228 
	}
}

237 
__INLINE
 
uöt32_t
 
	$__gë_FAULTMASK
()

239 
uöt32_t
 
__ªgFau…Mask
 
	`__ASM
("faultmask");

240 (
__ªgFau…Mask
);

241 
	}
}

250 
__INLINE
 
	$__£t_FAULTMASK
(
uöt32_t
 
Áu…Mask
)

252 
uöt32_t
 
__ªgFau…Mask
 
	`__ASM
("faultmask");

253 
__ªgFau…Mask
 = (
Áu…Mask
 & (
uöt32_t
)1);

254 
	}
}

259 #i‡ (
__CORTEX_M
 == 0x04)

267 
__INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

269 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

270 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

271 (
__ªgÂs¸
);

275 
	}
}

284 
__INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

286 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

287 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

288 
__ªgÂs¸
 = (
Âs¸
);

290 
	}
}

295 #ñi‡
deföed
 ( 
__ICCARM__
 )

298 
	~<cmsis_ür.h
>

300 #ñi‡
deföed
 ( 
__GNUC__
 )

308 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__íabÀ_úq
()

310 
__ASM
 volatile ("cpsie i");

311 
	}
}

319 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__dißbÀ_úq
()

321 
__ASM
 volatile ("cpsid i");

322 
	}
}

331 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_CONTROL
()

333 
uöt32_t
 
ªsu…
;

335 
__ASM
 vﬁ©ûê("MRS %0, c⁄åﬁ" : "Ù" (
ªsu…
) );

336 (
ªsu…
);

337 
	}
}

346 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__£t_CONTROL
(
uöt32_t
 
c⁄åﬁ
)

348 
__ASM
 vﬁ©ûê("MSR c⁄åﬁ, %0" : : "r" (
c⁄åﬁ
) );

349 
	}
}

358 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_IPSR
()

360 
uöt32_t
 
ªsu…
;

362 
__ASM
 vﬁ©ûê("MRS %0, ip§" : "Ù" (
ªsu…
) );

363 (
ªsu…
);

364 
	}
}

373 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_APSR
()

375 
uöt32_t
 
ªsu…
;

377 
__ASM
 vﬁ©ûê("MRS %0,áp§" : "Ù" (
ªsu…
) );

378 (
ªsu…
);

379 
	}
}

388 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_xPSR
()

390 
uöt32_t
 
ªsu…
;

392 
__ASM
 vﬁ©ûê("MRS %0, xp§" : "Ù" (
ªsu…
) );

393 (
ªsu…
);

394 
	}
}

403 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_PSP
()

405 
uöt32_t
 
ªsu…
;

407 
__ASM
 vﬁ©ûê("MRS %0,Ö•\n" : "Ù" (
ªsu…
) );

408 (
ªsu…
);

409 
	}
}

418 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

420 
__ASM
 vﬁ©ûê("MSRÖ•, %0\n" : : "r" (
t›OfProcSèck
) );

421 
	}
}

430 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_MSP
()

432 
uöt32_t
 
ªsu…
;

434 
__ASM
 vﬁ©ûê("MRS %0, m•\n" : "Ù" (
ªsu…
) );

435 (
ªsu…
);

436 
	}
}

445 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__£t_MSP
(
uöt32_t
 
t›OfMaöSèck
)

447 
__ASM
 vﬁ©ûê("MSR m•, %0\n" : : "r" (
t›OfMaöSèck
) );

448 
	}
}

457 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_PRIMASK
()

459 
uöt32_t
 
ªsu…
;

461 
__ASM
 vﬁ©ûê("MRS %0,Örimask" : "Ù" (
ªsu…
) );

462 (
ªsu…
);

463 
	}
}

472 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__£t_PRIMASK
(
uöt32_t
 
¥iMask
)

474 
__ASM
 vﬁ©ûê("MSRÖrimask, %0" : : "r" (
¥iMask
) );

475 
	}
}

478 #i‡ (
__CORTEX_M
 >= 0x03)

485 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__íabÀ_Áu…_úq
()

487 
__ASM
 volatile ("cpsie f");

488 
	}
}

496 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__dißbÀ_Áu…_úq
()

498 
__ASM
 volatile ("cpsid f");

499 
	}
}

508 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_BASEPRI
()

510 
uöt32_t
 
ªsu…
;

512 
__ASM
 vﬁ©ûê("MRS %0, ba£¥i_max" : "Ù" (
ªsu…
) );

513 (
ªsu…
);

514 
	}
}

523 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__£t_BASEPRI
(
uöt32_t
 
vÆue
)

525 
__ASM
 vﬁ©ûê("MSR ba£¥i, %0" : : "r" (
vÆue
) );

526 
	}
}

535 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_FAULTMASK
()

537 
uöt32_t
 
ªsu…
;

539 
__ASM
 vﬁ©ûê("MRS %0, fau…mask" : "Ù" (
ªsu…
) );

540 (
ªsu…
);

541 
	}
}

550 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__£t_FAULTMASK
(
uöt32_t
 
Áu…Mask
)

552 
__ASM
 vﬁ©ûê("MSR fau…mask, %0" : : "r" (
Áu…Mask
) );

553 
	}
}

558 #i‡ (
__CORTEX_M
 == 0x04)

566 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

568 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

569 
uöt32_t
 
ªsu…
;

571 
__ASM
 vﬁ©ûê("VMRS %0, fps¸" : "Ù" (
ªsu…
) );

572 (
ªsu…
);

576 
	}
}

585 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

587 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

588 
__ASM
 vﬁ©ûê("VMSR fps¸, %0" : : "r" (
Âs¸
) );

590 
	}
}

595 #ñi‡
deföed
 ( 
__TASKING__
 )

	@D:\PROJEC~3\BLINK_~3\Blink\cmsis\CORE_C~2.H

24 #i‚de‡
__CORE_CMINSTR_H


25 
	#__CORE_CMINSTR_H


	)

34 #i‡ 
deföed
 ( 
__CC_ARM
 )

37 #i‡(
__ARMCC_VERSION
 < 400677)

46 
	#__NOP
 
__n›


	)

54 
	#__WFI
 
__wfi


	)

62 
	#__WFE
 
__w„


	)

69 
	#__SEV
 
__£v


	)

78 
	#__ISB
(Ë
	`__isb
(0xF)

	)

86 
	#__DSB
(Ë
	`__dsb
(0xF)

	)

94 
	#__DMB
(Ë
	`__dmb
(0xF)

	)

104 
	#__REV
 
__ªv


	)

114 
__INLINE
 
__ASM
 
uöt32_t
 
	$__REV16
(
uöt32_t
 
vÆue
)

116 
ªv16
 
r0
,Ñ0

117 
bx
 
Ã


118 
	}
}

128 
__INLINE
 
__ASM
 
öt32_t
 
	$__REVSH
(
öt32_t
 
vÆue
)

130 
ªvsh
 
r0
,Ñ0

131 
bx
 
Ã


132 
	}
}

135 #i‡ (
__CORTEX_M
 >= 0x03)

144 
	#__RBIT
 
__rbô


	)

154 
	#__LDREXB
(
±r
Ë((
uöt8_t
 ) 
	`__ldªx
’å))

	)

164 
	#__LDREXH
(
±r
Ë((
uöt16_t
Ë
	`__ldªx
’å))

	)

174 
	#__LDREXW
(
±r
Ë((
uöt32_t
 ) 
	`__ldªx
’å))

	)

186 
	#__STREXB
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

198 
	#__STREXH
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

210 
	#__STREXW
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

218 
	#__CLREX
 
__˛ªx


	)

229 
	#__SSAT
 
__sßt


	)

240 
	#__USAT
 
__ußt


	)

250 
	#__CLZ
 
__˛z


	)

256 #ñi‡
deföed
 ( 
__ICCARM__
 )

259 
	~<cmsis_ür.h
>

262 #ñi‡
deföed
 ( 
__GNUC__
 )

269 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__NOP
()

271 
__ASM
 volatile ("nop");

272 
	}
}

280 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__WFI
()

282 
__ASM
 volatile ("wfi");

283 
	}
}

291 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__WFE
()

293 
__ASM
 volatile ("wfe");

294 
	}
}

301 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__SEV
()

303 
__ASM
 volatile ("sev");

304 
	}
}

313 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__ISB
()

315 
__ASM
 volatile ("isb");

316 
	}
}

324 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__DSB
()

326 
__ASM
 volatile ("dsb");

327 
	}
}

335 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__DMB
()

337 
__ASM
 volatile ("dmb");

338 
	}
}

348 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__REV
(
uöt32_t
 
vÆue
)

350 
uöt32_t
 
ªsu…
;

352 
__ASM
 vﬁ©ûê("ªv %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

353 (
ªsu…
);

354 
	}
}

364 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__REV16
(
uöt32_t
 
vÆue
)

366 
uöt32_t
 
ªsu…
;

368 
__ASM
 vﬁ©ûê("ªv16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

369 (
ªsu…
);

370 
	}
}

380 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
öt32_t
 
	$__REVSH
(
öt32_t
 
vÆue
)

382 
uöt32_t
 
ªsu…
;

384 
__ASM
 vﬁ©ûê("ªvsh %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

385 (
ªsu…
);

386 
	}
}

389 #i‡ (
__CORTEX_M
 >= 0x03)

398 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__RBIT
(
uöt32_t
 
vÆue
)

400 
uöt32_t
 
ªsu…
;

402 
__ASM
 vﬁ©ûê("rbô %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

403 (
ªsu…
);

404 
	}
}

414 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt8_t
 
	$__LDREXB
(vﬁ©ûê
uöt8_t
 *
addr
)

416 
uöt8_t
 
ªsu…
;

418 
__ASM
 vﬁ©ûê("ldªxb %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) );

419 (
ªsu…
);

420 
	}
}

430 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt16_t
 
	$__LDREXH
(vﬁ©ûê
uöt16_t
 *
addr
)

432 
uöt16_t
 
ªsu…
;

434 
__ASM
 vﬁ©ûê("ldªxh %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) );

435 (
ªsu…
);

436 
	}
}

446 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__LDREXW
(vﬁ©ûê
uöt32_t
 *
addr
)

448 
uöt32_t
 
ªsu…
;

450 
__ASM
 vﬁ©ûê("ldªx %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) );

451 (
ªsu…
);

452 
	}
}

464 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__STREXB
(
uöt8_t
 
vÆue
, vﬁ©ûêuöt8_à*
addr
)

466 
uöt32_t
 
ªsu…
;

468 
__ASM
 vﬁ©ûê("°ªxb %0, %2, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
), "r" (
vÆue
) );

469 (
ªsu…
);

470 
	}
}

482 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__STREXH
(
uöt16_t
 
vÆue
, vﬁ©ûêuöt16_à*
addr
)

484 
uöt32_t
 
ªsu…
;

486 
__ASM
 vﬁ©ûê("°ªxh %0, %2, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
), "r" (
vÆue
) );

487 (
ªsu…
);

488 
	}
}

500 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt32_t
 
	$__STREXW
(
uöt32_t
 
vÆue
, vﬁ©ûêuöt32_à*
addr
)

502 
uöt32_t
 
ªsu…
;

504 
__ASM
 vﬁ©ûê("°ªx %0, %2, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
), "r" (
vÆue
) );

505 (
ªsu…
);

506 
	}
}

514 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
	$__CLREX
()

516 
__ASM
 volatile ("clrex");

517 
	}
}

528 
	#__SSAT
(
ARG1
,
ARG2
) \

530 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

531 
	`__ASM
 ("sßà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

532 
__RES
; \

533 })

	)

544 
	#__USAT
(
ARG1
,
ARG2
) \

546 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

547 
	`__ASM
 ("ußà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

548 
__RES
; \

549 })

	)

559 
__©åibuã__
––
Æways_ölöe
 ) ) 
__INLINE
 
uöt8_t
 
	$__CLZ
(
uöt32_t
 
vÆue
)

561 
uöt8_t
 
ªsu…
;

563 
__ASM
 vﬁ©ûê("˛z %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

564 (
ªsu…
);

565 
	}
}

572 #ñi‡
deföed
 ( 
__TASKING__
 )

	@D:\PROJEC~3\BLINK_~3\Blink\cmsis\arm_math.h

251 #i‚de‡
_ARM_MATH_H


252 
	#_ARM_MATH_H


	)

254 
	#__CMSIS_GENERIC


	)

256 #i‡
deföed
 (
ARM_MATH_CM4
)

257 
	~"c‹e_cm4.h
"

258 #ñi‡
deföed
 (
ARM_MATH_CM3
)

259 
	~"c‹e_cm3.h
"

260 #ñi‡
deföed
 (
ARM_MATH_CM0
)

261 
	~"c‹e_cm0.h
"

263 
	~"ARMCM4.h
"

267 #unde‡
__CMSIS_GENERIC


268 
	~"°rög.h
"

269 
	~"m©h.h
"

270 #ifdef 
__˝lu•lus


280 
	#DELTA_Q31
 (0x100)

	)

281 
	#DELTA_Q15
 0x5

	)

282 
	#INDEX_MASK
 0x0000003F

	)

283 
	#PI
 3.14159265358979f

	)

289 
	#TABLE_SIZE
 256

	)

290 
	#TABLE_SPACING_Q31
 0x800000

	)

291 
	#TABLE_SPACING_Q15
 0x80

	)

298 
	#INPUT_SPACING
 0xB60B61

	)

307 
ARM_MATH_SUCCESS
 = 0,

308 
ARM_MATH_ARGUMENT_ERROR
 = -1,

309 
ARM_MATH_LENGTH_ERROR
 = -2,

310 
ARM_MATH_SIZE_MISMATCH
 = -3,

311 
ARM_MATH_NANINF
 = -4,

312 
ARM_MATH_SINGULAR
 = -5,

313 
ARM_MATH_TEST_FAILURE
 = -6

314 } 
	t¨m_°©us
;

319 
öt8_t
 
	tq7_t
;

324 
öt16_t
 
	tq15_t
;

329 
öt32_t
 
	tq31_t
;

334 
öt64_t
 
	tq63_t
;

339 
	tÊﬂt32_t
;

344 
	tÊﬂt64_t
;

349 
	#__SIMD32
(
addr
Ë(*(
öt32_t
 **Ë& (addr))

	)

351 #i‡
deföed
 (
ARM_MATH_CM3
Ë|| deföed (
ARM_MATH_CM0
)

355 
	#__PKHBT
(
ARG1
, 
ARG2
, 
ARG3
Ë–(((
öt32_t
)(ARG1) << 0) & (int32_t)0x0000FFFF) | \

356 (((
öt32_t
)(
ARG2
Ë<< 
ARG3
Ë& (öt32_t)0xFFFF0000Ë)

	)

364 #i‚de‡
ARM_MATH_BIG_ENDIAN


366 
	#__PACKq7
(
v0
,
v1
,
v2
,
v3
Ë–(((
öt32_t
)(v0) << 0) & (int32_t)0x000000FF) | \

367 (((
öt32_t
)(
v1
) << 8) & (int32_t)0x0000FF00) | \

368 (((
öt32_t
)(
v2
) << 16) & (int32_t)0x00FF0000) | \

369 (((
öt32_t
)(
v3
Ë<< 24Ë& (öt32_t)0xFF000000Ë)

	)

372 
	#__PACKq7
(
v0
,
v1
,
v2
,
v3
Ë–(((
öt32_t
)(v3) << 0) & (int32_t)0x000000FF) | \

373 (((
öt32_t
)(
v2
) << 8) & (int32_t)0x0000FF00) | \

374 (((
öt32_t
)(
v1
) << 16) & (int32_t)0x00FF0000) | \

375 (((
öt32_t
)(
v0
Ë<< 24Ë& (öt32_t)0xFF000000Ë)

	)

383 
__INLINE
 
q31_t
 
˛ù_q63_to_q31
(

384 
q63_t
 
x
)

386  ((
q31_t
Ë(
x
 >> 32) != ((q31_t) x >> 31)) ?

387 ((0x7FFFFFFF ^ ((
q31_t
Ë(
x
 >> 63)))) : (q31_t) x;

393 
__INLINE
 
q15_t
 
˛ù_q63_to_q15
(

394 
q63_t
 
x
)

396  ((
q31_t
Ë(
x
 >> 32) != ((q31_t) x >> 31)) ?

397 ((0x7FFF ^ ((
q15_t
Ë(
x
 >> 63)))) : (q15_t) (x >> 15);

403 
__INLINE
 
q7_t
 
˛ù_q31_to_q7
(

404 
q31_t
 
x
)

406  ((
q31_t
Ë(
x
 >> 24) != ((q31_t) x >> 23)) ?

407 ((0x7F ^ ((
q7_t
Ë(
x
 >> 31)))) : (q7_t) x;

413 
__INLINE
 
q15_t
 
˛ù_q31_to_q15
(

414 
q31_t
 
x
)

416  ((
q31_t
Ë(
x
 >> 16) != ((q31_t) x >> 15)) ?

417 ((0x7FFF ^ ((
q15_t
Ë(
x
 >> 31)))) : (q15_t) x;

424 
__INLINE
 
q63_t
 
mu…32x64
(

425 
q63_t
 
x
,

426 
q31_t
 
y
)

428  ((((
q63_t
Ë(
x
 & 0x00000000FFFFFFFFË* 
y
) >> 32) +

429 (((
q63_t
Ë(
x
 >> 32Ë* 
y
)));

433 #i‡
deföed
 (
ARM_MATH_CM0
Ë&& deföed ( 
__CC_ARM
 )

434 
	#__CLZ
 
__˛z


	)

437 #i‡
deföed
 (
ARM_MATH_CM0
Ë&& ((deföed (
__ICCARM__
)Ë||(deföed (
__GNUC__
)Ë|| deföed (
__TASKING__
) )

439 
__INLINE
 
uöt32_t
 
__CLZ
(
q31_t
 
d©a
);

442 
__INLINE
 
uöt32_t
 
__CLZ
(
q31_t
 
d©a
)

444 
uöt32_t
 
cou¡
 = 0;

445 
uöt32_t
 
mask
 = 0x80000000;

447 (
d©a
 & 
mask
) == 0)

449 
cou¡
 += 1u;

450 
mask
 = mask >> 1u;

453 (
cou¡
);

463 
__INLINE
 
uöt32_t
 
¨m_ªcù_q31
(

464 
q31_t
 
ö
,

465 
q31_t
 * 
d°
,

466 
q31_t
 * 
pRecùTabÀ
)

469 
uöt32_t
 
out
, 
ãmpVÆ
;

470 
uöt32_t
 
ödex
, 
i
;

471 
uöt32_t
 
signBôs
;

473 if(
ö
 > 0)

475 
signBôs
 = 
__CLZ
(
ö
) - 1;

479 
signBôs
 = 
__CLZ
(-
ö
) - 1;

483 
ö
 = i¿<< 
signBôs
;

486 
ödex
 = (
uöt32_t
Ë(
ö
 >> 24u);

487 
ödex
 = (ödex & 
INDEX_MASK
);

490 
out
 = 
pRecùTabÀ
[
ödex
];

494 
i
 = 0u; i < 2u; i++)

496 
ãmpVÆ
 = (
q31_t
Ë(((
q63_t
Ë
ö
 * 
out
) >> 31u);

497 
ãmpVÆ
 = 0x7FFFFFFF -ÅempVal;

500 
out
 = (
q31_t
Ë
˛ù_q63_to_q31
(((
q63_t
Ëouà* 
ãmpVÆ
) >> 30u);

504 *
d°
 = 
out
;

507  (
signBôs
 + 1u);

514 
__INLINE
 
uöt32_t
 
¨m_ªcù_q15
(

515 
q15_t
 
ö
,

516 
q15_t
 * 
d°
,

517 
q15_t
 * 
pRecùTabÀ
)

520 
uöt32_t
 
out
 = 0, 
ãmpVÆ
 = 0;

521 
uöt32_t
 
ödex
 = 0, 
i
 = 0;

522 
uöt32_t
 
signBôs
 = 0;

524 if(
ö
 > 0)

526 
signBôs
 = 
__CLZ
(
ö
) - 17;

530 
signBôs
 = 
__CLZ
(-
ö
) - 17;

534 
ö
 = i¿<< 
signBôs
;

537 
ödex
 = 
ö
 >> 8;

538 
ödex
 = (ödex & 
INDEX_MASK
);

541 
out
 = 
pRecùTabÀ
[
ödex
];

545 
i
 = 0; i < 2; i++)

547 
ãmpVÆ
 = (
q15_t
Ë(((
q31_t
Ë
ö
 * 
out
) >> 15);

548 
ãmpVÆ
 = 0x7FFF -ÅempVal;

550 
out
 = (
q15_t
Ë(((
q31_t
Ëouà* 
ãmpVÆ
) >> 14);

554 *
d°
 = 
out
;

557  (
signBôs
 + 1);

565 #i‡
deföed
(
ARM_MATH_CM0
)

567 
__INLINE
 
q31_t
 
__SSAT
(

568 
q31_t
 
x
,

569 
uöt32_t
 
y
)

571 
öt32_t
 
posMax
, 
√gMö
;

572 
uöt32_t
 
i
;

574 
posMax
 = 1;

575 
i
 = 0; i < (
y
 - 1); i++)

577 
posMax
 =ÖosMax * 2;

580 if(
x
 > 0)

582 
posMax
 = (posMax - 1);

584 if(
x
 > 
posMax
)

586 
x
 = 
posMax
;

591 
√gMö
 = -
posMax
;

593 if(
x
 < 
√gMö
)

595 
x
 = 
√gMö
;

598  (
x
);

610 #i‡
deföed
 (
ARM_MATH_CM3
Ë|| deföed (
ARM_MATH_CM0
)

615 
__INLINE
 
q31_t
 
__QADD8
(

616 
q31_t
 
x
,

617 
q31_t
 
y
)

620 
q31_t
 
sum
;

621 
q7_t
 
r
, 
s
, 
t
, 
u
;

623 
r
 = (Ë
x
;

624 
s
 = (Ë
y
;

626 
r
 = 
__SSAT
((
q31_t
Ë‘ + 
s
), 8);

627 
s
 = 
__SSAT
(((
q31_t
Ë(((
x
 << 16Ë>> 24Ë+ ((
y
 << 16) >> 24))), 8);

628 
t
 = 
__SSAT
(((
q31_t
Ë(((
x
 << 8Ë>> 24Ë+ ((
y
 << 8) >> 24))), 8);

629 
u
 = 
__SSAT
(((
q31_t
Ë((
x
 >> 24Ë+ (
y
 >> 24))), 8);

631 
sum
 = (((
q31_t
Ë
u
 << 24Ë& 0xFF000000Ë| (((q31_tË
t
 << 16) & 0x00FF0000) |

632 (((
q31_t
Ë
s
 << 8Ë& 0x0000FF00Ë| (
r
 & 0x000000FF);

634  
sum
;

641 
__INLINE
 
q31_t
 
__QSUB8
(

642 
q31_t
 
x
,

643 
q31_t
 
y
)

646 
q31_t
 
sum
;

647 
q31_t
 
r
, 
s
, 
t
, 
u
;

649 
r
 = (Ë
x
;

650 
s
 = (Ë
y
;

652 
r
 = 
__SSAT
(‘ - 
s
), 8);

653 
s
 = 
__SSAT
(((
q31_t
Ë(((
x
 << 16Ë>> 24Ë- ((
y
 << 16) >> 24))), 8) << 8;

654 
t
 = 
__SSAT
(((
q31_t
Ë(((
x
 << 8Ë>> 24Ë- ((
y
 << 8) >> 24))), 8) << 16;

655 
u
 = 
__SSAT
(((
q31_t
Ë((
x
 >> 24Ë- (
y
 >> 24))), 8) << 24;

657 
sum
 =

658 (
u
 & 0xFF000000Ë| (
t
 & 0x00FF0000Ë| (
s
 & 0x0000FF00Ë| (
r
 & 0x000000FF);

660  
sum
;

670 
__INLINE
 
q31_t
 
__QADD16
(

671 
q31_t
 
x
,

672 
q31_t
 
y
)

675 
q31_t
 
sum
;

676 
q31_t
 
r
, 
s
;

678 
r
 = (Ë
x
;

679 
s
 = (Ë
y
;

681 
r
 = 
__SSAT
‘ + 
s
, 16);

682 
s
 = 
__SSAT
(((
q31_t
Ë((
x
 >> 16Ë+ (
y
 >> 16))), 16) << 16;

684 
sum
 = (
s
 & 0xFFFF0000Ë| (
r
 & 0x0000FFFF);

686  
sum
;

693 
__INLINE
 
q31_t
 
__SHADD16
(

694 
q31_t
 
x
,

695 
q31_t
 
y
)

698 
q31_t
 
sum
;

699 
q31_t
 
r
, 
s
;

701 
r
 = (Ë
x
;

702 
s
 = (Ë
y
;

704 
r
 = (‘ >> 1Ë+ (
s
 >> 1));

705 
s
 = ((
q31_t
Ë((
x
 >> 17Ë+ (
y
 >> 17))) << 16;

707 
sum
 = (
s
 & 0xFFFF0000Ë| (
r
 & 0x0000FFFF);

709  
sum
;

716 
__INLINE
 
q31_t
 
__QSUB16
(

717 
q31_t
 
x
,

718 
q31_t
 
y
)

721 
q31_t
 
sum
;

722 
q31_t
 
r
, 
s
;

724 
r
 = (Ë
x
;

725 
s
 = (Ë
y
;

727 
r
 = 
__SSAT
‘ - 
s
, 16);

728 
s
 = 
__SSAT
(((
q31_t
Ë((
x
 >> 16Ë- (
y
 >> 16))), 16) << 16;

730 
sum
 = (
s
 & 0xFFFF0000Ë| (
r
 & 0x0000FFFF);

732  
sum
;

738 
__INLINE
 
q31_t
 
__SHSUB16
(

739 
q31_t
 
x
,

740 
q31_t
 
y
)

743 
q31_t
 
diff
;

744 
q31_t
 
r
, 
s
;

746 
r
 = (Ë
x
;

747 
s
 = (Ë
y
;

749 
r
 = (‘ >> 1Ë- (
s
 >> 1));

750 
s
 = (((
x
 >> 17Ë- (
y
 >> 17)) << 16);

752 
diff
 = (
s
 & 0xFFFF0000Ë| (
r
 & 0x0000FFFF);

754  
diff
;

760 
__INLINE
 
q31_t
 
__QASX
(

761 
q31_t
 
x
,

762 
q31_t
 
y
)

765 
q31_t
 
sum
 = 0;

767 
sum
 = ((sum + 
˛ù_q31_to_q15
((
q31_t
Ë((Ë(
x
 >> 16Ë+ (Ë
y
))) << 16) +

768 
˛ù_q31_to_q15
((
q31_t
Ë((Ë
x
 - (Ë(
y
 >> 16)));

770  
sum
;

776 
__INLINE
 
q31_t
 
__SHASX
(

777 
q31_t
 
x
,

778 
q31_t
 
y
)

781 
q31_t
 
sum
;

782 
q31_t
 
r
, 
s
;

784 
r
 = (Ë
x
;

785 
s
 = (Ë
y
;

787 
r
 = (‘ >> 1Ë- (
y
 >> 17));

788 
s
 = (((
x
 >> 17) + (s >> 1)) << 16);

790 
sum
 = (
s
 & 0xFFFF0000Ë| (
r
 & 0x0000FFFF);

792  
sum
;

799 
__INLINE
 
q31_t
 
__QSAX
(

800 
q31_t
 
x
,

801 
q31_t
 
y
)

804 
q31_t
 
sum
 = 0;

806 
sum
 = ((sum + 
˛ù_q31_to_q15
((
q31_t
Ë((Ë(
x
 >> 16Ë- (Ë
y
))) << 16) +

807 
˛ù_q31_to_q15
((
q31_t
Ë((Ë
x
 + (Ë(
y
 >> 16)));

809  
sum
;

815 
__INLINE
 
q31_t
 
__SHSAX
(

816 
q31_t
 
x
,

817 
q31_t
 
y
)

820 
q31_t
 
sum
;

821 
q31_t
 
r
, 
s
;

823 
r
 = (Ë
x
;

824 
s
 = (Ë
y
;

826 
r
 = (‘ >> 1Ë+ (
y
 >> 17));

827 
s
 = (((
x
 >> 17) - (s >> 1)) << 16);

829 
sum
 = (
s
 & 0xFFFF0000Ë| (
r
 & 0x0000FFFF);

831  
sum
;

837 
__INLINE
 
q31_t
 
__SMUSDX
(

838 
q31_t
 
x
,

839 
q31_t
 
y
)

842  ((
q31_t
)(((Ë
x
 * (Ë(
y
 >> 16)) -

843 ((Ë(
x
 >> 16Ë* (Ë
y
)));

849 
__INLINE
 
q31_t
 
__SMUADX
(

850 
q31_t
 
x
,

851 
q31_t
 
y
)

854  ((
q31_t
)(((Ë
x
 * (Ë(
y
 >> 16)) +

855 ((Ë(
x
 >> 16Ë* (Ë
y
)));

861 
__INLINE
 
q31_t
 
__QADD
(

862 
q31_t
 
x
,

863 
q31_t
 
y
)

865  
˛ù_q63_to_q31
((
q63_t
Ë
x
 + 
y
);

871 
__INLINE
 
q31_t
 
__QSUB
(

872 
q31_t
 
x
,

873 
q31_t
 
y
)

875  
˛ù_q63_to_q31
((
q63_t
Ë
x
 - 
y
);

881 
__INLINE
 
q31_t
 
__SMLAD
(

882 
q31_t
 
x
,

883 
q31_t
 
y
,

884 
q31_t
 
sum
)

887  (
sum
 + ((Ë(
x
 >> 16Ë* (Ë(
y
 >> 16)) +

888 ((Ë
x
 * (Ë
y
));

894 
__INLINE
 
q31_t
 
__SMLADX
(

895 
q31_t
 
x
,

896 
q31_t
 
y
,

897 
q31_t
 
sum
)

900  (
sum
 + ((Ë(
x
 >> 16Ë* (Ë(
y
)) +

901 ((Ë
x
 * (Ë(
y
 >> 16)));

907 
__INLINE
 
q31_t
 
__SMLSDX
(

908 
q31_t
 
x
,

909 
q31_t
 
y
,

910 
q31_t
 
sum
)

913  (
sum
 - ((Ë(
x
 >> 16Ë* (Ë(
y
)) +

914 ((Ë
x
 * (Ë(
y
 >> 16)));

920 
__INLINE
 
q63_t
 
__SMLALD
(

921 
q31_t
 
x
,

922 
q31_t
 
y
,

923 
q63_t
 
sum
)

926  (
sum
 + ((Ë(
x
 >> 16Ë* (Ë(
y
 >> 16)) +

927 ((Ë
x
 * (Ë
y
));

933 
__INLINE
 
q63_t
 
__SMLALDX
(

934 
q31_t
 
x
,

935 
q31_t
 
y
,

936 
q63_t
 
sum
)

939  (
sum
 + ((Ë(
x
 >> 16Ë* (Ë
y
)) +

940 ((Ë
x
 * (Ë(
y
 >> 16));

946 
__INLINE
 
q31_t
 
__SMUAD
(

947 
q31_t
 
x
,

948 
q31_t
 
y
)

951  (((
x
 >> 16Ë* (
y
 >> 16)) +

952 (((
x
 << 16Ë>> 16Ë* ((
y
 << 16) >> 16)));

958 
__INLINE
 
q31_t
 
__SMUSD
(

959 
q31_t
 
x
,

960 
q31_t
 
y
)

963  (-((
x
 >> 16Ë* (
y
 >> 16)) +

964 (((
x
 << 16Ë>> 16Ë* ((
y
 << 16) >> 16)));

978 
uöt16_t
 
numT≠s
;

979 
q7_t
 *
pSèã
;

980 
q7_t
 *
pC€ffs
;

981 } 
	t¨m_fú_ö°™˚_q7
;

988 
uöt16_t
 
numT≠s
;

989 
q15_t
 *
pSèã
;

990 
q15_t
 *
pC€ffs
;

991 } 
	t¨m_fú_ö°™˚_q15
;

998 
uöt16_t
 
numT≠s
;

999 
q31_t
 *
pSèã
;

1000 
q31_t
 *
pC€ffs
;

1001 } 
	t¨m_fú_ö°™˚_q31
;

1008 
uöt16_t
 
numT≠s
;

1009 
Êﬂt32_t
 *
pSèã
;

1010 
Êﬂt32_t
 *
pC€ffs
;

1011 } 
	t¨m_fú_ö°™˚_f32
;

1022 
¨m_fú_q7
(

1023 c⁄° 
¨m_fú_ö°™˚_q7
 * 
S
,

1024 
q7_t
 * 
pSrc
,

1025 
q7_t
 * 
pD°
,

1026 
uöt32_t
 
blockSize
);

1038 
¨m_fú_öô_q7
(

1039 
¨m_fú_ö°™˚_q7
 * 
S
,

1040 
uöt16_t
 
numT≠s
,

1041 
q7_t
 * 
pC€ffs
,

1042 
q7_t
 * 
pSèã
,

1043 
uöt32_t
 
blockSize
);

1054 
¨m_fú_q15
(

1055 c⁄° 
¨m_fú_ö°™˚_q15
 * 
S
,

1056 
q15_t
 * 
pSrc
,

1057 
q15_t
 * 
pD°
,

1058 
uöt32_t
 
blockSize
);

1068 
¨m_fú_Á°_q15
(

1069 c⁄° 
¨m_fú_ö°™˚_q15
 * 
S
,

1070 
q15_t
 * 
pSrc
,

1071 
q15_t
 * 
pD°
,

1072 
uöt32_t
 
blockSize
);

1085 
¨m_°©us
 
¨m_fú_öô_q15
(

1086 
¨m_fú_ö°™˚_q15
 * 
S
,

1087 
uöt16_t
 
numT≠s
,

1088 
q15_t
 * 
pC€ffs
,

1089 
q15_t
 * 
pSèã
,

1090 
uöt32_t
 
blockSize
);

1100 
¨m_fú_q31
(

1101 c⁄° 
¨m_fú_ö°™˚_q31
 * 
S
,

1102 
q31_t
 * 
pSrc
,

1103 
q31_t
 * 
pD°
,

1104 
uöt32_t
 
blockSize
);

1114 
¨m_fú_Á°_q31
(

1115 c⁄° 
¨m_fú_ö°™˚_q31
 * 
S
,

1116 
q31_t
 * 
pSrc
,

1117 
q31_t
 * 
pD°
,

1118 
uöt32_t
 
blockSize
);

1129 
¨m_fú_öô_q31
(

1130 
¨m_fú_ö°™˚_q31
 * 
S
,

1131 
uöt16_t
 
numT≠s
,

1132 
q31_t
 * 
pC€ffs
,

1133 
q31_t
 * 
pSèã
,

1134 
uöt32_t
 
blockSize
);

1144 
¨m_fú_f32
(

1145 c⁄° 
¨m_fú_ö°™˚_f32
 * 
S
,

1146 
Êﬂt32_t
 * 
pSrc
,

1147 
Êﬂt32_t
 * 
pD°
,

1148 
uöt32_t
 
blockSize
);

1159 
¨m_fú_öô_f32
(

1160 
¨m_fú_ö°™˚_f32
 * 
S
,

1161 
uöt16_t
 
numT≠s
,

1162 
Êﬂt32_t
 * 
pC€ffs
,

1163 
Êﬂt32_t
 * 
pSèã
,

1164 
uöt32_t
 
blockSize
);

1172 
öt8_t
 
numSèges
;

1173 
q15_t
 *
pSèã
;

1174 
q15_t
 *
pC€ffs
;

1175 
öt8_t
 
po°Shi·
;

1177 } 
	t¨m_biquad_ˇsd_df1_ö°_q15
;

1185 
uöt32_t
 
numSèges
;

1186 
q31_t
 *
pSèã
;

1187 
q31_t
 *
pC€ffs
;

1188 
uöt8_t
 
po°Shi·
;

1190 } 
	t¨m_biquad_ˇsd_df1_ö°_q31
;

1197 
uöt32_t
 
numSèges
;

1198 
Êﬂt32_t
 *
pSèã
;

1199 
Êﬂt32_t
 *
pC€ffs
;

1202 } 
	t¨m_biquad_ˇsd_df1_ö°_f32
;

1215 
¨m_biquad_ˇsˇde_df1_q15
(

1216 c⁄° 
¨m_biquad_ˇsd_df1_ö°_q15
 * 
S
,

1217 
q15_t
 * 
pSrc
,

1218 
q15_t
 * 
pD°
,

1219 
uöt32_t
 
blockSize
);

1231 
¨m_biquad_ˇsˇde_df1_öô_q15
(

1232 
¨m_biquad_ˇsd_df1_ö°_q15
 * 
S
,

1233 
uöt8_t
 
numSèges
,

1234 
q15_t
 * 
pC€ffs
,

1235 
q15_t
 * 
pSèã
,

1236 
öt8_t
 
po°Shi·
);

1248 
¨m_biquad_ˇsˇde_df1_Á°_q15
(

1249 c⁄° 
¨m_biquad_ˇsd_df1_ö°_q15
 * 
S
,

1250 
q15_t
 * 
pSrc
,

1251 
q15_t
 * 
pD°
,

1252 
uöt32_t
 
blockSize
);

1264 
¨m_biquad_ˇsˇde_df1_q31
(

1265 c⁄° 
¨m_biquad_ˇsd_df1_ö°_q31
 * 
S
,

1266 
q31_t
 * 
pSrc
,

1267 
q31_t
 * 
pD°
,

1268 
uöt32_t
 
blockSize
);

1279 
¨m_biquad_ˇsˇde_df1_Á°_q31
(

1280 c⁄° 
¨m_biquad_ˇsd_df1_ö°_q31
 * 
S
,

1281 
q31_t
 * 
pSrc
,

1282 
q31_t
 * 
pD°
,

1283 
uöt32_t
 
blockSize
);

1295 
¨m_biquad_ˇsˇde_df1_öô_q31
(

1296 
¨m_biquad_ˇsd_df1_ö°_q31
 * 
S
,

1297 
uöt8_t
 
numSèges
,

1298 
q31_t
 * 
pC€ffs
,

1299 
q31_t
 * 
pSèã
,

1300 
öt8_t
 
po°Shi·
);

1311 
¨m_biquad_ˇsˇde_df1_f32
(

1312 c⁄° 
¨m_biquad_ˇsd_df1_ö°_f32
 * 
S
,

1313 
Êﬂt32_t
 * 
pSrc
,

1314 
Êﬂt32_t
 * 
pD°
,

1315 
uöt32_t
 
blockSize
);

1326 
¨m_biquad_ˇsˇde_df1_öô_f32
(

1327 
¨m_biquad_ˇsd_df1_ö°_f32
 * 
S
,

1328 
uöt8_t
 
numSèges
,

1329 
Êﬂt32_t
 * 
pC€ffs
,

1330 
Êﬂt32_t
 * 
pSèã
);

1339 
uöt16_t
 
numRows
;

1340 
uöt16_t
 
numCﬁs
;

1341 
Êﬂt32_t
 *
pD©a
;

1342 } 
	t¨m_m©rix_ö°™˚_f32
;

1350 
uöt16_t
 
numRows
;

1351 
uöt16_t
 
numCﬁs
;

1352 
q15_t
 *
pD©a
;

1354 } 
	t¨m_m©rix_ö°™˚_q15
;

1362 
uöt16_t
 
numRows
;

1363 
uöt16_t
 
numCﬁs
;

1364 
q31_t
 *
pD©a
;

1366 } 
	t¨m_m©rix_ö°™˚_q31
;

1379 
¨m_°©us
 
¨m_m©_add_f32
(

1380 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrcA
,

1381 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrcB
,

1382 
¨m_m©rix_ö°™˚_f32
 * 
pD°
);

1393 
¨m_°©us
 
¨m_m©_add_q15
(

1394 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcA
,

1395 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcB
,

1396 
¨m_m©rix_ö°™˚_q15
 * 
pD°
);

1407 
¨m_°©us
 
¨m_m©_add_q31
(

1408 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcA
,

1409 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcB
,

1410 
¨m_m©rix_ö°™˚_q31
 * 
pD°
);

1421 
¨m_°©us
 
¨m_m©_å™s_f32
(

1422 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrc
,

1423 
¨m_m©rix_ö°™˚_f32
 * 
pD°
);

1434 
¨m_°©us
 
¨m_m©_å™s_q15
(

1435 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrc
,

1436 
¨m_m©rix_ö°™˚_q15
 * 
pD°
);

1446 
¨m_°©us
 
¨m_m©_å™s_q31
(

1447 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrc
,

1448 
¨m_m©rix_ö°™˚_q31
 * 
pD°
);

1460 
¨m_°©us
 
¨m_m©_mu…_f32
(

1461 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrcA
,

1462 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrcB
,

1463 
¨m_m©rix_ö°™˚_f32
 * 
pD°
);

1474 
¨m_°©us
 
¨m_m©_mu…_q15
(

1475 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcA
,

1476 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcB
,

1477 
¨m_m©rix_ö°™˚_q15
 * 
pD°
,

1478 
q15_t
 * 
pSèã
);

1490 
¨m_°©us
 
¨m_m©_mu…_Á°_q15
(

1491 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcA
,

1492 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcB
,

1493 
¨m_m©rix_ö°™˚_q15
 * 
pD°
,

1494 
q15_t
 * 
pSèã
);

1505 
¨m_°©us
 
¨m_m©_mu…_q31
(

1506 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcA
,

1507 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcB
,

1508 
¨m_m©rix_ö°™˚_q31
 * 
pD°
);

1519 
¨m_°©us
 
¨m_m©_mu…_Á°_q31
(

1520 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcA
,

1521 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcB
,

1522 
¨m_m©rix_ö°™˚_q31
 * 
pD°
);

1534 
¨m_°©us
 
¨m_m©_sub_f32
(

1535 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrcA
,

1536 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrcB
,

1537 
¨m_m©rix_ö°™˚_f32
 * 
pD°
);

1548 
¨m_°©us
 
¨m_m©_sub_q15
(

1549 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcA
,

1550 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrcB
,

1551 
¨m_m©rix_ö°™˚_q15
 * 
pD°
);

1562 
¨m_°©us
 
¨m_m©_sub_q31
(

1563 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcA
,

1564 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrcB
,

1565 
¨m_m©rix_ö°™˚_q31
 * 
pD°
);

1576 
¨m_°©us
 
¨m_m©_sˇÀ_f32
(

1577 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
pSrc
,

1578 
Êﬂt32_t
 
sˇÀ
,

1579 
¨m_m©rix_ö°™˚_f32
 * 
pD°
);

1591 
¨m_°©us
 
¨m_m©_sˇÀ_q15
(

1592 c⁄° 
¨m_m©rix_ö°™˚_q15
 * 
pSrc
,

1593 
q15_t
 
sˇÀFø˘
,

1594 
öt32_t
 
shi·
,

1595 
¨m_m©rix_ö°™˚_q15
 * 
pD°
);

1607 
¨m_°©us
 
¨m_m©_sˇÀ_q31
(

1608 c⁄° 
¨m_m©rix_ö°™˚_q31
 * 
pSrc
,

1609 
q31_t
 
sˇÀFø˘
,

1610 
öt32_t
 
shi·
,

1611 
¨m_m©rix_ö°™˚_q31
 * 
pD°
);

1623 
¨m_m©_öô_q31
(

1624 
¨m_m©rix_ö°™˚_q31
 * 
S
,

1625 
uöt16_t
 
nRows
,

1626 
uöt16_t
 
nCﬁumns
,

1627 
q31_t
 *
pD©a
);

1638 
¨m_m©_öô_q15
(

1639 
¨m_m©rix_ö°™˚_q15
 * 
S
,

1640 
uöt16_t
 
nRows
,

1641 
uöt16_t
 
nCﬁumns
,

1642 
q15_t
 *
pD©a
);

1653 
¨m_m©_öô_f32
(

1654 
¨m_m©rix_ö°™˚_f32
 * 
S
,

1655 
uöt16_t
 
nRows
,

1656 
uöt16_t
 
nCﬁumns
,

1657 
Êﬂt32_t
 *
pD©a
);

1666 
q15_t
 
A0
;

1667 #ifde‡
ARM_MATH_CM0


1668 
q15_t
 
A1
;

1669 
q15_t
 
A2
;

1671 
q31_t
 
A1
;

1673 
q15_t
 
°©e
[3];

1674 
q15_t
 
Kp
;

1675 
q15_t
 
Ki
;

1676 
q15_t
 
Kd
;

1677 } 
	t¨m_pid_ö°™˚_q15
;

1684 
q31_t
 
A0
;

1685 
q31_t
 
A1
;

1686 
q31_t
 
A2
;

1687 
q31_t
 
°©e
[3];

1688 
q31_t
 
Kp
;

1689 
q31_t
 
Ki
;

1690 
q31_t
 
Kd
;

1692 } 
	t¨m_pid_ö°™˚_q31
;

1699 
Êﬂt32_t
 
A0
;

1700 
Êﬂt32_t
 
A1
;

1701 
Êﬂt32_t
 
A2
;

1702 
Êﬂt32_t
 
°©e
[3];

1703 
Êﬂt32_t
 
Kp
;

1704 
Êﬂt32_t
 
Ki
;

1705 
Êﬂt32_t
 
Kd
;

1706 } 
	t¨m_pid_ö°™˚_f32
;

1716 
¨m_pid_öô_f32
(

1717 
¨m_pid_ö°™˚_f32
 * 
S
,

1718 
öt32_t
 
ª£tSèãFœg
);

1725 
¨m_pid_ª£t_f32
(

1726 
¨m_pid_ö°™˚_f32
 * 
S
);

1735 
¨m_pid_öô_q31
(

1736 
¨m_pid_ö°™˚_q31
 * 
S
,

1737 
öt32_t
 
ª£tSèãFœg
);

1746 
¨m_pid_ª£t_q31
(

1747 
¨m_pid_ö°™˚_q31
 * 
S
);

1755 
¨m_pid_öô_q15
(

1756 
¨m_pid_ö°™˚_q15
 * 
S
,

1757 
öt32_t
 
ª£tSèãFœg
);

1764 
¨m_pid_ª£t_q15
(

1765 
¨m_pid_ö°™˚_q15
 * 
S
);

1773 
uöt32_t
 
nVÆues
;

1774 
Êﬂt32_t
 
x1
;

1775 
Êﬂt32_t
 
xS∑cög
;

1776 
Êﬂt32_t
 *
pYD©a
;

1777 } 
	t¨m_löór_öãΩ_ö°™˚_f32
;

1785 
uöt16_t
 
numRows
;

1786 
uöt16_t
 
numCﬁs
;

1787 
Êﬂt32_t
 *
pD©a
;

1788 } 
	t¨m_bûöór_öãΩ_ö°™˚_f32
;

1796 
uöt16_t
 
numRows
;

1797 
uöt16_t
 
numCﬁs
;

1798 
q31_t
 *
pD©a
;

1799 } 
	t¨m_bûöór_öãΩ_ö°™˚_q31
;

1807 
uöt16_t
 
numRows
;

1808 
uöt16_t
 
numCﬁs
;

1809 
q15_t
 *
pD©a
;

1810 } 
	t¨m_bûöór_öãΩ_ö°™˚_q15
;

1818 
uöt16_t
 
numRows
;

1819 
uöt16_t
 
numCﬁs
;

1820 
q7_t
 *
pD©a
;

1821 } 
	t¨m_bûöór_öãΩ_ö°™˚_q7
;

1833 
¨m_mu…_q7
(

1834 
q7_t
 * 
pSrcA
,

1835 
q7_t
 * 
pSrcB
,

1836 
q7_t
 * 
pD°
,

1837 
uöt32_t
 
blockSize
);

1848 
¨m_mu…_q15
(

1849 
q15_t
 * 
pSrcA
,

1850 
q15_t
 * 
pSrcB
,

1851 
q15_t
 * 
pD°
,

1852 
uöt32_t
 
blockSize
);

1863 
¨m_mu…_q31
(

1864 
q31_t
 * 
pSrcA
,

1865 
q31_t
 * 
pSrcB
,

1866 
q31_t
 * 
pD°
,

1867 
uöt32_t
 
blockSize
);

1878 
¨m_mu…_f32
(

1879 
Êﬂt32_t
 * 
pSrcA
,

1880 
Êﬂt32_t
 * 
pSrcB
,

1881 
Êﬂt32_t
 * 
pD°
,

1882 
uöt32_t
 
blockSize
);

1891 
uöt16_t
 
f·Lí
;

1892 
uöt8_t
 
if·Fœg
;

1893 
uöt8_t
 
bôRevî£Fœg
;

1894 
q15_t
 *
pTwiddÀ
;

1895 
uöt16_t
 *
pBôRevTabÀ
;

1896 
uöt16_t
 
twidC€fModifõr
;

1897 
uöt16_t
 
bôRevFa˘‹
;

1898 } 
	t¨m_cf·_ødix4_ö°™˚_q15
;

1906 
uöt16_t
 
f·Lí
;

1907 
uöt8_t
 
if·Fœg
;

1908 
uöt8_t
 
bôRevî£Fœg
;

1909 
q31_t
 *
pTwiddÀ
;

1910 
uöt16_t
 *
pBôRevTabÀ
;

1911 
uöt16_t
 
twidC€fModifõr
;

1912 
uöt16_t
 
bôRevFa˘‹
;

1913 } 
	t¨m_cf·_ødix4_ö°™˚_q31
;

1921 
uöt16_t
 
f·Lí
;

1922 
uöt8_t
 
if·Fœg
;

1923 
uöt8_t
 
bôRevî£Fœg
;

1924 
Êﬂt32_t
 *
pTwiddÀ
;

1925 
uöt16_t
 *
pBôRevTabÀ
;

1926 
uöt16_t
 
twidC€fModifõr
;

1927 
uöt16_t
 
bôRevFa˘‹
;

1928 
Êﬂt32_t
 
⁄ebyf·Lí
;

1929 } 
	t¨m_cf·_ødix4_ö°™˚_f32
;

1938 
¨m_cf·_ødix4_q15
(

1939 c⁄° 
¨m_cf·_ødix4_ö°™˚_q15
 * 
S
,

1940 
q15_t
 * 
pSrc
);

1951 
¨m_°©us
 
¨m_cf·_ødix4_öô_q15
(

1952 
¨m_cf·_ødix4_ö°™˚_q15
 * 
S
,

1953 
uöt16_t
 
f·Lí
,

1954 
uöt8_t
 
if·Fœg
,

1955 
uöt8_t
 
bôRevî£Fœg
);

1964 
¨m_cf·_ødix4_q31
(

1965 c⁄° 
¨m_cf·_ødix4_ö°™˚_q31
 * 
S
,

1966 
q31_t
 * 
pSrc
);

1977 
¨m_°©us
 
¨m_cf·_ødix4_öô_q31
(

1978 
¨m_cf·_ødix4_ö°™˚_q31
 * 
S
,

1979 
uöt16_t
 
f·Lí
,

1980 
uöt8_t
 
if·Fœg
,

1981 
uöt8_t
 
bôRevî£Fœg
);

1990 
¨m_cf·_ødix4_f32
(

1991 c⁄° 
¨m_cf·_ødix4_ö°™˚_f32
 * 
S
,

1992 
Êﬂt32_t
 * 
pSrc
);

2003 
¨m_°©us
 
¨m_cf·_ødix4_öô_f32
(

2004 
¨m_cf·_ødix4_ö°™˚_f32
 * 
S
,

2005 
uöt16_t
 
f·Lí
,

2006 
uöt8_t
 
if·Fœg
,

2007 
uöt8_t
 
bôRevî£Fœg
);

2024 
¨m_ødix4_buâîÊy_f32
(

2025 
Êﬂt32_t
 * 
pSrc
,

2026 
uöt16_t
 
f·Lí
,

2027 
Êﬂt32_t
 * 
pC€f
,

2028 
uöt16_t
 
twidC€fModifõr
);

2040 
¨m_ødix4_buâîÊy_övî£_f32
(

2041 
Êﬂt32_t
 * 
pSrc
,

2042 
uöt16_t
 
f·Lí
,

2043 
Êﬂt32_t
 * 
pC€f
,

2044 
uöt16_t
 
twidC€fModifõr
,

2045 
Êﬂt32_t
 
⁄ebyf·Lí
);

2056 
¨m_bôªvîßl_f32
(

2057 
Êﬂt32_t
 *
pSrc
,

2058 
uöt16_t
 
f·Size
,

2059 
uöt16_t
 
bôRevFa˘‹
,

2060 
uöt16_t
 *
pBôRevTab
);

2071 
¨m_ødix4_buâîÊy_q31
(

2072 
q31_t
 *
pSrc
,

2073 
uöt32_t
 
f·Lí
,

2074 
q31_t
 *
pC€f
,

2075 
uöt32_t
 
twidC€fModifõr
);

2086 
¨m_ødix4_buâîÊy_övî£_q31
(

2087 
q31_t
 * 
pSrc
,

2088 
uöt32_t
 
f·Lí
,

2089 
q31_t
 * 
pC€f
,

2090 
uöt32_t
 
twidC€fModifõr
);

2101 
¨m_bôªvîßl_q31
(

2102 
q31_t
 * 
pSrc
,

2103 
uöt32_t
 
f·Lí
,

2104 
uöt16_t
 
bôRevFa˘‹
,

2105 
uöt16_t
 *
pBôRevTab
);

2116 
¨m_ødix4_buâîÊy_q15
(

2117 
q15_t
 *
pSrc16
,

2118 
uöt32_t
 
f·Lí
,

2119 
q15_t
 *
pC€f16
,

2120 
uöt32_t
 
twidC€fModifõr
);

2131 
¨m_ødix4_buâîÊy_övî£_q15
(

2132 
q15_t
 *
pSrc16
,

2133 
uöt32_t
 
f·Lí
,

2134 
q15_t
 *
pC€f16
,

2135 
uöt32_t
 
twidC€fModifõr
);

2146 
¨m_bôªvîßl_q15
(

2147 
q15_t
 * 
pSrc
,

2148 
uöt32_t
 
f·Lí
,

2149 
uöt16_t
 
bôRevFa˘‹
,

2150 
uöt16_t
 *
pBôRevTab
);

2158 
uöt32_t
 
f·LíRól
;

2159 
uöt32_t
 
f·LíBy2
;

2160 
uöt8_t
 
if·FœgR
;

2161 
uöt8_t
 
bôRevî£FœgR
;

2162 
uöt32_t
 
twidC€fRModifõr
;

2163 
q15_t
 *
pTwiddÀARól
;

2164 
q15_t
 *
pTwiddÀBRól
;

2165 
¨m_cf·_ødix4_ö°™˚_q15
 *
pCf·
;

2166 } 
	t¨m_rf·_ö°™˚_q15
;

2174 
uöt32_t
 
f·LíRól
;

2175 
uöt32_t
 
f·LíBy2
;

2176 
uöt8_t
 
if·FœgR
;

2177 
uöt8_t
 
bôRevî£FœgR
;

2178 
uöt32_t
 
twidC€fRModifõr
;

2179 
q31_t
 *
pTwiddÀARól
;

2180 
q31_t
 *
pTwiddÀBRól
;

2181 
¨m_cf·_ødix4_ö°™˚_q31
 *
pCf·
;

2182 } 
	t¨m_rf·_ö°™˚_q31
;

2190 
uöt32_t
 
f·LíRól
;

2191 
uöt16_t
 
f·LíBy2
;

2192 
uöt8_t
 
if·FœgR
;

2193 
uöt8_t
 
bôRevî£FœgR
;

2194 
uöt32_t
 
twidC€fRModifõr
;

2195 
Êﬂt32_t
 *
pTwiddÀARól
;

2196 
Êﬂt32_t
 *
pTwiddÀBRól
;

2197 
¨m_cf·_ødix4_ö°™˚_f32
 *
pCf·
;

2198 } 
	t¨m_rf·_ö°™˚_f32
;

2208 
¨m_rf·_q15
(

2209 c⁄° 
¨m_rf·_ö°™˚_q15
 * 
S
,

2210 
q15_t
 * 
pSrc
,

2211 
q15_t
 * 
pD°
);

2223 
¨m_°©us
 
¨m_rf·_öô_q15
(

2224 
¨m_rf·_ö°™˚_q15
 * 
S
,

2225 
¨m_cf·_ødix4_ö°™˚_q15
 * 
S_CFFT
,

2226 
uöt32_t
 
f·LíRól
,

2227 
uöt32_t
 
if·FœgR
,

2228 
uöt32_t
 
bôRevî£Fœg
);

2238 
¨m_rf·_q31
(

2239 c⁄° 
¨m_rf·_ö°™˚_q31
 * 
S
,

2240 
q31_t
 * 
pSrc
,

2241 
q31_t
 * 
pD°
);

2253 
¨m_°©us
 
¨m_rf·_öô_q31
(

2254 
¨m_rf·_ö°™˚_q31
 * 
S
,

2255 
¨m_cf·_ødix4_ö°™˚_q31
 * 
S_CFFT
,

2256 
uöt32_t
 
f·LíRól
,

2257 
uöt32_t
 
if·FœgR
,

2258 
uöt32_t
 
bôRevî£Fœg
);

2270 
¨m_°©us
 
¨m_rf·_öô_f32
(

2271 
¨m_rf·_ö°™˚_f32
 * 
S
,

2272 
¨m_cf·_ødix4_ö°™˚_f32
 * 
S_CFFT
,

2273 
uöt32_t
 
f·LíRól
,

2274 
uöt32_t
 
if·FœgR
,

2275 
uöt32_t
 
bôRevî£Fœg
);

2285 
¨m_rf·_f32
(

2286 c⁄° 
¨m_rf·_ö°™˚_f32
 * 
S
,

2287 
Êﬂt32_t
 * 
pSrc
,

2288 
Êﬂt32_t
 * 
pD°
);

2296 
uöt16_t
 
N
;

2297 
uöt16_t
 
Nby2
;

2298 
Êﬂt32_t
 
n‹mÆize
;

2299 
Êﬂt32_t
 *
pTwiddÀ
;

2300 
Êﬂt32_t
 *
pCosFa˘‹
;

2301 
¨m_rf·_ö°™˚_f32
 *
pRf·
;

2302 
¨m_cf·_ødix4_ö°™˚_f32
 *
pCf·
;

2303 } 
	t¨m_d˘4_ö°™˚_f32
;

2316 
¨m_°©us
 
¨m_d˘4_öô_f32
(

2317 
¨m_d˘4_ö°™˚_f32
 * 
S
,

2318 
¨m_rf·_ö°™˚_f32
 * 
S_RFFT
,

2319 
¨m_cf·_ødix4_ö°™˚_f32
 * 
S_CFFT
,

2320 
uöt16_t
 
N
,

2321 
uöt16_t
 
Nby2
,

2322 
Êﬂt32_t
 
n‹mÆize
);

2332 
¨m_d˘4_f32
(

2333 c⁄° 
¨m_d˘4_ö°™˚_f32
 * 
S
,

2334 
Êﬂt32_t
 * 
pSèã
,

2335 
Êﬂt32_t
 * 
pI∆öeBuf„r
);

2343 
uöt16_t
 
N
;

2344 
uöt16_t
 
Nby2
;

2345 
q31_t
 
n‹mÆize
;

2346 
q31_t
 *
pTwiddÀ
;

2347 
q31_t
 *
pCosFa˘‹
;

2348 
¨m_rf·_ö°™˚_q31
 *
pRf·
;

2349 
¨m_cf·_ødix4_ö°™˚_q31
 *
pCf·
;

2350 } 
	t¨m_d˘4_ö°™˚_q31
;

2363 
¨m_°©us
 
¨m_d˘4_öô_q31
(

2364 
¨m_d˘4_ö°™˚_q31
 * 
S
,

2365 
¨m_rf·_ö°™˚_q31
 * 
S_RFFT
,

2366 
¨m_cf·_ødix4_ö°™˚_q31
 * 
S_CFFT
,

2367 
uöt16_t
 
N
,

2368 
uöt16_t
 
Nby2
,

2369 
q31_t
 
n‹mÆize
);

2379 
¨m_d˘4_q31
(

2380 c⁄° 
¨m_d˘4_ö°™˚_q31
 * 
S
,

2381 
q31_t
 * 
pSèã
,

2382 
q31_t
 * 
pI∆öeBuf„r
);

2390 
uöt16_t
 
N
;

2391 
uöt16_t
 
Nby2
;

2392 
q15_t
 
n‹mÆize
;

2393 
q15_t
 *
pTwiddÀ
;

2394 
q15_t
 *
pCosFa˘‹
;

2395 
¨m_rf·_ö°™˚_q15
 *
pRf·
;

2396 
¨m_cf·_ødix4_ö°™˚_q15
 *
pCf·
;

2397 } 
	t¨m_d˘4_ö°™˚_q15
;

2410 
¨m_°©us
 
¨m_d˘4_öô_q15
(

2411 
¨m_d˘4_ö°™˚_q15
 * 
S
,

2412 
¨m_rf·_ö°™˚_q15
 * 
S_RFFT
,

2413 
¨m_cf·_ødix4_ö°™˚_q15
 * 
S_CFFT
,

2414 
uöt16_t
 
N
,

2415 
uöt16_t
 
Nby2
,

2416 
q15_t
 
n‹mÆize
);

2426 
¨m_d˘4_q15
(

2427 c⁄° 
¨m_d˘4_ö°™˚_q15
 * 
S
,

2428 
q15_t
 * 
pSèã
,

2429 
q15_t
 * 
pI∆öeBuf„r
);

2440 
¨m_add_f32
(

2441 
Êﬂt32_t
 * 
pSrcA
,

2442 
Êﬂt32_t
 * 
pSrcB
,

2443 
Êﬂt32_t
 * 
pD°
,

2444 
uöt32_t
 
blockSize
);

2455 
¨m_add_q7
(

2456 
q7_t
 * 
pSrcA
,

2457 
q7_t
 * 
pSrcB
,

2458 
q7_t
 * 
pD°
,

2459 
uöt32_t
 
blockSize
);

2470 
¨m_add_q15
(

2471 
q15_t
 * 
pSrcA
,

2472 
q15_t
 * 
pSrcB
,

2473 
q15_t
 * 
pD°
,

2474 
uöt32_t
 
blockSize
);

2485 
¨m_add_q31
(

2486 
q31_t
 * 
pSrcA
,

2487 
q31_t
 * 
pSrcB
,

2488 
q31_t
 * 
pD°
,

2489 
uöt32_t
 
blockSize
);

2500 
¨m_sub_f32
(

2501 
Êﬂt32_t
 * 
pSrcA
,

2502 
Êﬂt32_t
 * 
pSrcB
,

2503 
Êﬂt32_t
 * 
pD°
,

2504 
uöt32_t
 
blockSize
);

2515 
¨m_sub_q7
(

2516 
q7_t
 * 
pSrcA
,

2517 
q7_t
 * 
pSrcB
,

2518 
q7_t
 * 
pD°
,

2519 
uöt32_t
 
blockSize
);

2530 
¨m_sub_q15
(

2531 
q15_t
 * 
pSrcA
,

2532 
q15_t
 * 
pSrcB
,

2533 
q15_t
 * 
pD°
,

2534 
uöt32_t
 
blockSize
);

2545 
¨m_sub_q31
(

2546 
q31_t
 * 
pSrcA
,

2547 
q31_t
 * 
pSrcB
,

2548 
q31_t
 * 
pD°
,

2549 
uöt32_t
 
blockSize
);

2560 
¨m_sˇÀ_f32
(

2561 
Êﬂt32_t
 * 
pSrc
,

2562 
Êﬂt32_t
 
sˇÀ
,

2563 
Êﬂt32_t
 * 
pD°
,

2564 
uöt32_t
 
blockSize
);

2576 
¨m_sˇÀ_q7
(

2577 
q7_t
 * 
pSrc
,

2578 
q7_t
 
sˇÀFø˘
,

2579 
öt8_t
 
shi·
,

2580 
q7_t
 * 
pD°
,

2581 
uöt32_t
 
blockSize
);

2593 
¨m_sˇÀ_q15
(

2594 
q15_t
 * 
pSrc
,

2595 
q15_t
 
sˇÀFø˘
,

2596 
öt8_t
 
shi·
,

2597 
q15_t
 * 
pD°
,

2598 
uöt32_t
 
blockSize
);

2610 
¨m_sˇÀ_q31
(

2611 
q31_t
 * 
pSrc
,

2612 
q31_t
 
sˇÀFø˘
,

2613 
öt8_t
 
shi·
,

2614 
q31_t
 * 
pD°
,

2615 
uöt32_t
 
blockSize
);

2625 
¨m_abs_q7
(

2626 
q7_t
 * 
pSrc
,

2627 
q7_t
 * 
pD°
,

2628 
uöt32_t
 
blockSize
);

2638 
¨m_abs_f32
(

2639 
Êﬂt32_t
 * 
pSrc
,

2640 
Êﬂt32_t
 * 
pD°
,

2641 
uöt32_t
 
blockSize
);

2651 
¨m_abs_q15
(

2652 
q15_t
 * 
pSrc
,

2653 
q15_t
 * 
pD°
,

2654 
uöt32_t
 
blockSize
);

2664 
¨m_abs_q31
(

2665 
q31_t
 * 
pSrc
,

2666 
q31_t
 * 
pD°
,

2667 
uöt32_t
 
blockSize
);

2678 
¨m_dŸ_¥od_f32
(

2679 
Êﬂt32_t
 * 
pSrcA
,

2680 
Êﬂt32_t
 * 
pSrcB
,

2681 
uöt32_t
 
blockSize
,

2682 
Êﬂt32_t
 * 
ªsu…
);

2693 
¨m_dŸ_¥od_q7
(

2694 
q7_t
 * 
pSrcA
,

2695 
q7_t
 * 
pSrcB
,

2696 
uöt32_t
 
blockSize
,

2697 
q31_t
 * 
ªsu…
);

2708 
¨m_dŸ_¥od_q15
(

2709 
q15_t
 * 
pSrcA
,

2710 
q15_t
 * 
pSrcB
,

2711 
uöt32_t
 
blockSize
,

2712 
q63_t
 * 
ªsu…
);

2723 
¨m_dŸ_¥od_q31
(

2724 
q31_t
 * 
pSrcA
,

2725 
q31_t
 * 
pSrcB
,

2726 
uöt32_t
 
blockSize
,

2727 
q63_t
 * 
ªsu…
);

2738 
¨m_shi·_q7
(

2739 
q7_t
 * 
pSrc
,

2740 
öt8_t
 
shi·Bôs
,

2741 
q7_t
 * 
pD°
,

2742 
uöt32_t
 
blockSize
);

2753 
¨m_shi·_q15
(

2754 
q15_t
 * 
pSrc
,

2755 
öt8_t
 
shi·Bôs
,

2756 
q15_t
 * 
pD°
,

2757 
uöt32_t
 
blockSize
);

2768 
¨m_shi·_q31
(

2769 
q31_t
 * 
pSrc
,

2770 
öt8_t
 
shi·Bôs
,

2771 
q31_t
 * 
pD°
,

2772 
uöt32_t
 
blockSize
);

2783 
¨m_off£t_f32
(

2784 
Êﬂt32_t
 * 
pSrc
,

2785 
Êﬂt32_t
 
off£t
,

2786 
Êﬂt32_t
 * 
pD°
,

2787 
uöt32_t
 
blockSize
);

2798 
¨m_off£t_q7
(

2799 
q7_t
 * 
pSrc
,

2800 
q7_t
 
off£t
,

2801 
q7_t
 * 
pD°
,

2802 
uöt32_t
 
blockSize
);

2813 
¨m_off£t_q15
(

2814 
q15_t
 * 
pSrc
,

2815 
q15_t
 
off£t
,

2816 
q15_t
 * 
pD°
,

2817 
uöt32_t
 
blockSize
);

2828 
¨m_off£t_q31
(

2829 
q31_t
 * 
pSrc
,

2830 
q31_t
 
off£t
,

2831 
q31_t
 * 
pD°
,

2832 
uöt32_t
 
blockSize
);

2842 
¨m_√g©e_f32
(

2843 
Êﬂt32_t
 * 
pSrc
,

2844 
Êﬂt32_t
 * 
pD°
,

2845 
uöt32_t
 
blockSize
);

2855 
¨m_√g©e_q7
(

2856 
q7_t
 * 
pSrc
,

2857 
q7_t
 * 
pD°
,

2858 
uöt32_t
 
blockSize
);

2868 
¨m_√g©e_q15
(

2869 
q15_t
 * 
pSrc
,

2870 
q15_t
 * 
pD°
,

2871 
uöt32_t
 
blockSize
);

2881 
¨m_√g©e_q31
(

2882 
q31_t
 * 
pSrc
,

2883 
q31_t
 * 
pD°
,

2884 
uöt32_t
 
blockSize
);

2892 
¨m_c›y_f32
(

2893 
Êﬂt32_t
 * 
pSrc
,

2894 
Êﬂt32_t
 * 
pD°
,

2895 
uöt32_t
 
blockSize
);

2904 
¨m_c›y_q7
(

2905 
q7_t
 * 
pSrc
,

2906 
q7_t
 * 
pD°
,

2907 
uöt32_t
 
blockSize
);

2916 
¨m_c›y_q15
(

2917 
q15_t
 * 
pSrc
,

2918 
q15_t
 * 
pD°
,

2919 
uöt32_t
 
blockSize
);

2928 
¨m_c›y_q31
(

2929 
q31_t
 * 
pSrc
,

2930 
q31_t
 * 
pD°
,

2931 
uöt32_t
 
blockSize
);

2939 
¨m_fûl_f32
(

2940 
Êﬂt32_t
 
vÆue
,

2941 
Êﬂt32_t
 * 
pD°
,

2942 
uöt32_t
 
blockSize
);

2951 
¨m_fûl_q7
(

2952 
q7_t
 
vÆue
,

2953 
q7_t
 * 
pD°
,

2954 
uöt32_t
 
blockSize
);

2963 
¨m_fûl_q15
(

2964 
q15_t
 
vÆue
,

2965 
q15_t
 * 
pD°
,

2966 
uöt32_t
 
blockSize
);

2975 
¨m_fûl_q31
(

2976 
q31_t
 
vÆue
,

2977 
q31_t
 * 
pD°
,

2978 
uöt32_t
 
blockSize
);

2990 
¨m_c⁄v_f32
(

2991 
Êﬂt32_t
 * 
pSrcA
,

2992 
uöt32_t
 
§cALí
,

2993 
Êﬂt32_t
 * 
pSrcB
,

2994 
uöt32_t
 
§cBLí
,

2995 
Êﬂt32_t
 * 
pD°
);

3007 
¨m_c⁄v_q15
(

3008 
q15_t
 * 
pSrcA
,

3009 
uöt32_t
 
§cALí
,

3010 
q15_t
 * 
pSrcB
,

3011 
uöt32_t
 
§cBLí
,

3012 
q15_t
 * 
pD°
);

3024 
¨m_c⁄v_Á°_q15
(

3025 
q15_t
 * 
pSrcA
,

3026 
uöt32_t
 
§cALí
,

3027 
q15_t
 * 
pSrcB
,

3028 
uöt32_t
 
§cBLí
,

3029 
q15_t
 * 
pD°
);

3041 
¨m_c⁄v_q31
(

3042 
q31_t
 * 
pSrcA
,

3043 
uöt32_t
 
§cALí
,

3044 
q31_t
 * 
pSrcB
,

3045 
uöt32_t
 
§cBLí
,

3046 
q31_t
 * 
pD°
);

3058 
¨m_c⁄v_Á°_q31
(

3059 
q31_t
 * 
pSrcA
,

3060 
uöt32_t
 
§cALí
,

3061 
q31_t
 * 
pSrcB
,

3062 
uöt32_t
 
§cBLí
,

3063 
q31_t
 * 
pD°
);

3075 
¨m_c⁄v_q7
(

3076 
q7_t
 * 
pSrcA
,

3077 
uöt32_t
 
§cALí
,

3078 
q7_t
 * 
pSrcB
,

3079 
uöt32_t
 
§cBLí
,

3080 
q7_t
 * 
pD°
);

3094 
¨m_°©us
 
¨m_c⁄v_∑πül_f32
(

3095 
Êﬂt32_t
 * 
pSrcA
,

3096 
uöt32_t
 
§cALí
,

3097 
Êﬂt32_t
 * 
pSrcB
,

3098 
uöt32_t
 
§cBLí
,

3099 
Êﬂt32_t
 * 
pD°
,

3100 
uöt32_t
 
fú°Index
,

3101 
uöt32_t
 
numPoöts
);

3115 
¨m_°©us
 
¨m_c⁄v_∑πül_q15
(

3116 
q15_t
 * 
pSrcA
,

3117 
uöt32_t
 
§cALí
,

3118 
q15_t
 * 
pSrcB
,

3119 
uöt32_t
 
§cBLí
,

3120 
q15_t
 * 
pD°
,

3121 
uöt32_t
 
fú°Index
,

3122 
uöt32_t
 
numPoöts
);

3136 
¨m_°©us
 
¨m_c⁄v_∑πül_Á°_q15
(

3137 
q15_t
 * 
pSrcA
,

3138 
uöt32_t
 
§cALí
,

3139 
q15_t
 * 
pSrcB
,

3140 
uöt32_t
 
§cBLí
,

3141 
q15_t
 * 
pD°
,

3142 
uöt32_t
 
fú°Index
,

3143 
uöt32_t
 
numPoöts
);

3157 
¨m_°©us
 
¨m_c⁄v_∑πül_q31
(

3158 
q31_t
 * 
pSrcA
,

3159 
uöt32_t
 
§cALí
,

3160 
q31_t
 * 
pSrcB
,

3161 
uöt32_t
 
§cBLí
,

3162 
q31_t
 * 
pD°
,

3163 
uöt32_t
 
fú°Index
,

3164 
uöt32_t
 
numPoöts
);

3179 
¨m_°©us
 
¨m_c⁄v_∑πül_Á°_q31
(

3180 
q31_t
 * 
pSrcA
,

3181 
uöt32_t
 
§cALí
,

3182 
q31_t
 * 
pSrcB
,

3183 
uöt32_t
 
§cBLí
,

3184 
q31_t
 * 
pD°
,

3185 
uöt32_t
 
fú°Index
,

3186 
uöt32_t
 
numPoöts
);

3200 
¨m_°©us
 
¨m_c⁄v_∑πül_q7
(

3201 
q7_t
 * 
pSrcA
,

3202 
uöt32_t
 
§cALí
,

3203 
q7_t
 * 
pSrcB
,

3204 
uöt32_t
 
§cBLí
,

3205 
q7_t
 * 
pD°
,

3206 
uöt32_t
 
fú°Index
,

3207 
uöt32_t
 
numPoöts
);

3216 
uöt8_t
 
M
;

3217 
uöt16_t
 
numT≠s
;

3218 
q15_t
 *
pC€ffs
;

3219 
q15_t
 *
pSèã
;

3220 } 
	t¨m_fú_decim©e_ö°™˚_q15
;

3228 
uöt8_t
 
M
;

3229 
uöt16_t
 
numT≠s
;

3230 
q31_t
 *
pC€ffs
;

3231 
q31_t
 *
pSèã
;

3233 } 
	t¨m_fú_decim©e_ö°™˚_q31
;

3241 
uöt8_t
 
M
;

3242 
uöt16_t
 
numT≠s
;

3243 
Êﬂt32_t
 *
pC€ffs
;

3244 
Êﬂt32_t
 *
pSèã
;

3246 } 
	t¨m_fú_decim©e_ö°™˚_f32
;

3259 
¨m_fú_decim©e_f32
(

3260 c⁄° 
¨m_fú_decim©e_ö°™˚_f32
 * 
S
,

3261 
Êﬂt32_t
 * 
pSrc
,

3262 
Êﬂt32_t
 * 
pD°
,

3263 
uöt32_t
 
blockSize
);

3278 
¨m_°©us
 
¨m_fú_decim©e_öô_f32
(

3279 
¨m_fú_decim©e_ö°™˚_f32
 * 
S
,

3280 
uöt16_t
 
numT≠s
,

3281 
uöt8_t
 
M
,

3282 
Êﬂt32_t
 * 
pC€ffs
,

3283 
Êﬂt32_t
 * 
pSèã
,

3284 
uöt32_t
 
blockSize
);

3295 
¨m_fú_decim©e_q15
(

3296 c⁄° 
¨m_fú_decim©e_ö°™˚_q15
 * 
S
,

3297 
q15_t
 * 
pSrc
,

3298 
q15_t
 * 
pD°
,

3299 
uöt32_t
 
blockSize
);

3310 
¨m_fú_decim©e_Á°_q15
(

3311 c⁄° 
¨m_fú_decim©e_ö°™˚_q15
 * 
S
,

3312 
q15_t
 * 
pSrc
,

3313 
q15_t
 * 
pD°
,

3314 
uöt32_t
 
blockSize
);

3330 
¨m_°©us
 
¨m_fú_decim©e_öô_q15
(

3331 
¨m_fú_decim©e_ö°™˚_q15
 * 
S
,

3332 
uöt16_t
 
numT≠s
,

3333 
uöt8_t
 
M
,

3334 
q15_t
 * 
pC€ffs
,

3335 
q15_t
 * 
pSèã
,

3336 
uöt32_t
 
blockSize
);

3347 
¨m_fú_decim©e_q31
(

3348 c⁄° 
¨m_fú_decim©e_ö°™˚_q31
 * 
S
,

3349 
q31_t
 * 
pSrc
,

3350 
q31_t
 * 
pD°
,

3351 
uöt32_t
 
blockSize
);

3362 
¨m_fú_decim©e_Á°_q31
(

3363 
¨m_fú_decim©e_ö°™˚_q31
 * 
S
,

3364 
q31_t
 * 
pSrc
,

3365 
q31_t
 * 
pD°
,

3366 
uöt32_t
 
blockSize
);

3381 
¨m_°©us
 
¨m_fú_decim©e_öô_q31
(

3382 
¨m_fú_decim©e_ö°™˚_q31
 * 
S
,

3383 
uöt16_t
 
numT≠s
,

3384 
uöt8_t
 
M
,

3385 
q31_t
 * 
pC€ffs
,

3386 
q31_t
 * 
pSèã
,

3387 
uöt32_t
 
blockSize
);

3397 
uöt8_t
 
L
;

3398 
uöt16_t
 
pha£Lígth
;

3399 
q15_t
 *
pC€ffs
;

3400 
q15_t
 *
pSèã
;

3401 } 
	t¨m_fú_öãΩﬁ©e_ö°™˚_q15
;

3409 
uöt8_t
 
L
;

3410 
uöt16_t
 
pha£Lígth
;

3411 
q31_t
 *
pC€ffs
;

3412 
q31_t
 *
pSèã
;

3413 } 
	t¨m_fú_öãΩﬁ©e_ö°™˚_q31
;

3421 
uöt8_t
 
L
;

3422 
uöt16_t
 
pha£Lígth
;

3423 
Êﬂt32_t
 *
pC€ffs
;

3424 
Êﬂt32_t
 *
pSèã
;

3425 } 
	t¨m_fú_öãΩﬁ©e_ö°™˚_f32
;

3437 
¨m_fú_öãΩﬁ©e_q15
(

3438 c⁄° 
¨m_fú_öãΩﬁ©e_ö°™˚_q15
 * 
S
,

3439 
q15_t
 * 
pSrc
,

3440 
q15_t
 * 
pD°
,

3441 
uöt32_t
 
blockSize
);

3456 
¨m_°©us
 
¨m_fú_öãΩﬁ©e_öô_q15
(

3457 
¨m_fú_öãΩﬁ©e_ö°™˚_q15
 * 
S
,

3458 
uöt8_t
 
L
,

3459 
uöt16_t
 
numT≠s
,

3460 
q15_t
 * 
pC€ffs
,

3461 
q15_t
 * 
pSèã
,

3462 
uöt32_t
 
blockSize
);

3473 
¨m_fú_öãΩﬁ©e_q31
(

3474 c⁄° 
¨m_fú_öãΩﬁ©e_ö°™˚_q31
 * 
S
,

3475 
q31_t
 * 
pSrc
,

3476 
q31_t
 * 
pD°
,

3477 
uöt32_t
 
blockSize
);

3491 
¨m_°©us
 
¨m_fú_öãΩﬁ©e_öô_q31
(

3492 
¨m_fú_öãΩﬁ©e_ö°™˚_q31
 * 
S
,

3493 
uöt8_t
 
L
,

3494 
uöt16_t
 
numT≠s
,

3495 
q31_t
 * 
pC€ffs
,

3496 
q31_t
 * 
pSèã
,

3497 
uöt32_t
 
blockSize
);

3509 
¨m_fú_öãΩﬁ©e_f32
(

3510 c⁄° 
¨m_fú_öãΩﬁ©e_ö°™˚_f32
 * 
S
,

3511 
Êﬂt32_t
 * 
pSrc
,

3512 
Êﬂt32_t
 * 
pD°
,

3513 
uöt32_t
 
blockSize
);

3527 
¨m_°©us
 
¨m_fú_öãΩﬁ©e_öô_f32
(

3528 
¨m_fú_öãΩﬁ©e_ö°™˚_f32
 * 
S
,

3529 
uöt8_t
 
L
,

3530 
uöt16_t
 
numT≠s
,

3531 
Êﬂt32_t
 * 
pC€ffs
,

3532 
Êﬂt32_t
 * 
pSèã
,

3533 
uöt32_t
 
blockSize
);

3541 
uöt8_t
 
numSèges
;

3542 
q63_t
 *
pSèã
;

3543 
q31_t
 *
pC€ffs
;

3544 
uöt8_t
 
po°Shi·
;

3546 } 
	t¨m_biquad_ˇs_df1_32x64_ös_q31
;

3557 
¨m_biquad_ˇs_df1_32x64_q31
(

3558 c⁄° 
¨m_biquad_ˇs_df1_32x64_ös_q31
 * 
S
,

3559 
q31_t
 * 
pSrc
,

3560 
q31_t
 * 
pD°
,

3561 
uöt32_t
 
blockSize
);

3573 
¨m_biquad_ˇs_df1_32x64_öô_q31
(

3574 
¨m_biquad_ˇs_df1_32x64_ös_q31
 * 
S
,

3575 
uöt8_t
 
numSèges
,

3576 
q31_t
 * 
pC€ffs
,

3577 
q63_t
 * 
pSèã
,

3578 
uöt8_t
 
po°Shi·
);

3588 
uöt8_t
 
numSèges
;

3589 
Êﬂt32_t
 *
pSèã
;

3590 
Êﬂt32_t
 *
pC€ffs
;

3591 } 
	t¨m_biquad_ˇsˇde_df2T_ö°™˚_f32
;

3603 
¨m_biquad_ˇsˇde_df2T_f32
(

3604 c⁄° 
¨m_biquad_ˇsˇde_df2T_ö°™˚_f32
 * 
S
,

3605 
Êﬂt32_t
 * 
pSrc
,

3606 
Êﬂt32_t
 * 
pD°
,

3607 
uöt32_t
 
blockSize
);

3619 
¨m_biquad_ˇsˇde_df2T_öô_f32
(

3620 
¨m_biquad_ˇsˇde_df2T_ö°™˚_f32
 * 
S
,

3621 
uöt8_t
 
numSèges
,

3622 
Êﬂt32_t
 * 
pC€ffs
,

3623 
Êﬂt32_t
 * 
pSèã
);

3633 
uöt16_t
 
numSèges
;

3634 
q15_t
 *
pSèã
;

3635 
q15_t
 *
pC€ffs
;

3636 } 
	t¨m_fú_œâi˚_ö°™˚_q15
;

3644 
uöt16_t
 
numSèges
;

3645 
q31_t
 *
pSèã
;

3646 
q31_t
 *
pC€ffs
;

3647 } 
	t¨m_fú_œâi˚_ö°™˚_q31
;

3655 
uöt16_t
 
numSèges
;

3656 
Êﬂt32_t
 *
pSèã
;

3657 
Êﬂt32_t
 *
pC€ffs
;

3658 } 
	t¨m_fú_œâi˚_ö°™˚_f32
;

3669 
¨m_fú_œâi˚_öô_q15
(

3670 
¨m_fú_œâi˚_ö°™˚_q15
 * 
S
,

3671 
uöt16_t
 
numSèges
,

3672 
q15_t
 * 
pC€ffs
,

3673 
q15_t
 * 
pSèã
);

3684 
¨m_fú_œâi˚_q15
(

3685 c⁄° 
¨m_fú_œâi˚_ö°™˚_q15
 * 
S
,

3686 
q15_t
 * 
pSrc
,

3687 
q15_t
 * 
pD°
,

3688 
uöt32_t
 
blockSize
);

3699 
¨m_fú_œâi˚_öô_q31
(

3700 
¨m_fú_œâi˚_ö°™˚_q31
 * 
S
,

3701 
uöt16_t
 
numSèges
,

3702 
q31_t
 * 
pC€ffs
,

3703 
q31_t
 * 
pSèã
);

3715 
¨m_fú_œâi˚_q31
(

3716 c⁄° 
¨m_fú_œâi˚_ö°™˚_q31
 * 
S
,

3717 
q31_t
 * 
pSrc
,

3718 
q31_t
 * 
pD°
,

3719 
uöt32_t
 
blockSize
);

3730 
¨m_fú_œâi˚_öô_f32
(

3731 
¨m_fú_œâi˚_ö°™˚_f32
 * 
S
,

3732 
uöt16_t
 
numSèges
,

3733 
Êﬂt32_t
 * 
pC€ffs
,

3734 
Êﬂt32_t
 * 
pSèã
);

3745 
¨m_fú_œâi˚_f32
(

3746 c⁄° 
¨m_fú_œâi˚_ö°™˚_f32
 * 
S
,

3747 
Êﬂt32_t
 * 
pSrc
,

3748 
Êﬂt32_t
 * 
pD°
,

3749 
uöt32_t
 
blockSize
);

3756 
uöt16_t
 
numSèges
;

3757 
q15_t
 *
pSèã
;

3758 
q15_t
 *
pkC€ffs
;

3759 
q15_t
 *
pvC€ffs
;

3760 } 
	t¨m_iú_œâi˚_ö°™˚_q15
;

3767 
uöt16_t
 
numSèges
;

3768 
q31_t
 *
pSèã
;

3769 
q31_t
 *
pkC€ffs
;

3770 
q31_t
 *
pvC€ffs
;

3771 } 
	t¨m_iú_œâi˚_ö°™˚_q31
;

3778 
uöt16_t
 
numSèges
;

3779 
Êﬂt32_t
 *
pSèã
;

3780 
Êﬂt32_t
 *
pkC€ffs
;

3781 
Êﬂt32_t
 *
pvC€ffs
;

3782 } 
	t¨m_iú_œâi˚_ö°™˚_f32
;

3793 
¨m_iú_œâi˚_f32
(

3794 c⁄° 
¨m_iú_œâi˚_ö°™˚_f32
 * 
S
,

3795 
Êﬂt32_t
 * 
pSrc
,

3796 
Êﬂt32_t
 * 
pD°
,

3797 
uöt32_t
 
blockSize
);

3810 
¨m_iú_œâi˚_öô_f32
(

3811 
¨m_iú_œâi˚_ö°™˚_f32
 * 
S
,

3812 
uöt16_t
 
numSèges
,

3813 
Êﬂt32_t
 *
pkC€ffs
,

3814 
Êﬂt32_t
 *
pvC€ffs
,

3815 
Êﬂt32_t
 *
pSèã
,

3816 
uöt32_t
 
blockSize
);

3828 
¨m_iú_œâi˚_q31
(

3829 c⁄° 
¨m_iú_œâi˚_ö°™˚_q31
 * 
S
,

3830 
q31_t
 * 
pSrc
,

3831 
q31_t
 * 
pD°
,

3832 
uöt32_t
 
blockSize
);

3846 
¨m_iú_œâi˚_öô_q31
(

3847 
¨m_iú_œâi˚_ö°™˚_q31
 * 
S
,

3848 
uöt16_t
 
numSèges
,

3849 
q31_t
 *
pkC€ffs
,

3850 
q31_t
 *
pvC€ffs
,

3851 
q31_t
 *
pSèã
,

3852 
uöt32_t
 
blockSize
);

3864 
¨m_iú_œâi˚_q15
(

3865 c⁄° 
¨m_iú_œâi˚_ö°™˚_q15
 * 
S
,

3866 
q15_t
 * 
pSrc
,

3867 
q15_t
 * 
pD°
,

3868 
uöt32_t
 
blockSize
);

3882 
¨m_iú_œâi˚_öô_q15
(

3883 
¨m_iú_œâi˚_ö°™˚_q15
 * 
S
,

3884 
uöt16_t
 
numSèges
,

3885 
q15_t
 *
pkC€ffs
,

3886 
q15_t
 *
pvC€ffs
,

3887 
q15_t
 *
pSèã
,

3888 
uöt32_t
 
blockSize
);

3896 
uöt16_t
 
numT≠s
;

3897 
Êﬂt32_t
 *
pSèã
;

3898 
Êﬂt32_t
 *
pC€ffs
;

3899 
Êﬂt32_t
 
mu
;

3900 } 
	t¨m_lms_ö°™˚_f32
;

3913 
¨m_lms_f32
(

3914 c⁄° 
¨m_lms_ö°™˚_f32
 * 
S
,

3915 
Êﬂt32_t
 * 
pSrc
,

3916 
Êﬂt32_t
 * 
pRef
,

3917 
Êﬂt32_t
 * 
pOut
,

3918 
Êﬂt32_t
 * 
pEº
,

3919 
uöt32_t
 
blockSize
);

3932 
¨m_lms_öô_f32
(

3933 
¨m_lms_ö°™˚_f32
 * 
S
,

3934 
uöt16_t
 
numT≠s
,

3935 
Êﬂt32_t
 * 
pC€ffs
,

3936 
Êﬂt32_t
 * 
pSèã
,

3937 
Êﬂt32_t
 
mu
,

3938 
uöt32_t
 
blockSize
);

3946 
uöt16_t
 
numT≠s
;

3947 
q15_t
 *
pSèã
;

3948 
q15_t
 *
pC€ffs
;

3949 
q15_t
 
mu
;

3950 
uöt32_t
 
po°Shi·
;

3951 } 
	t¨m_lms_ö°™˚_q15
;

3966 
¨m_lms_öô_q15
(

3967 
¨m_lms_ö°™˚_q15
 * 
S
,

3968 
uöt16_t
 
numT≠s
,

3969 
q15_t
 * 
pC€ffs
,

3970 
q15_t
 * 
pSèã
,

3971 
q15_t
 
mu
,

3972 
uöt32_t
 
blockSize
,

3973 
uöt32_t
 
po°Shi·
);

3986 
¨m_lms_q15
(

3987 c⁄° 
¨m_lms_ö°™˚_q15
 * 
S
,

3988 
q15_t
 * 
pSrc
,

3989 
q15_t
 * 
pRef
,

3990 
q15_t
 * 
pOut
,

3991 
q15_t
 * 
pEº
,

3992 
uöt32_t
 
blockSize
);

4001 
uöt16_t
 
numT≠s
;

4002 
q31_t
 *
pSèã
;

4003 
q31_t
 *
pC€ffs
;

4004 
q31_t
 
mu
;

4005 
uöt32_t
 
po°Shi·
;

4007 } 
	t¨m_lms_ö°™˚_q31
;

4020 
¨m_lms_q31
(

4021 c⁄° 
¨m_lms_ö°™˚_q31
 * 
S
,

4022 
q31_t
 * 
pSrc
,

4023 
q31_t
 * 
pRef
,

4024 
q31_t
 * 
pOut
,

4025 
q31_t
 * 
pEº
,

4026 
uöt32_t
 
blockSize
);

4040 
¨m_lms_öô_q31
(

4041 
¨m_lms_ö°™˚_q31
 * 
S
,

4042 
uöt16_t
 
numT≠s
,

4043 
q31_t
 *
pC€ffs
,

4044 
q31_t
 *
pSèã
,

4045 
q31_t
 
mu
,

4046 
uöt32_t
 
blockSize
,

4047 
uöt32_t
 
po°Shi·
);

4055 
uöt16_t
 
numT≠s
;

4056 
Êﬂt32_t
 *
pSèã
;

4057 
Êﬂt32_t
 *
pC€ffs
;

4058 
Êﬂt32_t
 
mu
;

4059 
Êﬂt32_t
 
íîgy
;

4060 
Êﬂt32_t
 
x0
;

4061 } 
	t¨m_lms_n‹m_ö°™˚_f32
;

4074 
¨m_lms_n‹m_f32
(

4075 
¨m_lms_n‹m_ö°™˚_f32
 * 
S
,

4076 
Êﬂt32_t
 * 
pSrc
,

4077 
Êﬂt32_t
 * 
pRef
,

4078 
Êﬂt32_t
 * 
pOut
,

4079 
Êﬂt32_t
 * 
pEº
,

4080 
uöt32_t
 
blockSize
);

4093 
¨m_lms_n‹m_öô_f32
(

4094 
¨m_lms_n‹m_ö°™˚_f32
 * 
S
,

4095 
uöt16_t
 
numT≠s
,

4096 
Êﬂt32_t
 * 
pC€ffs
,

4097 
Êﬂt32_t
 * 
pSèã
,

4098 
Êﬂt32_t
 
mu
,

4099 
uöt32_t
 
blockSize
);

4107 
uöt16_t
 
numT≠s
;

4108 
q31_t
 *
pSèã
;

4109 
q31_t
 *
pC€ffs
;

4110 
q31_t
 
mu
;

4111 
uöt8_t
 
po°Shi·
;

4112 
q31_t
 *
ªcùTabÀ
;

4113 
q31_t
 
íîgy
;

4114 
q31_t
 
x0
;

4115 } 
	t¨m_lms_n‹m_ö°™˚_q31
;

4128 
¨m_lms_n‹m_q31
(

4129 
¨m_lms_n‹m_ö°™˚_q31
 * 
S
,

4130 
q31_t
 * 
pSrc
,

4131 
q31_t
 * 
pRef
,

4132 
q31_t
 * 
pOut
,

4133 
q31_t
 * 
pEº
,

4134 
uöt32_t
 
blockSize
);

4148 
¨m_lms_n‹m_öô_q31
(

4149 
¨m_lms_n‹m_ö°™˚_q31
 * 
S
,

4150 
uöt16_t
 
numT≠s
,

4151 
q31_t
 * 
pC€ffs
,

4152 
q31_t
 * 
pSèã
,

4153 
q31_t
 
mu
,

4154 
uöt32_t
 
blockSize
,

4155 
uöt8_t
 
po°Shi·
);

4163 
uöt16_t
 
numT≠s
;

4164 
q15_t
 *
pSèã
;

4165 
q15_t
 *
pC€ffs
;

4166 
q15_t
 
mu
;

4167 
uöt8_t
 
po°Shi·
;

4168 
q15_t
 *
ªcùTabÀ
;

4169 
q15_t
 
íîgy
;

4170 
q15_t
 
x0
;

4171 } 
	t¨m_lms_n‹m_ö°™˚_q15
;

4184 
¨m_lms_n‹m_q15
(

4185 
¨m_lms_n‹m_ö°™˚_q15
 * 
S
,

4186 
q15_t
 * 
pSrc
,

4187 
q15_t
 * 
pRef
,

4188 
q15_t
 * 
pOut
,

4189 
q15_t
 * 
pEº
,

4190 
uöt32_t
 
blockSize
);

4205 
¨m_lms_n‹m_öô_q15
(

4206 
¨m_lms_n‹m_ö°™˚_q15
 * 
S
,

4207 
uöt16_t
 
numT≠s
,

4208 
q15_t
 * 
pC€ffs
,

4209 
q15_t
 * 
pSèã
,

4210 
q15_t
 
mu
,

4211 
uöt32_t
 
blockSize
,

4212 
uöt8_t
 
po°Shi·
);

4224 
¨m_c‹ªœã_f32
(

4225 
Êﬂt32_t
 * 
pSrcA
,

4226 
uöt32_t
 
§cALí
,

4227 
Êﬂt32_t
 * 
pSrcB
,

4228 
uöt32_t
 
§cBLí
,

4229 
Êﬂt32_t
 * 
pD°
);

4241 
¨m_c‹ªœã_q15
(

4242 
q15_t
 * 
pSrcA
,

4243 
uöt32_t
 
§cALí
,

4244 
q15_t
 * 
pSrcB
,

4245 
uöt32_t
 
§cBLí
,

4246 
q15_t
 * 
pD°
);

4258 
¨m_c‹ªœã_Á°_q15
(

4259 
q15_t
 * 
pSrcA
,

4260 
uöt32_t
 
§cALí
,

4261 
q15_t
 * 
pSrcB
,

4262 
uöt32_t
 
§cBLí
,

4263 
q15_t
 * 
pD°
);

4275 
¨m_c‹ªœã_q31
(

4276 
q31_t
 * 
pSrcA
,

4277 
uöt32_t
 
§cALí
,

4278 
q31_t
 * 
pSrcB
,

4279 
uöt32_t
 
§cBLí
,

4280 
q31_t
 * 
pD°
);

4292 
¨m_c‹ªœã_Á°_q31
(

4293 
q31_t
 * 
pSrcA
,

4294 
uöt32_t
 
§cALí
,

4295 
q31_t
 * 
pSrcB
,

4296 
uöt32_t
 
§cBLí
,

4297 
q31_t
 * 
pD°
);

4309 
¨m_c‹ªœã_q7
(

4310 
q7_t
 * 
pSrcA
,

4311 
uöt32_t
 
§cALí
,

4312 
q7_t
 * 
pSrcB
,

4313 
uöt32_t
 
§cBLí
,

4314 
q7_t
 * 
pD°
);

4321 
uöt16_t
 
numT≠s
;

4322 
uöt16_t
 
°©eIndex
;

4323 
Êﬂt32_t
 *
pSèã
;

4324 
Êﬂt32_t
 *
pC€ffs
;

4325 
uöt16_t
 
maxDñay
;

4326 
öt32_t
 *
pT≠Dñay
;

4327 } 
	t¨m_fú_•¨£_ö°™˚_f32
;

4335 
uöt16_t
 
numT≠s
;

4336 
uöt16_t
 
°©eIndex
;

4337 
q31_t
 *
pSèã
;

4338 
q31_t
 *
pC€ffs
;

4339 
uöt16_t
 
maxDñay
;

4340 
öt32_t
 *
pT≠Dñay
;

4341 } 
	t¨m_fú_•¨£_ö°™˚_q31
;

4349 
uöt16_t
 
numT≠s
;

4350 
uöt16_t
 
°©eIndex
;

4351 
q15_t
 *
pSèã
;

4352 
q15_t
 *
pC€ffs
;

4353 
uöt16_t
 
maxDñay
;

4354 
öt32_t
 *
pT≠Dñay
;

4355 } 
	t¨m_fú_•¨£_ö°™˚_q15
;

4363 
uöt16_t
 
numT≠s
;

4364 
uöt16_t
 
°©eIndex
;

4365 
q7_t
 *
pSèã
;

4366 
q7_t
 *
pC€ffs
;

4367 
uöt16_t
 
maxDñay
;

4368 
öt32_t
 *
pT≠Dñay
;

4369 } 
	t¨m_fú_•¨£_ö°™˚_q7
;

4381 
¨m_fú_•¨£_f32
(

4382 
¨m_fú_•¨£_ö°™˚_f32
 * 
S
,

4383 
Êﬂt32_t
 * 
pSrc
,

4384 
Êﬂt32_t
 * 
pD°
,

4385 
Êﬂt32_t
 * 
pS¸©chIn
,

4386 
uöt32_t
 
blockSize
);

4400 
¨m_fú_•¨£_öô_f32
(

4401 
¨m_fú_•¨£_ö°™˚_f32
 * 
S
,

4402 
uöt16_t
 
numT≠s
,

4403 
Êﬂt32_t
 * 
pC€ffs
,

4404 
Êﬂt32_t
 * 
pSèã
,

4405 
öt32_t
 * 
pT≠Dñay
,

4406 
uöt16_t
 
maxDñay
,

4407 
uöt32_t
 
blockSize
);

4419 
¨m_fú_•¨£_q31
(

4420 
¨m_fú_•¨£_ö°™˚_q31
 * 
S
,

4421 
q31_t
 * 
pSrc
,

4422 
q31_t
 * 
pD°
,

4423 
q31_t
 * 
pS¸©chIn
,

4424 
uöt32_t
 
blockSize
);

4438 
¨m_fú_•¨£_öô_q31
(

4439 
¨m_fú_•¨£_ö°™˚_q31
 * 
S
,

4440 
uöt16_t
 
numT≠s
,

4441 
q31_t
 * 
pC€ffs
,

4442 
q31_t
 * 
pSèã
,

4443 
öt32_t
 * 
pT≠Dñay
,

4444 
uöt16_t
 
maxDñay
,

4445 
uöt32_t
 
blockSize
);

4458 
¨m_fú_•¨£_q15
(

4459 
¨m_fú_•¨£_ö°™˚_q15
 * 
S
,

4460 
q15_t
 * 
pSrc
,

4461 
q15_t
 * 
pD°
,

4462 
q15_t
 * 
pS¸©chIn
,

4463 
q31_t
 * 
pS¸©chOut
,

4464 
uöt32_t
 
blockSize
);

4479 
¨m_fú_•¨£_öô_q15
(

4480 
¨m_fú_•¨£_ö°™˚_q15
 * 
S
,

4481 
uöt16_t
 
numT≠s
,

4482 
q15_t
 * 
pC€ffs
,

4483 
q15_t
 * 
pSèã
,

4484 
öt32_t
 * 
pT≠Dñay
,

4485 
uöt16_t
 
maxDñay
,

4486 
uöt32_t
 
blockSize
);

4499 
¨m_fú_•¨£_q7
(

4500 
¨m_fú_•¨£_ö°™˚_q7
 * 
S
,

4501 
q7_t
 * 
pSrc
,

4502 
q7_t
 * 
pD°
,

4503 
q7_t
 * 
pS¸©chIn
,

4504 
q31_t
 * 
pS¸©chOut
,

4505 
uöt32_t
 
blockSize
);

4519 
¨m_fú_•¨£_öô_q7
(

4520 
¨m_fú_•¨£_ö°™˚_q7
 * 
S
,

4521 
uöt16_t
 
numT≠s
,

4522 
q7_t
 * 
pC€ffs
,

4523 
q7_t
 * 
pSèã
,

4524 
öt32_t
 *
pT≠Dñay
,

4525 
uöt16_t
 
maxDñay
,

4526 
uöt32_t
 
blockSize
);

4537 
¨m_sö_cos_f32
(

4538 
Êﬂt32_t
 
thëa
,

4539 
Êﬂt32_t
 *
pSöVÆ
,

4540 
Êﬂt32_t
 *
pCcosVÆ
);

4550 
¨m_sö_cos_q31
(

4551 
q31_t
 
thëa
,

4552 
q31_t
 *
pSöVÆ
,

4553 
q31_t
 *
pCosVÆ
);

4564 
¨m_cm∂x_c⁄j_f32
(

4565 
Êﬂt32_t
 * 
pSrc
,

4566 
Êﬂt32_t
 * 
pD°
,

4567 
uöt32_t
 
numSam∂es
);

4577 
¨m_cm∂x_c⁄j_q31
(

4578 
q31_t
 * 
pSrc
,

4579 
q31_t
 * 
pD°
,

4580 
uöt32_t
 
numSam∂es
);

4590 
¨m_cm∂x_c⁄j_q15
(

4591 
q15_t
 * 
pSrc
,

4592 
q15_t
 * 
pD°
,

4593 
uöt32_t
 
numSam∂es
);

4605 
¨m_cm∂x_mag_squ¨ed_f32
(

4606 
Êﬂt32_t
 * 
pSrc
,

4607 
Êﬂt32_t
 * 
pD°
,

4608 
uöt32_t
 
numSam∂es
);

4618 
¨m_cm∂x_mag_squ¨ed_q31
(

4619 
q31_t
 * 
pSrc
,

4620 
q31_t
 * 
pD°
,

4621 
uöt32_t
 
numSam∂es
);

4631 
¨m_cm∂x_mag_squ¨ed_q15
(

4632 
q15_t
 * 
pSrc
,

4633 
q15_t
 * 
pD°
,

4634 
uöt32_t
 
numSam∂es
);

4711 
__INLINE
 
Êﬂt32_t
 
¨m_pid_f32
(

4712 
¨m_pid_ö°™˚_f32
 * 
S
,

4713 
Êﬂt32_t
 
ö
)

4715 
Êﬂt32_t
 
out
;

4718 
out
 = (
S
->
A0
 * 
ö
) +

4719 (
S
->
A1
 * S->
°©e
[0]Ë+ (S->
A2
 * S->state[1]) + (S->state[2]);

4722 
S
->
°©e
[1] = S->state[0];

4723 
S
->
°©e
[0] = 
ö
;

4724 
S
->
°©e
[2] = 
out
;

4727  (
out
);

4746 
__INLINE
 
q31_t
 
¨m_pid_q31
(

4747 
¨m_pid_ö°™˚_q31
 * 
S
,

4748 
q31_t
 
ö
)

4750 
q63_t
 
acc
;

4751 
q31_t
 
out
;

4754 
acc
 = (
q63_t
Ë
S
->
A0
 * 
ö
;

4757 
acc
 +(
q63_t
Ë
S
->
A1
 * S->
°©e
[0];

4760 
acc
 +(
q63_t
Ë
S
->
A2
 * S->
°©e
[1];

4763 
out
 = (
q31_t
Ë(
acc
 >> 31u);

4766 
out
 +
S
->
°©e
[2];

4769 
S
->
°©e
[1] = S->state[0];

4770 
S
->
°©e
[0] = 
ö
;

4771 
S
->
°©e
[2] = 
out
;

4774  (
out
);

4794 
__INLINE
 
q15_t
 
¨m_pid_q15
(

4795 
¨m_pid_ö°™˚_q15
 * 
S
,

4796 
q15_t
 
ö
)

4798 
q63_t
 
acc
;

4799 
q15_t
 
out
;

4803 #ifde‡
ARM_MATH_CM0


4806 
acc
 = ((
q31_t
Ë
S
->
A0
 )* 
ö
 ;

4811 
acc
 = (
q31_t
Ë
__SMUAD
(
S
->
A0
, 
ö
);

4815 #ifde‡
ARM_MATH_CM0


4818 
acc
 +(
q31_t
Ë
S
->
A1
 * S->
°©e
[0] ;

4819 
acc
 +(
q31_t
Ë
S
->
A2
 * S->
°©e
[1] ;

4824 
acc
 = 
__SMLALD
(
S
->
A1
, (
q31_t
)
__SIMD32
(S->
°©e
),ácc);

4829 
acc
 +(
q31_t
Ë
S
->
°©e
[2] << 15;

4832 
out
 = (
q15_t
Ë(
__SSAT
((
acc
 >> 15), 16));

4835 
S
->
°©e
[1] = S->state[0];

4836 
S
->
°©e
[0] = 
ö
;

4837 
S
->
°©e
[2] = 
out
;

4840  (
out
);

4857 
¨m_°©us
 
¨m_m©_övî£_f32
(

4858 c⁄° 
¨m_m©rix_ö°™˚_f32
 * 
§c
,

4859 
¨m_m©rix_ö°™˚_f32
 * 
d°
);

4905 
__INLINE
 
¨m_˛¨ke_f32
(

4906 
Êﬂt32_t
 
Ia
,

4907 
Êﬂt32_t
 
Ib
,

4908 
Êﬂt32_t
 * 
pIÆpha
,

4909 
Êﬂt32_t
 * 
pIbëa
)

4912 *
pIÆpha
 = 
Ia
;

4915 *
pIbëa
 = ((
Êﬂt32_t
Ë0.57735026919 * 
Ia
 + (Êﬂt32_tË1.15470053838 * 
Ib
);

4934 
__INLINE
 
¨m_˛¨ke_q31
(

4935 
q31_t
 
Ia
,

4936 
q31_t
 
Ib
,

4937 
q31_t
 * 
pIÆpha
,

4938 
q31_t
 * 
pIbëa
)

4940 
q31_t
 
¥odu˘1
, 
¥odu˘2
;

4943 *
pIÆpha
 = 
Ia
;

4946 
¥odu˘1
 = (
q31_t
Ë(((
q63_t
Ë
Ia
 * 0x24F34E8B) >> 30);

4949 
¥odu˘2
 = (
q31_t
Ë(((
q63_t
Ë
Ib
 * 0x49E69D16) >> 30);

4952 *
pIbëa
 = 
__QADD
(
¥odu˘1
, 
¥odu˘2
);

4966 
¨m_q7_to_q31
(

4967 
q7_t
 * 
pSrc
,

4968 
q31_t
 * 
pD°
,

4969 
uöt32_t
 
blockSize
);

5009 
__INLINE
 
¨m_öv_˛¨ke_f32
(

5010 
Êﬂt32_t
 
IÆpha
,

5011 
Êﬂt32_t
 
Ibëa
,

5012 
Êﬂt32_t
 * 
pIa
,

5013 
Êﬂt32_t
 * 
pIb
)

5016 *
pIa
 = 
IÆpha
;

5019 *
pIb
 = -0.5 * 
IÆpha
 + (
Êﬂt32_t
Ë0.8660254039 *
Ibëa
;

5038 
__INLINE
 
¨m_öv_˛¨ke_q31
(

5039 
q31_t
 
IÆpha
,

5040 
q31_t
 
Ibëa
,

5041 
q31_t
 * 
pIa
,

5042 
q31_t
 * 
pIb
)

5044 
q31_t
 
¥odu˘1
, 
¥odu˘2
;

5047 *
pIa
 = 
IÆpha
;

5050 
¥odu˘1
 = (
q31_t
Ë(((
q63_t
Ë(
IÆpha
) * (0x40000000)) >> 31);

5053 
¥odu˘2
 = (
q31_t
Ë(((
q63_t
Ë(
Ibëa
) * (0x6ED9EBA1)) >> 31);

5056 *
pIb
 = 
__QSUB
(
¥odu˘2
, 
¥odu˘1
);

5071 
¨m_q7_to_q15
(

5072 
q7_t
 * 
pSrc
,

5073 
q15_t
 * 
pD°
,

5074 
uöt32_t
 
blockSize
);

5125 
__INLINE
 
¨m_∑rk_f32
(

5126 
Êﬂt32_t
 
IÆpha
,

5127 
Êﬂt32_t
 
Ibëa
,

5128 
Êﬂt32_t
 * 
pId
,

5129 
Êﬂt32_t
 * 
pIq
,

5130 
Êﬂt32_t
 
söVÆ
,

5131 
Êﬂt32_t
 
cosVÆ
)

5134 *
pId
 = 
IÆpha
 * 
cosVÆ
 + 
Ibëa
 * 
söVÆ
;

5137 *
pIq
 = -
IÆpha
 * 
söVÆ
 + 
Ibëa
 * 
cosVÆ
;

5159 
__INLINE
 
¨m_∑rk_q31
(

5160 
q31_t
 
IÆpha
,

5161 
q31_t
 
Ibëa
,

5162 
q31_t
 * 
pId
,

5163 
q31_t
 * 
pIq
,

5164 
q31_t
 
söVÆ
,

5165 
q31_t
 
cosVÆ
)

5167 
q31_t
 
¥odu˘1
, 
¥odu˘2
;

5168 
q31_t
 
¥odu˘3
, 
¥odu˘4
;

5171 
¥odu˘1
 = (
q31_t
Ë(((
q63_t
Ë(
IÆpha
Ë* (
cosVÆ
)) >> 31);

5174 
¥odu˘2
 = (
q31_t
Ë(((
q63_t
Ë(
Ibëa
Ë* (
söVÆ
)) >> 31);

5178 
¥odu˘3
 = (
q31_t
Ë(((
q63_t
Ë(
IÆpha
Ë* (
söVÆ
)) >> 31);

5181 
¥odu˘4
 = (
q31_t
Ë(((
q63_t
Ë(
Ibëa
Ë* (
cosVÆ
)) >> 31);

5184 *
pId
 = 
__QADD
(
¥odu˘1
, 
¥odu˘2
);

5187 *
pIq
 = 
__QSUB
(
¥odu˘4
, 
¥odu˘3
);

5201 
¨m_q7_to_Êﬂt
(

5202 
q7_t
 * 
pSrc
,

5203 
Êﬂt32_t
 * 
pD°
,

5204 
uöt32_t
 
blockSize
);

5244 
__INLINE
 
¨m_öv_∑rk_f32
(

5245 
Êﬂt32_t
 
Id
,

5246 
Êﬂt32_t
 
Iq
,

5247 
Êﬂt32_t
 * 
pIÆpha
,

5248 
Êﬂt32_t
 * 
pIbëa
,

5249 
Êﬂt32_t
 
söVÆ
,

5250 
Êﬂt32_t
 
cosVÆ
)

5253 *
pIÆpha
 = 
Id
 * 
cosVÆ
 - 
Iq
 * 
söVÆ
;

5256 *
pIbëa
 = 
Id
 * 
söVÆ
 + 
Iq
 * 
cosVÆ
;

5279 
__INLINE
 
¨m_öv_∑rk_q31
(

5280 
q31_t
 
Id
,

5281 
q31_t
 
Iq
,

5282 
q31_t
 * 
pIÆpha
,

5283 
q31_t
 * 
pIbëa
,

5284 
q31_t
 
söVÆ
,

5285 
q31_t
 
cosVÆ
)

5287 
q31_t
 
¥odu˘1
, 
¥odu˘2
;

5288 
q31_t
 
¥odu˘3
, 
¥odu˘4
;

5291 
¥odu˘1
 = (
q31_t
Ë(((
q63_t
Ë(
Id
Ë* (
cosVÆ
)) >> 31);

5294 
¥odu˘2
 = (
q31_t
Ë(((
q63_t
Ë(
Iq
Ë* (
söVÆ
)) >> 31);

5298 
¥odu˘3
 = (
q31_t
Ë(((
q63_t
Ë(
Id
Ë* (
söVÆ
)) >> 31);

5301 
¥odu˘4
 = (
q31_t
Ë(((
q63_t
Ë(
Iq
Ë* (
cosVÆ
)) >> 31);

5304 *
pIÆpha
 = 
__QSUB
(
¥odu˘1
, 
¥odu˘2
);

5307 *
pIbëa
 = 
__QADD
(
¥odu˘4
, 
¥odu˘3
);

5323 
¨m_q31_to_Êﬂt
(

5324 
q31_t
 * 
pSrc
,

5325 
Êﬂt32_t
 * 
pD°
,

5326 
uöt32_t
 
blockSize
);

5377 
__INLINE
 
Êﬂt32_t
 
¨m_löór_öãΩ_f32
(

5378 
¨m_löór_öãΩ_ö°™˚_f32
 * 
S
,

5379 
Êﬂt32_t
 
x
)

5382 
Êﬂt32_t
 
y
;

5383 
Êﬂt32_t
 
x0
, 
x1
;

5384 
Êﬂt32_t
 
y0
, 
y1
;

5385 
Êﬂt32_t
 
xS∑cög
 = 
S
->xSpacing;

5386 
öt32_t
 
i
;

5387 
Êﬂt32_t
 *
pYD©a
 = 
S
->pYData;

5390 
i
 = (
x
 - 
S
->
x1
Ë/ 
xS∑cög
;

5392 if(
i
 < 0)

5395 
y
 = 
pYD©a
[0];

5397 if(
i
 >
S
->
nVÆues
)

5400 
y
 = 
pYD©a
[
S
->
nVÆues
-1];

5405 
x0
 = 
S
->
x1
 + 
i
 * 
xS∑cög
;

5406 
x1
 = 
S
->x1 + (
i
 +1Ë* 
xS∑cög
;

5409 
y0
 = 
pYD©a
[
i
];

5410 
y1
 = 
pYD©a
[
i
 + 1];

5413 
y
 = 
y0
 + (
x
 - 
x0
Ë* ((
y1
 - y0)/(
x1
-x0));

5418  (
y
);

5436 
__INLINE
 
q31_t
 
¨m_löór_öãΩ_q31
(q31_à*
pYD©a
,

5437 
q31_t
 
x
, 
uöt32_t
 
nVÆues
)

5439 
q31_t
 
y
;

5440 
q31_t
 
y0
, 
y1
;

5441 
q31_t
 
‰a˘
;

5442 
öt32_t
 
ödex
;

5447 
ödex
 = ((
x
 & 0xFFF00000) >> 20);

5449 if(
ödex
 >(
nVÆues
 - 1))

5451 (
pYD©a
[
nVÆues
 - 1]);

5453 if(
ödex
 < 0)

5455 (
pYD©a
[0]);

5462 
‰a˘
 = (
x
 & 0x000FFFFF) << 11;

5465 
y0
 = 
pYD©a
[
ödex
];

5466 
y1
 = 
pYD©a
[
ödex
 + 1u];

5469 
y
 = ((
q31_t
Ë((
q63_t
Ë
y0
 * (0x7FFFFFFF - 
‰a˘
) >> 32));

5472 
y
 +((
q31_t
Ë(((
q63_t
Ë
y1
 * 
‰a˘
) >> 32));

5475  (
y
 << 1u);

5496 
__INLINE
 
q15_t
 
¨m_löór_öãΩ_q15
(q15_à*
pYD©a
, 
q31_t
 
x
, 
uöt32_t
 
nVÆues
)

5498 
q63_t
 
y
;

5499 
q15_t
 
y0
, 
y1
;

5500 
q31_t
 
‰a˘
;

5501 
öt32_t
 
ödex
;

5506 
ödex
 = ((
x
 & 0xFFF00000) >> 20u);

5508 if(
ödex
 >(
nVÆues
 - 1))

5510 (
pYD©a
[
nVÆues
 - 1]);

5512 if(
ödex
 < 0)

5514 (
pYD©a
[0]);

5520 
‰a˘
 = (
x
 & 0x000FFFFF);

5523 
y0
 = 
pYD©a
[
ödex
];

5524 
y1
 = 
pYD©a
[
ödex
 + 1u];

5527 
y
 = ((
q63_t
Ë
y0
 * (0xFFFFF - 
‰a˘
));

5530 
y
 +((
q63_t
Ë
y1
 * (
‰a˘
));

5533  (
y
 >> 20);

5553 
__INLINE
 
q7_t
 
¨m_löór_öãΩ_q7
(q7_à*
pYD©a
, 
q31_t
 
x
, 
uöt32_t
 
nVÆues
)

5555 
q31_t
 
y
;

5556 
q7_t
 
y0
, 
y1
;

5557 
q31_t
 
‰a˘
;

5558 
öt32_t
 
ödex
;

5563 
ödex
 = ((
x
 & 0xFFF00000) >> 20u);

5566 if(
ödex
 >(
nVÆues
 - 1))

5568 (
pYD©a
[
nVÆues
 - 1]);

5570 if(
ödex
 < 0)

5572 (
pYD©a
[0]);

5579 
‰a˘
 = (
x
 & 0x000FFFFF);

5582 
y0
 = 
pYD©a
[
ödex
];

5583 
y1
 = 
pYD©a
[
ödex
 + 1u];

5586 
y
 = ((
y0
 * (0xFFFFF - 
‰a˘
)));

5589 
y
 +(
y1
 * 
‰a˘
);

5592  (
y
 >> 20u);

5607 
Êﬂt32_t
 
¨m_sö_f32
(

5608 
Êﬂt32_t
 
x
);

5616 
q31_t
 
¨m_sö_q31
(

5617 
q31_t
 
x
);

5625 
q15_t
 
¨m_sö_q15
(

5626 
q15_t
 
x
);

5634 
Êﬂt32_t
 
¨m_cos_f32
(

5635 
Êﬂt32_t
 
x
);

5643 
q31_t
 
¨m_cos_q31
(

5644 
q31_t
 
x
);

5652 
q15_t
 
¨m_cos_q15
(

5653 
q15_t
 
x
);

5695 
__INLINE
 
¨m_°©us
 
¨m_sqπ_f32
(

5696 
Êﬂt32_t
 
ö
, flﬂt32_à*
pOut
)

5698 if(
ö
 > 0)

5702 #i‡(
__FPU_USED
 =1Ë&& 
deföed
 ( 
__CC_ARM
 )

5703 *
pOut
 = 
__sqπf
(
ö
);

5705 *
pOut
 = 
sqπf
(
ö
);

5708  (
ARM_MATH_SUCCESS
);

5712 *
pOut
 = 0.0f;

5713  (
ARM_MATH_ARGUMENT_ERROR
);

5726 
¨m_°©us
 
¨m_sqπ_q31
(

5727 
q31_t
 
ö
, q31_à*
pOut
);

5736 
¨m_°©us
 
¨m_sqπ_q15
(

5737 
q15_t
 
ö
, q15_à*
pOut
);

5752 
__INLINE
 
¨m_cúcuœrWrôe_f32
(

5753 
öt32_t
 * 
cúcBuf„r
,

5754 
öt32_t
 
L
,

5755 
uöt16_t
 * 
wrôeOff£t
,

5756 
öt32_t
 
buf„rInc
,

5757 c⁄° 
öt32_t
 * 
§c
,

5758 
öt32_t
 
§cInc
,

5759 
uöt32_t
 
blockSize
)

5761 
uöt32_t
 
i
 = 0u;

5762 
öt32_t
 
wOff£t
;

5766 
wOff£t
 = *
wrôeOff£t
;

5769 
i
 = 
blockSize
;

5771 
i
 > 0u)

5774 
cúcBuf„r
[
wOff£t
] = *
§c
;

5777 
§c
 +
§cInc
;

5780 
wOff£t
 +
buf„rInc
;

5781 if(
wOff£t
 >
L
)

5782 
wOff£t
 -
L
;

5785 
i
--;

5789 *
wrôeOff£t
 = 
wOff£t
;

5797 
__INLINE
 
¨m_cúcuœrRód_f32
(

5798 
öt32_t
 * 
cúcBuf„r
,

5799 
öt32_t
 
L
,

5800 
öt32_t
 * 
ªadOff£t
,

5801 
öt32_t
 
buf„rInc
,

5802 
öt32_t
 * 
d°
,

5803 
öt32_t
 * 
d°_ba£
,

5804 
öt32_t
 
d°_Àngth
,

5805 
öt32_t
 
d°Inc
,

5806 
uöt32_t
 
blockSize
)

5808 
uöt32_t
 
i
 = 0u;

5809 
öt32_t
 
rOff£t
, 
d°_íd
;

5813 
rOff£t
 = *
ªadOff£t
;

5814 
d°_íd
 = (
öt32_t
Ë(
d°_ba£
 + 
d°_Àngth
);

5817 
i
 = 
blockSize
;

5819 
i
 > 0u)

5822 *
d°
 = 
cúcBuf„r
[
rOff£t
];

5825 
d°
 +
d°Inc
;

5827 if(
d°
 =(
öt32_t
 *Ë
d°_íd
)

5829 
d°
 = 
d°_ba£
;

5833 
rOff£t
 +
buf„rInc
;

5835 if(
rOff£t
 >
L
)

5837 
rOff£t
 -
L
;

5841 
i
--;

5845 *
ªadOff£t
 = 
rOff£t
;

5852 
__INLINE
 
¨m_cúcuœrWrôe_q15
(

5853 
q15_t
 * 
cúcBuf„r
,

5854 
öt32_t
 
L
,

5855 
uöt16_t
 * 
wrôeOff£t
,

5856 
öt32_t
 
buf„rInc
,

5857 c⁄° 
q15_t
 * 
§c
,

5858 
öt32_t
 
§cInc
,

5859 
uöt32_t
 
blockSize
)

5861 
uöt32_t
 
i
 = 0u;

5862 
öt32_t
 
wOff£t
;

5866 
wOff£t
 = *
wrôeOff£t
;

5869 
i
 = 
blockSize
;

5871 
i
 > 0u)

5874 
cúcBuf„r
[
wOff£t
] = *
§c
;

5877 
§c
 +
§cInc
;

5880 
wOff£t
 +
buf„rInc
;

5881 if(
wOff£t
 >
L
)

5882 
wOff£t
 -
L
;

5885 
i
--;

5889 *
wrôeOff£t
 = 
wOff£t
;

5897 
__INLINE
 
¨m_cúcuœrRód_q15
(

5898 
q15_t
 * 
cúcBuf„r
,

5899 
öt32_t
 
L
,

5900 
öt32_t
 * 
ªadOff£t
,

5901 
öt32_t
 
buf„rInc
,

5902 
q15_t
 * 
d°
,

5903 
q15_t
 * 
d°_ba£
,

5904 
öt32_t
 
d°_Àngth
,

5905 
öt32_t
 
d°Inc
,

5906 
uöt32_t
 
blockSize
)

5908 
uöt32_t
 
i
 = 0;

5909 
öt32_t
 
rOff£t
, 
d°_íd
;

5913 
rOff£t
 = *
ªadOff£t
;

5915 
d°_íd
 = (
öt32_t
Ë(
d°_ba£
 + 
d°_Àngth
);

5918 
i
 = 
blockSize
;

5920 
i
 > 0u)

5923 *
d°
 = 
cúcBuf„r
[
rOff£t
];

5926 
d°
 +
d°Inc
;

5928 if(
d°
 =(
q15_t
 *Ë
d°_íd
)

5930 
d°
 = 
d°_ba£
;

5934 
rOff£t
 +
buf„rInc
;

5936 if(
rOff£t
 >
L
)

5938 
rOff£t
 -
L
;

5942 
i
--;

5946 *
ªadOff£t
 = 
rOff£t
;

5954 
__INLINE
 
¨m_cúcuœrWrôe_q7
(

5955 
q7_t
 * 
cúcBuf„r
,

5956 
öt32_t
 
L
,

5957 
uöt16_t
 * 
wrôeOff£t
,

5958 
öt32_t
 
buf„rInc
,

5959 c⁄° 
q7_t
 * 
§c
,

5960 
öt32_t
 
§cInc
,

5961 
uöt32_t
 
blockSize
)

5963 
uöt32_t
 
i
 = 0u;

5964 
öt32_t
 
wOff£t
;

5968 
wOff£t
 = *
wrôeOff£t
;

5971 
i
 = 
blockSize
;

5973 
i
 > 0u)

5976 
cúcBuf„r
[
wOff£t
] = *
§c
;

5979 
§c
 +
§cInc
;

5982 
wOff£t
 +
buf„rInc
;

5983 if(
wOff£t
 >
L
)

5984 
wOff£t
 -
L
;

5987 
i
--;

5991 *
wrôeOff£t
 = 
wOff£t
;

5999 
__INLINE
 
¨m_cúcuœrRód_q7
(

6000 
q7_t
 * 
cúcBuf„r
,

6001 
öt32_t
 
L
,

6002 
öt32_t
 * 
ªadOff£t
,

6003 
öt32_t
 
buf„rInc
,

6004 
q7_t
 * 
d°
,

6005 
q7_t
 * 
d°_ba£
,

6006 
öt32_t
 
d°_Àngth
,

6007 
öt32_t
 
d°Inc
,

6008 
uöt32_t
 
blockSize
)

6010 
uöt32_t
 
i
 = 0;

6011 
öt32_t
 
rOff£t
, 
d°_íd
;

6015 
rOff£t
 = *
ªadOff£t
;

6017 
d°_íd
 = (
öt32_t
Ë(
d°_ba£
 + 
d°_Àngth
);

6020 
i
 = 
blockSize
;

6022 
i
 > 0u)

6025 *
d°
 = 
cúcBuf„r
[
rOff£t
];

6028 
d°
 +
d°Inc
;

6030 if(
d°
 =(
q7_t
 *Ë
d°_íd
)

6032 
d°
 = 
d°_ba£
;

6036 
rOff£t
 +
buf„rInc
;

6038 if(
rOff£t
 >
L
)

6040 
rOff£t
 -
L
;

6044 
i
--;

6048 *
ªadOff£t
 = 
rOff£t
;

6060 
¨m_powî_q31
(

6061 
q31_t
 * 
pSrc
,

6062 
uöt32_t
 
blockSize
,

6063 
q63_t
 * 
pResu…
);

6073 
¨m_powî_f32
(

6074 
Êﬂt32_t
 * 
pSrc
,

6075 
uöt32_t
 
blockSize
,

6076 
Êﬂt32_t
 * 
pResu…
);

6086 
¨m_powî_q15
(

6087 
q15_t
 * 
pSrc
,

6088 
uöt32_t
 
blockSize
,

6089 
q63_t
 * 
pResu…
);

6099 
¨m_powî_q7
(

6100 
q7_t
 * 
pSrc
,

6101 
uöt32_t
 
blockSize
,

6102 
q31_t
 * 
pResu…
);

6112 
¨m_món_q7
(

6113 
q7_t
 * 
pSrc
,

6114 
uöt32_t
 
blockSize
,

6115 
q7_t
 * 
pResu…
);

6124 
¨m_món_q15
(

6125 
q15_t
 * 
pSrc
,

6126 
uöt32_t
 
blockSize
,

6127 
q15_t
 * 
pResu…
);

6136 
¨m_món_q31
(

6137 
q31_t
 * 
pSrc
,

6138 
uöt32_t
 
blockSize
,

6139 
q31_t
 * 
pResu…
);

6148 
¨m_món_f32
(

6149 
Êﬂt32_t
 * 
pSrc
,

6150 
uöt32_t
 
blockSize
,

6151 
Êﬂt32_t
 * 
pResu…
);

6161 
¨m_v¨_f32
(

6162 
Êﬂt32_t
 * 
pSrc
,

6163 
uöt32_t
 
blockSize
,

6164 
Êﬂt32_t
 * 
pResu…
);

6174 
¨m_v¨_q31
(

6175 
q31_t
 * 
pSrc
,

6176 
uöt32_t
 
blockSize
,

6177 
q63_t
 * 
pResu…
);

6187 
¨m_v¨_q15
(

6188 
q15_t
 * 
pSrc
,

6189 
uöt32_t
 
blockSize
,

6190 
q31_t
 * 
pResu…
);

6200 
¨m_rms_f32
(

6201 
Êﬂt32_t
 * 
pSrc
,

6202 
uöt32_t
 
blockSize
,

6203 
Êﬂt32_t
 * 
pResu…
);

6213 
¨m_rms_q31
(

6214 
q31_t
 * 
pSrc
,

6215 
uöt32_t
 
blockSize
,

6216 
q31_t
 * 
pResu…
);

6226 
¨m_rms_q15
(

6227 
q15_t
 * 
pSrc
,

6228 
uöt32_t
 
blockSize
,

6229 
q15_t
 * 
pResu…
);

6239 
¨m_°d_f32
(

6240 
Êﬂt32_t
 * 
pSrc
,

6241 
uöt32_t
 
blockSize
,

6242 
Êﬂt32_t
 * 
pResu…
);

6252 
¨m_°d_q31
(

6253 
q31_t
 * 
pSrc
,

6254 
uöt32_t
 
blockSize
,

6255 
q31_t
 * 
pResu…
);

6265 
¨m_°d_q15
(

6266 
q15_t
 * 
pSrc
,

6267 
uöt32_t
 
blockSize
,

6268 
q15_t
 * 
pResu…
);

6278 
¨m_cm∂x_mag_f32
(

6279 
Êﬂt32_t
 * 
pSrc
,

6280 
Êﬂt32_t
 * 
pD°
,

6281 
uöt32_t
 
numSam∂es
);

6291 
¨m_cm∂x_mag_q31
(

6292 
q31_t
 * 
pSrc
,

6293 
q31_t
 * 
pD°
,

6294 
uöt32_t
 
numSam∂es
);

6304 
¨m_cm∂x_mag_q15
(

6305 
q15_t
 * 
pSrc
,

6306 
q15_t
 * 
pD°
,

6307 
uöt32_t
 
numSam∂es
);

6319 
¨m_cm∂x_dŸ_¥od_q15
(

6320 
q15_t
 * 
pSrcA
,

6321 
q15_t
 * 
pSrcB
,

6322 
uöt32_t
 
numSam∂es
,

6323 
q31_t
 * 
ªÆResu…
,

6324 
q31_t
 * 
imagResu…
);

6336 
¨m_cm∂x_dŸ_¥od_q31
(

6337 
q31_t
 * 
pSrcA
,

6338 
q31_t
 * 
pSrcB
,

6339 
uöt32_t
 
numSam∂es
,

6340 
q63_t
 * 
ªÆResu…
,

6341 
q63_t
 * 
imagResu…
);

6353 
¨m_cm∂x_dŸ_¥od_f32
(

6354 
Êﬂt32_t
 * 
pSrcA
,

6355 
Êﬂt32_t
 * 
pSrcB
,

6356 
uöt32_t
 
numSam∂es
,

6357 
Êﬂt32_t
 * 
ªÆResu…
,

6358 
Êﬂt32_t
 * 
imagResu…
);

6369 
¨m_cm∂x_mu…_ªÆ_q15
(

6370 
q15_t
 * 
pSrcCm∂x
,

6371 
q15_t
 * 
pSrcRól
,

6372 
q15_t
 * 
pCm∂xD°
,

6373 
uöt32_t
 
numSam∂es
);

6384 
¨m_cm∂x_mu…_ªÆ_q31
(

6385 
q31_t
 * 
pSrcCm∂x
,

6386 
q31_t
 * 
pSrcRól
,

6387 
q31_t
 * 
pCm∂xD°
,

6388 
uöt32_t
 
numSam∂es
);

6399 
¨m_cm∂x_mu…_ªÆ_f32
(

6400 
Êﬂt32_t
 * 
pSrcCm∂x
,

6401 
Êﬂt32_t
 * 
pSrcRól
,

6402 
Êﬂt32_t
 * 
pCm∂xD°
,

6403 
uöt32_t
 
numSam∂es
);

6414 
¨m_mö_q7
(

6415 
q7_t
 * 
pSrc
,

6416 
uöt32_t
 
blockSize
,

6417 
q7_t
 * 
ªsu…
,

6418 
uöt32_t
 * 
ödex
);

6429 
¨m_mö_q15
(

6430 
q15_t
 * 
pSrc
,

6431 
uöt32_t
 
blockSize
,

6432 
q15_t
 * 
pResu…
,

6433 
uöt32_t
 * 
pIndex
);

6443 
¨m_mö_q31
(

6444 
q31_t
 * 
pSrc
,

6445 
uöt32_t
 
blockSize
,

6446 
q31_t
 * 
pResu…
,

6447 
uöt32_t
 * 
pIndex
);

6458 
¨m_mö_f32
(

6459 
Êﬂt32_t
 * 
pSrc
,

6460 
uöt32_t
 
blockSize
,

6461 
Êﬂt32_t
 * 
pResu…
,

6462 
uöt32_t
 * 
pIndex
);

6473 
¨m_max_q7
(

6474 
q7_t
 * 
pSrc
,

6475 
uöt32_t
 
blockSize
,

6476 
q7_t
 * 
pResu…
,

6477 
uöt32_t
 * 
pIndex
);

6488 
¨m_max_q15
(

6489 
q15_t
 * 
pSrc
,

6490 
uöt32_t
 
blockSize
,

6491 
q15_t
 * 
pResu…
,

6492 
uöt32_t
 * 
pIndex
);

6503 
¨m_max_q31
(

6504 
q31_t
 * 
pSrc
,

6505 
uöt32_t
 
blockSize
,

6506 
q31_t
 * 
pResu…
,

6507 
uöt32_t
 * 
pIndex
);

6518 
¨m_max_f32
(

6519 
Êﬂt32_t
 * 
pSrc
,

6520 
uöt32_t
 
blockSize
,

6521 
Êﬂt32_t
 * 
pResu…
,

6522 
uöt32_t
 * 
pIndex
);

6533 
¨m_cm∂x_mu…_cm∂x_q15
(

6534 
q15_t
 * 
pSrcA
,

6535 
q15_t
 * 
pSrcB
,

6536 
q15_t
 * 
pD°
,

6537 
uöt32_t
 
numSam∂es
);

6548 
¨m_cm∂x_mu…_cm∂x_q31
(

6549 
q31_t
 * 
pSrcA
,

6550 
q31_t
 * 
pSrcB
,

6551 
q31_t
 * 
pD°
,

6552 
uöt32_t
 
numSam∂es
);

6563 
¨m_cm∂x_mu…_cm∂x_f32
(

6564 
Êﬂt32_t
 * 
pSrcA
,

6565 
Êﬂt32_t
 * 
pSrcB
,

6566 
Êﬂt32_t
 * 
pD°
,

6567 
uöt32_t
 
numSam∂es
);

6576 
¨m_Êﬂt_to_q31
(

6577 
Êﬂt32_t
 * 
pSrc
,

6578 
q31_t
 * 
pD°
,

6579 
uöt32_t
 
blockSize
);

6588 
¨m_Êﬂt_to_q15
(

6589 
Êﬂt32_t
 * 
pSrc
,

6590 
q15_t
 * 
pD°
,

6591 
uöt32_t
 
blockSize
);

6600 
¨m_Êﬂt_to_q7
(

6601 
Êﬂt32_t
 * 
pSrc
,

6602 
q7_t
 * 
pD°
,

6603 
uöt32_t
 
blockSize
);

6613 
¨m_q31_to_q15
(

6614 
q31_t
 * 
pSrc
,

6615 
q15_t
 * 
pD°
,

6616 
uöt32_t
 
blockSize
);

6625 
¨m_q31_to_q7
(

6626 
q31_t
 * 
pSrc
,

6627 
q7_t
 * 
pD°
,

6628 
uöt32_t
 
blockSize
);

6637 
¨m_q15_to_Êﬂt
(

6638 
q15_t
 * 
pSrc
,

6639 
Êﬂt32_t
 * 
pD°
,

6640 
uöt32_t
 
blockSize
);

6650 
¨m_q15_to_q31
(

6651 
q15_t
 * 
pSrc
,

6652 
q31_t
 * 
pD°
,

6653 
uöt32_t
 
blockSize
);

6663 
¨m_q15_to_q7
(

6664 
q15_t
 * 
pSrc
,

6665 
q7_t
 * 
pD°
,

6666 
uöt32_t
 
blockSize
);

6740 
__INLINE
 
Êﬂt32_t
 
¨m_bûöór_öãΩ_f32
(

6741 c⁄° 
¨m_bûöór_öãΩ_ö°™˚_f32
 * 
S
,

6742 
Êﬂt32_t
 
X
,

6743 
Êﬂt32_t
 
Y
)

6745 
Êﬂt32_t
 
out
;

6746 
Êﬂt32_t
 
f00
, 
f01
, 
f10
, 
f11
;

6747 
Êﬂt32_t
 *
pD©a
 = 
S
->pData;

6748 
öt32_t
 
xIndex
, 
yIndex
, 
ödex
;

6749 
Êﬂt32_t
 
xdiff
, 
ydiff
;

6750 
Êﬂt32_t
 
b1
, 
b2
, 
b3
, 
b4
;

6752 
xIndex
 = (
öt32_t
Ë
X
;

6753 
yIndex
 = (
öt32_t
Ë
Y
;

6757 if(
xIndex
 < 0 || xIndex > (
S
->
numRows
-1Ë|| 
yIndex
 < 0 || yIndex > ( S->
numCﬁs
-1))

6763 
ödex
 = (
xIndex
 - 1Ë+ (
yIndex
-1Ë* 
S
->
numCﬁs
 ;

6767 
f00
 = 
pD©a
[
ödex
];

6768 
f01
 = 
pD©a
[
ödex
 + 1];

6771 
ödex
 = (
xIndex
-1Ë+ (
yIndex
Ë* 
S
->
numCﬁs
;

6775 
f10
 = 
pD©a
[
ödex
];

6776 
f11
 = 
pD©a
[
ödex
 + 1];

6779 
b1
 = 
f00
;

6780 
b2
 = 
f01
 - 
f00
;

6781 
b3
 = 
f10
 - 
f00
;

6782 
b4
 = 
f00
 - 
f01
 - 
f10
 + 
f11
;

6785 
xdiff
 = 
X
 - 
xIndex
;

6788 
ydiff
 = 
Y
 - 
yIndex
;

6791 
out
 = 
b1
 + 
b2
 * 
xdiff
 + 
b3
 * 
ydiff
 + 
b4
 * xdiff * ydiff;

6794  (
out
);

6807 
__INLINE
 
q31_t
 
¨m_bûöór_öãΩ_q31
(

6808 
¨m_bûöór_öãΩ_ö°™˚_q31
 * 
S
,

6809 
q31_t
 
X
,

6810 
q31_t
 
Y
)

6812 
q31_t
 
out
;

6813 
q31_t
 
acc
 = 0;

6814 
q31_t
 
x‰a˘
, 
y‰a˘
;

6815 
q31_t
 
x1
, 
x2
, 
y1
, 
y2
;

6816 
öt32_t
 
rI
, 
cI
;

6817 
q31_t
 *
pYD©a
 = 
S
->
pD©a
;

6818 
uöt32_t
 
nCﬁs
 = 
S
->
numCﬁs
;

6824 
rI
 = ((
X
 & 0xFFF00000) >> 20u);

6829 
cI
 = ((
Y
 & 0xFFF00000) >> 20u);

6833 if(
rI
 < 0 ||ÑI > (
S
->
numRows
-1Ë|| 
cI
 < 0 || cI > ( S->
numCﬁs
-1))

6840 
x‰a˘
 = (
X
 & 0x000FFFFF) << 11u;

6843 
x1
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
)];

6844 
x2
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
) + 1u];

6848 
y‰a˘
 = (
Y
 & 0x000FFFFF) << 11u;

6851 
y1
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
 + 1)];

6852 
y2
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
 + 1) + 1u];

6855 
out
 = ((
q31_t
Ë(((
q63_t
Ë
x1
 * (0x7FFFFFFF - 
x‰a˘
)) >> 32));

6856 
acc
 = ((
q31_t
Ë(((
q63_t
Ë
out
 * (0x7FFFFFFF - 
y‰a˘
)) >> 32));

6859 
out
 = ((
q31_t
Ë((
q63_t
Ë
x2
 * (0x7FFFFFFF - 
y‰a˘
) >> 32));

6860 
acc
 +((
q31_t
Ë((
q63_t
Ë
out
 * (
x‰a˘
) >> 32));

6863 
out
 = ((
q31_t
Ë((
q63_t
Ë
y1
 * (0x7FFFFFFF - 
x‰a˘
) >> 32));

6864 
acc
 +((
q31_t
Ë((
q63_t
Ë
out
 * (
y‰a˘
) >> 32));

6867 
out
 = ((
q31_t
Ë((
q63_t
Ë
y2
 * (
x‰a˘
) >> 32));

6868 
acc
 +((
q31_t
Ë((
q63_t
Ë
out
 * (
y‰a˘
) >> 32));

6871  (
acc
 << 2u);

6883 
__INLINE
 
q15_t
 
¨m_bûöór_öãΩ_q15
(

6884 
¨m_bûöór_öãΩ_ö°™˚_q15
 * 
S
,

6885 
q31_t
 
X
,

6886 
q31_t
 
Y
)

6888 
q63_t
 
acc
 = 0;

6889 
q31_t
 
out
;

6890 
q15_t
 
x1
, 
x2
, 
y1
, 
y2
;

6891 
q31_t
 
x‰a˘
, 
y‰a˘
;

6892 
öt32_t
 
rI
, 
cI
;

6893 
q15_t
 *
pYD©a
 = 
S
->
pD©a
;

6894 
uöt32_t
 
nCﬁs
 = 
S
->
numCﬁs
;

6899 
rI
 = ((
X
 & 0xFFF00000) >> 20);

6904 
cI
 = ((
Y
 & 0xFFF00000) >> 20);

6908 if(
rI
 < 0 ||ÑI > (
S
->
numRows
-1Ë|| 
cI
 < 0 || cI > ( S->
numCﬁs
-1))

6915 
x‰a˘
 = (
X
 & 0x000FFFFF);

6918 
x1
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
)];

6919 
x2
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
) + 1u];

6924 
y‰a˘
 = (
Y
 & 0x000FFFFF);

6927 
y1
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
 + 1)];

6928 
y2
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
 + 1) + 1u];

6934 
out
 = (
q31_t
Ë(((
q63_t
Ë
x1
 * (0xFFFFF - 
x‰a˘
)) >> 4u);

6935 
acc
 = ((
q63_t
Ë
out
 * (0xFFFFF - 
y‰a˘
));

6938 
out
 = (
q31_t
Ë(((
q63_t
Ë
x2
 * (0xFFFFF - 
y‰a˘
)) >> 4u);

6939 
acc
 +((
q63_t
Ë
out
 * (
x‰a˘
));

6942 
out
 = (
q31_t
Ë(((
q63_t
Ë
y1
 * (0xFFFFF - 
x‰a˘
)) >> 4u);

6943 
acc
 +((
q63_t
Ë
out
 * (
y‰a˘
));

6946 
out
 = (
q31_t
Ë(((
q63_t
Ë
y2
 * (
x‰a˘
)) >> 4u);

6947 
acc
 +((
q63_t
Ë
out
 * (
y‰a˘
));

6951  (
acc
 >> 36);

6963 
__INLINE
 
q7_t
 
¨m_bûöór_öãΩ_q7
(

6964 
¨m_bûöór_öãΩ_ö°™˚_q7
 * 
S
,

6965 
q31_t
 
X
,

6966 
q31_t
 
Y
)

6968 
q63_t
 
acc
 = 0;

6969 
q31_t
 
out
;

6970 
q31_t
 
x‰a˘
, 
y‰a˘
;

6971 
q7_t
 
x1
, 
x2
, 
y1
, 
y2
;

6972 
öt32_t
 
rI
, 
cI
;

6973 
q7_t
 *
pYD©a
 = 
S
->
pD©a
;

6974 
uöt32_t
 
nCﬁs
 = 
S
->
numCﬁs
;

6979 
rI
 = ((
X
 & 0xFFF00000) >> 20);

6984 
cI
 = ((
Y
 & 0xFFF00000) >> 20);

6988 if(
rI
 < 0 ||ÑI > (
S
->
numRows
-1Ë|| 
cI
 < 0 || cI > ( S->
numCﬁs
-1))

6995 
x‰a˘
 = (
X
 & 0x000FFFFF);

6998 
x1
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
)];

6999 
x2
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
) + 1u];

7004 
y‰a˘
 = (
Y
 & 0x000FFFFF);

7007 
y1
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
 + 1)];

7008 
y2
 = 
pYD©a
[(
rI
Ë+ 
nCﬁs
 * (
cI
 + 1) + 1u];

7011 
out
 = ((
x1
 * (0xFFFFF - 
x‰a˘
)));

7012 
acc
 = (((
q63_t
Ë
out
 * (0xFFFFF - 
y‰a˘
)));

7015 
out
 = ((
x2
 * (0xFFFFF - 
y‰a˘
)));

7016 
acc
 +(((
q63_t
Ë
out
 * (
x‰a˘
)));

7019 
out
 = ((
y1
 * (0xFFFFF - 
x‰a˘
)));

7020 
acc
 +(((
q63_t
Ë
out
 * (
y‰a˘
)));

7023 
out
 = ((
y2
 * (
y‰a˘
)));

7024 
acc
 +(((
q63_t
Ë
out
 * (
x‰a˘
)));

7027  (
acc
 >> 40);

7040 #ifdef 
__˝lu•lus


	@D:\PROJEC~3\BLINK_~3\Blink\cmsis\core_cm0.h

23 #i‡
deföed
 ( 
__ICCARM__
 )

24 #¥agm®
sy°em_ö˛ude


27 #ifde‡
__˝lu•lus


31 #i‚de‡
__CORE_CM0_H_GENERIC


32 
	#__CORE_CM0_H_GENERIC


	)

75 
	#__CM0_CMSIS_VERSION_MAIN
 (0x02Ë

	)

76 
	#__CM0_CMSIS_VERSION_SUB
 (0x10Ë

	)

77 
	#__CM0_CMSIS_VERSION
 ((
__CM0_CMSIS_VERSION_MAIN
 << 16Ë| 
__CM0_CMSIS_VERSION_SUB
Ë

	)

79 
	#__CORTEX_M
 (0x00Ë

	)

82 #i‡ 
deföed
 ( 
__CC_ARM
 )

83 
	#__ASM
 
__asm


	)

84 
	#__INLINE
 
__ölöe


	)

86 #ñi‡
deföed
 ( 
__ICCARM__
 )

87 
	#__ASM
 
__asm


	)

88 
	#__INLINE
 
ölöe


	)

90 #ñi‡
deföed
 ( 
__GNUC__
 )

91 
	#__ASM
 
__asm


	)

92 
	#__INLINE
 
ölöe


	)

94 #ñi‡
deföed
 ( 
__TASKING__
 )

95 
	#__ASM
 
__asm


	)

96 
	#__INLINE
 
ölöe


	)

101 
	#__FPU_USED
 0

	)

103 #i‡
deföed
 ( 
__CC_ARM
 )

104 #i‡
deföed
 
__TARGET_FPU_VFP


107 #ñi‡
deföed
 ( 
__ICCARM__
 )

108 #i‡
deföed
 
__ARMVFP__


112 #ñi‡
deföed
 ( 
__GNUC__
 )

113 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

117 #ñi‡
deföed
 ( 
__TASKING__
 )

121 
	~<°döt.h
>

122 
	~"c‹e_cmIn°r.h
"

123 
	~"c‹e_cmFunc.h
"

127 #i‚de‡
__CMSIS_GENERIC


129 #i‚de‡
__CORE_CM0_H_DEPENDANT


130 
	#__CORE_CM0_H_DEPENDANT


	)

133 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


134 #i‚de‡
__CM0_REV


135 
	#__CM0_REV
 0x0000

	)

139 #i‚de‡
__NVIC_PRIO_BITS


140 
	#__NVIC_PRIO_BITS
 2

	)

144 #i‚de‡
__Víd‹_SysTickC⁄fig


145 
	#__Víd‹_SysTickC⁄fig
 0

	)

151 #ifde‡
__˝lu•lus


152 
	#__I
 vﬁ©ûê

	)

154 
	#__I
 vﬁ©ûêc⁄°

	)

156 
	#__O
 vﬁ©ûê

	)

157 
	#__IO
 vﬁ©ûê

	)

186 #i‡(
__CORTEX_M
 != 0x04)

187 
uöt32_t
 
_ª£rved0
:27;

189 
uöt32_t
 
_ª£rved0
:16;

190 
uöt32_t
 
GE
:4;

191 
uöt32_t
 
_ª£rved1
:7;

193 
uöt32_t
 
Q
:1;

194 
uöt32_t
 
V
:1;

195 
uöt32_t
 
C
:1;

196 
uöt32_t
 
Z
:1;

197 
uöt32_t
 
N
:1;

198 } 
b
;

199 
uöt32_t
 
w
;

200 } 
	tAPSR_Ty≥
;

209 
uöt32_t
 
	mISR
:9;

210 
uöt32_t
 
	m_ª£rved0
:23;

211 } 
	mb
;

212 
uöt32_t
 
	mw
;

213 } 
	tIPSR_Ty≥
;

222 
uöt32_t
 
	mISR
:9;

223 #i‡(
__CORTEX_M
 != 0x04)

224 
uöt32_t
 
	m_ª£rved0
:15;

226 
uöt32_t
 
	m_ª£rved0
:7;

227 
uöt32_t
 
	mGE
:4;

228 
uöt32_t
 
	m_ª£rved1
:4;

230 
uöt32_t
 
	mT
:1;

231 
uöt32_t
 
	mIT
:2;

232 
uöt32_t
 
	mQ
:1;

233 
uöt32_t
 
	mV
:1;

234 
uöt32_t
 
	mC
:1;

235 
uöt32_t
 
	mZ
:1;

236 
uöt32_t
 
	mN
:1;

237 } 
	mb
;

238 
uöt32_t
 
	mw
;

239 } 
	txPSR_Ty≥
;

248 
uöt32_t
 
	mnPRIV
:1;

249 
uöt32_t
 
	mSPSEL
:1;

250 
uöt32_t
 
	mFPCA
:1;

251 
uöt32_t
 
	m_ª£rved0
:29;

252 } 
	mb
;

253 
uöt32_t
 
	mw
;

254 } 
	tCONTROL_Ty≥
;

269 
__IO
 
uöt32_t
 
	mISER
[1];

270 
uöt32_t
 
	mRESERVED0
[31];

271 
__IO
 
uöt32_t
 
	mICER
[1];

272 
uöt32_t
 
	mRSERVED1
[31];

273 
__IO
 
uöt32_t
 
	mISPR
[1];

274 
uöt32_t
 
	mRESERVED2
[31];

275 
__IO
 
uöt32_t
 
	mICPR
[1];

276 
uöt32_t
 
	mRESERVED3
[31];

277 
uöt32_t
 
	mRESERVED4
[64];

278 
__IO
 
uöt32_t
 
	mIP
[8];

279 } 
	tNVIC_Ty≥
;

294 
__I
 
uöt32_t
 
	mCPUID
;

295 
__IO
 
uöt32_t
 
	mICSR
;

296 
uöt32_t
 
	mRESERVED0
;

297 
__IO
 
uöt32_t
 
	mAIRCR
;

298 
__IO
 
uöt32_t
 
	mSCR
;

299 
__IO
 
uöt32_t
 
	mCCR
;

300 
uöt32_t
 
	mRESERVED1
;

301 
__IO
 
uöt32_t
 
	mSHP
[2];

302 
__IO
 
uöt32_t
 
	mSHCSR
;

303 } 
	tSCB_Ty≥
;

306 
	#SCB_CPUID_IMPLEMENTER_Pos
 24

	)

307 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

309 
	#SCB_CPUID_VARIANT_Pos
 20

	)

310 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

312 
	#SCB_CPUID_ARCHITECTURE_Pos
 16

	)

313 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

315 
	#SCB_CPUID_PARTNO_Pos
 4

	)

316 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

318 
	#SCB_CPUID_REVISION_Pos
 0

	)

319 
	#SCB_CPUID_REVISION_Msk
 (0xFUL << 
SCB_CPUID_REVISION_Pos
Ë

	)

322 
	#SCB_ICSR_NMIPENDSET_Pos
 31

	)

323 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

325 
	#SCB_ICSR_PENDSVSET_Pos
 28

	)

326 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

328 
	#SCB_ICSR_PENDSVCLR_Pos
 27

	)

329 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

331 
	#SCB_ICSR_PENDSTSET_Pos
 26

	)

332 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

334 
	#SCB_ICSR_PENDSTCLR_Pos
 25

	)

335 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

337 
	#SCB_ICSR_ISRPREEMPT_Pos
 23

	)

338 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

340 
	#SCB_ICSR_ISRPENDING_Pos
 22

	)

341 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

343 
	#SCB_ICSR_VECTPENDING_Pos
 12

	)

344 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

346 
	#SCB_ICSR_VECTACTIVE_Pos
 0

	)

347 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL << 
SCB_ICSR_VECTACTIVE_Pos
Ë

	)

350 
	#SCB_AIRCR_VECTKEY_Pos
 16

	)

351 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

353 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16

	)

354 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

356 
	#SCB_AIRCR_ENDIANESS_Pos
 15

	)

357 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

359 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2

	)

360 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

362 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1

	)

363 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

366 
	#SCB_SCR_SEVONPEND_Pos
 4

	)

367 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

369 
	#SCB_SCR_SLEEPDEEP_Pos
 2

	)

370 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

372 
	#SCB_SCR_SLEEPONEXIT_Pos
 1

	)

373 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

376 
	#SCB_CCR_STKALIGN_Pos
 9

	)

377 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

379 
	#SCB_CCR_UNALIGN_TRP_Pos
 3

	)

380 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

383 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15

	)

384 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

399 
__IO
 
uöt32_t
 
	mCTRL
;

400 
__IO
 
uöt32_t
 
	mLOAD
;

401 
__IO
 
uöt32_t
 
	mVAL
;

402 
__I
 
uöt32_t
 
	mCALIB
;

403 } 
	tSysTick_Ty≥
;

406 
	#SysTick_CTRL_COUNTFLAG_Pos
 16

	)

407 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

409 
	#SysTick_CTRL_CLKSOURCE_Pos
 2

	)

410 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

412 
	#SysTick_CTRL_TICKINT_Pos
 1

	)

413 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

415 
	#SysTick_CTRL_ENABLE_Pos
 0

	)

416 
	#SysTick_CTRL_ENABLE_Msk
 (1UL << 
SysTick_CTRL_ENABLE_Pos
Ë

	)

419 
	#SysTick_LOAD_RELOAD_Pos
 0

	)

420 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL << 
SysTick_LOAD_RELOAD_Pos
Ë

	)

423 
	#SysTick_VAL_CURRENT_Pos
 0

	)

424 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

427 
	#SysTick_CALIB_NOREF_Pos
 31

	)

428 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

430 
	#SysTick_CALIB_SKEW_Pos
 30

	)

431 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

433 
	#SysTick_CALIB_TENMS_Pos
 0

	)

434 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

453 
	#SCS_BASE
 (0xE000E000ULË

	)

454 
	#C‹eDebug_BASE
 (0xE000EDF0ULË

	)

455 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

456 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

457 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

459 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

460 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

461 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

488 
	#_BIT_SHIFT
(
IRQn
Ë–(((
uöt32_t
)(IRQnËË& 0x03Ë* 8 )

	)

489 
	#_SHP_IDX
(
IRQn
Ë–((((
uöt32_t
)(IRQnË& 0x0F)-8Ë>> 2Ë)

	)

490 
	#_IP_IDX
(
IRQn
Ë–((
uöt32_t
)(IRQnË>> 2Ë)

	)

500 
__INLINE
 
	$NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

502 
NVIC
->
ISER
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

503 
	}
}

513 
__INLINE
 
	$NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

515 
NVIC
->
ICER
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

516 
	}
}

528 
__INLINE
 
uöt32_t
 
	$NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

530 ((
uöt32_t
Ë((
NVIC
->
ISPR
[0] & (1 << ((uöt32_t)(
IRQn
) & 0x1F)))?1:0));

531 
	}
}

541 
__INLINE
 
	$NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

543 
NVIC
->
ISPR
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

544 
	}
}

554 
__INLINE
 
	$NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

556 
NVIC
->
ICPR
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

557 
	}
}

571 
__INLINE
 
	$NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

573 if(
IRQn
 < 0) {

574 
SCB
->
SHP
[
	`_SHP_IDX
(
IRQn
)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << 
	`_BIT_SHIFT
(IRQn))) |

575 (((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)Ë& 0xFFË<< 
	`_BIT_SHIFT
(
IRQn
)); }

577 
NVIC
->
IP
[
	`_IP_IDX
(
IRQn
)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << 
	`_BIT_SHIFT
(IRQn))) |

578 (((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)Ë& 0xFFË<< 
	`_BIT_SHIFT
(
IRQn
)); }

579 
	}
}

594 
__INLINE
 
uöt32_t
 
	$NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

597 if(
IRQn
 < 0) {

598 ((
uöt32_t
)((
SCB
->
SHP
[
	`_SHP_IDX
(
IRQn
)] >> 
	`_BIT_SHIFT
(IRQnËË>> (8 - 
__NVIC_PRIO_BITS
))); }

600 ((
uöt32_t
)((
NVIC
->
IP
[ 
	`_IP_IDX
(
IRQn
)] >> 
	`_BIT_SHIFT
(IRQnËË>> (8 - 
__NVIC_PRIO_BITS
))); }

601 
	}
}

608 
__INLINE
 
	$NVIC_Sy°emRe£t
()

610 
	`__DSB
();

612 
SCB
->
AIRCR
 = ((0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

613 
SCB_AIRCR_SYSRESETREQ_Msk
);

614 
	`__DSB
();

616 
	}
}

628 #i‡(
__Víd‹_SysTickC⁄fig
 == 0)

639 
__INLINE
 
uöt32_t
 
	$SysTick_C⁄fig
(
uöt32_t
 
ticks
)

641 i‡(
ticks
 > 
SysTick_LOAD_RELOAD_Msk
)  (1);

643 
SysTick
->
LOAD
 = (
ticks
 & 
SysTick_LOAD_RELOAD_Msk
) - 1;

644 
	`NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1<<
__NVIC_PRIO_BITS
) - 1);

645 
SysTick
->
VAL
 = 0;

646 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

647 
SysTick_CTRL_TICKINT_Msk
 |

648 
SysTick_CTRL_ENABLE_Msk
;

650 
	}
}

663 #ifde‡
__˝lu•lus


	@D:\PROJEC~3\BLINK_~3\Blink\inc\STM32F~1.H

53 #i‚de‡
__STM32F0XX_H


54 
	#__STM32F0XX_H


	)

56 #ifde‡
__˝lu•lus


68 #i‡!
deföed
 (
STM32F030
Ë&& !deföed (
STM32F031
Ë&& !deföed (
STM32F051
Ë&& !deföed (
STM32F072
Ë&& !deföed (
STM32F042
)

72 
	#STM32F072


	)

81 #i‡
deföed
(
STM32F0XX
Ë|| deföed(
STM32F0XX_MD
)

82 
	#STM32F051


	)

86 #ifde‡
STM32F0XX_LD


87 
	#STM32F031


	)

91 #ifde‡
STM32F0XX_HD


92 
	#STM32F072


	)

96 #i‡
deföed
 (
STM32F030X8
Ë|| deföed (
STM32F030X6
)

97 
	#STM32F030


	)

101 #i‡!
deföed
 (
STM32F030
Ë&& !deföed (
STM32F031
Ë&& !deföed (
STM32F051
Ë&& !deföed (
STM32F072
Ë&& !deföed (
STM32F042
)

105 #i‡!
deföed
 
USE_STDPERIPH_DRIVER


121 #i‡!
deföed
 (
HSE_VALUE
)

122 
	#HSE_VALUE
 ((
uöt32_t
)8000000Ë

	)

129 #i‡!
deföed
 (
HSE_STARTUP_TIMEOUT
)

130 
	#HSE_STARTUP_TIMEOUT
 ((
uöt16_t
)0x5000Ë

	)

137 #i‡!
deföed
 (
HSI_STARTUP_TIMEOUT
)

138 
	#HSI_STARTUP_TIMEOUT
 ((
uöt16_t
)0x5000Ë

	)

141 #i‡!
deföed
 (
HSI_VALUE
)

142 
	#HSI_VALUE
 ((
uöt32_t
)8000000Ë

	)

147 #i‡!
deföed
 (
HSI14_VALUE
)

148 
	#HSI14_VALUE
 ((
uöt32_t
)14000000Ë

	)

153 #i‡!
deföed
 (
HSI48_VALUE
)

154 
	#HSI48_VALUE
 ((
uöt32_t
)48000000Ë

	)

159 #i‡!
deföed
 (
LSI_VALUE
)

160 
	#LSI_VALUE
 ((
uöt32_t
)40000Ë

	)

165 #i‡!
deföed
 (
LSE_VALUE
)

166 
	#LSE_VALUE
 ((
uöt32_t
)32768Ë

	)

172 
	#__STM32F0XX_STDPERIPH_VERSION_MAIN
 (0x01Ë

	)

173 
	#__STM32F0XX_STDPERIPH_VERSION_SUB1
 (0x03Ë

	)

174 
	#__STM32F0XX_STDPERIPH_VERSION_SUB2
 (0x01Ë

	)

175 
	#__STM32F0XX_STDPERIPH_VERSION_RC
 (0x00Ë

	)

176 
	#__STM32F0XX_STDPERIPH_VERSION
 ((
__STM32F0XX_STDPERIPH_VERSION_MAIN
 << 24)\

177 |(
__STM32F0XX_STDPERIPH_VERSION_SUB1
 << 16)\

178 |(
__STM32F0XX_STDPERIPH_VERSION_SUB2
 << 8)\

179 |(
__STM32F0XX_STDPERIPH_VERSION_RC
))

	)

193 
	#__CM0_REV
 0

	)

194 
	#__MPU_PRESENT
 0

	)

195 
	#__NVIC_PRIO_BITS
 2

	)

196 
	#__Víd‹_SysTickC⁄fig
 0

	)

199 
	eIRQn


202 
N⁄MaskabÀI¡_IRQn
 = -14,

203 
H¨dFau…_IRQn
 = -13,

204 
SVC_IRQn
 = -5,

205 
PídSV_IRQn
 = -2,

206 
SysTick_IRQn
 = -1,

208 #i‡
deföed
 (
STM32F051
)

210 
WWDG_IRQn
 = 0,

211 
PVD_IRQn
 = 1,

212 
RTC_IRQn
 = 2,

213 
FLASH_IRQn
 = 3,

214 
RCC_IRQn
 = 4,

215 
EXTI0_1_IRQn
 = 5,

216 
EXTI2_3_IRQn
 = 6,

217 
EXTI4_15_IRQn
 = 7,

218 
TS_IRQn
 = 8,

219 
DMA1_Ch™√l1_IRQn
 = 9,

220 
DMA1_Ch™√l2_3_IRQn
 = 10,

221 
DMA1_Ch™√l4_5_IRQn
 = 11,

222 
ADC1_COMP_IRQn
 = 12,

223 
TIM1_BRK_UP_TRG_COM_IRQn
 = 13,

224 
TIM1_CC_IRQn
 = 14,

225 
TIM2_IRQn
 = 15,

226 
TIM3_IRQn
 = 16,

227 
TIM6_DAC_IRQn
 = 17,

228 
TIM14_IRQn
 = 19,

229 
TIM15_IRQn
 = 20,

230 
TIM16_IRQn
 = 21,

231 
TIM17_IRQn
 = 22,

232 
I2C1_IRQn
 = 23,

233 
I2C2_IRQn
 = 24,

234 
SPI1_IRQn
 = 25,

235 
SPI2_IRQn
 = 26,

236 
USART1_IRQn
 = 27,

237 
USART2_IRQn
 = 28,

238 
CEC_IRQn
 = 30

239 #ñi‡
deföed
 (
STM32F031
)

241 
WWDG_IRQn
 = 0,

242 
PVD_IRQn
 = 1,

243 
RTC_IRQn
 = 2,

244 
FLASH_IRQn
 = 3,

245 
RCC_IRQn
 = 4,

246 
EXTI0_1_IRQn
 = 5,

247 
EXTI2_3_IRQn
 = 6,

248 
EXTI4_15_IRQn
 = 7,

249 
DMA1_Ch™√l1_IRQn
 = 9,

250 
DMA1_Ch™√l2_3_IRQn
 = 10,

251 
DMA1_Ch™√l4_5_IRQn
 = 11,

252 
ADC1_IRQn
 = 12,

253 
TIM1_BRK_UP_TRG_COM_IRQn
 = 13,

254 
TIM1_CC_IRQn
 = 14,

255 
TIM2_IRQn
 = 15,

256 
TIM3_IRQn
 = 16,

257 
TIM14_IRQn
 = 19,

258 
TIM16_IRQn
 = 21,

259 
TIM17_IRQn
 = 22,

260 
I2C1_IRQn
 = 23,

261 
SPI1_IRQn
 = 25,

262 
USART1_IRQn
 = 27

263 #ñi‡
deföed
 (
STM32F030
)

265 
WWDG_IRQn
 = 0,

266 
RTC_IRQn
 = 2,

267 
FLASH_IRQn
 = 3,

268 
RCC_IRQn
 = 4,

269 
EXTI0_1_IRQn
 = 5,

270 
EXTI2_3_IRQn
 = 6,

271 
EXTI4_15_IRQn
 = 7,

272 
DMA1_Ch™√l1_IRQn
 = 9,

273 
DMA1_Ch™√l2_3_IRQn
 = 10,

274 
DMA1_Ch™√l4_5_IRQn
 = 11,

275 
ADC1_IRQn
 = 12,

276 
TIM1_BRK_UP_TRG_COM_IRQn
 = 13,

277 
TIM1_CC_IRQn
 = 14,

278 
TIM3_IRQn
 = 16,

279 
TIM14_IRQn
 = 19,

280 
TIM15_IRQn
 = 20,

281 
TIM16_IRQn
 = 21,

282 
TIM17_IRQn
 = 22,

283 
I2C1_IRQn
 = 23,

284 
I2C2_IRQn
 = 24,

285 
SPI1_IRQn
 = 25,

286 
SPI2_IRQn
 = 26,

287 
USART1_IRQn
 = 27,

288 
USART2_IRQn
 = 28

289 #ñi‡
deföed
 (
STM32F072
)

290 
WWDG_IRQn
 = 0,

291 
PVD_VDDIO2_IRQn
 = 1,

292 
RTC_IRQn
 = 2,

293 
FLASH_IRQn
 = 3,

294 
RCC_CRS_IRQn
 = 4,

295 
EXTI0_1_IRQn
 = 5,

296 
EXTI2_3_IRQn
 = 6,

297 
EXTI4_15_IRQn
 = 7,

298 
TSC_IRQn
 = 8,

299 
DMA1_Ch™√l1_IRQn
 = 9,

300 
DMA1_Ch™√l2_3_IRQn
 = 10,

301 
DMA1_Ch™√l4_5_6_7_IRQn
 = 11,

302 
ADC1_COMP_IRQn
 = 12,

303 
TIM1_BRK_UP_TRG_COM_IRQn
 = 13,

304 
TIM1_CC_IRQn
 = 14,

305 
TIM2_IRQn
 = 15,

306 
TIM3_IRQn
 = 16,

307 
TIM6_DAC_IRQn
 = 17,

308 
TIM7_IRQn
 = 18,

309 
TIM14_IRQn
 = 19,

310 
TIM15_IRQn
 = 20,

311 
TIM16_IRQn
 = 21,

312 
TIM17_IRQn
 = 22,

313 
I2C1_IRQn
 = 23,

314 
I2C2_IRQn
 = 24,

315 
SPI1_IRQn
 = 25,

316 
SPI2_IRQn
 = 26,

317 
USART1_IRQn
 = 27,

318 
USART2_IRQn
 = 28,

319 
USART3_4_IRQn
 = 29,

320 
CEC_CAN_IRQn
 = 30,

321 
USB_IRQn
 = 31

322 #ñi‡
deföed
 (
STM32F042
)

323 
WWDG_IRQn
 = 0,

324 
PVD_VDDIO2_IRQn
 = 1,

325 
RTC_IRQn
 = 2,

326 
FLASH_IRQn
 = 3,

327 
RCC_CRS_IRQn
 = 4,

328 
EXTI0_1_IRQn
 = 5,

329 
EXTI2_3_IRQn
 = 6,

330 
EXTI4_15_IRQn
 = 7,

331 
TSC_IRQn
 = 8,

332 
DMA1_Ch™√l1_IRQn
 = 9,

333 
DMA1_Ch™√l2_3_IRQn
 = 10,

334 
DMA1_Ch™√l4_5_IRQn
 = 11,

335 
ADC1_IRQn
 = 12,

336 
TIM1_BRK_UP_TRG_COM_IRQn
 = 13,

337 
TIM1_CC_IRQn
 = 14,

338 
TIM2_IRQn
 = 15,

339 
TIM3_IRQn
 = 16,

340 
TIM14_IRQn
 = 19,

341 
TIM16_IRQn
 = 21,

342 
TIM17_IRQn
 = 22,

343 
I2C1_IRQn
 = 23,

344 
SPI1_IRQn
 = 25,

345 
SPI2_IRQn
 = 26,

346 
USART1_IRQn
 = 27,

347 
USART2_IRQn
 = 28,

348 
CEC_CAN_IRQn
 = 30,

349 
USB_IRQn
 = 31

351 } 
	tIRQn_Ty≥
;

357 
	~"c‹e_cm0.h
"

358 
	~"sy°em_°m32f0xx.h
"

359 
	~<°döt.h
>

365 íum {
RESET
 = 0, 
SET
 = !RESET} 
	tFœgSètus
, 
	tITSètus
;

367 íum {
DISABLE
 = 0, 
ENABLE
 = !DISABLE} 
	tFun˘i⁄ÆSèã
;

368 
	#IS_FUNCTIONAL_STATE
(
STATE
Ë(((STATEË=
DISABLE
Ë|| ((STATEË=
ENABLE
))

	)

370 íum {
ERROR
 = 0, 
SUCCESS
 = !ERROR} 
	tEº‹Sètus
;

382 
__IO
 
uöt32_t
 
ISR
;

383 
__IO
 
uöt32_t
 
IER
;

384 
__IO
 
uöt32_t
 
CR
;

385 
__IO
 
uöt32_t
 
CFGR1
;

386 
__IO
 
uöt32_t
 
CFGR2
;

387 
__IO
 
uöt32_t
 
SMPR
;

388 
uöt32_t
 
RESERVED1
;

389 
uöt32_t
 
RESERVED2
;

390 
__IO
 
uöt32_t
 
TR
;

391 
uöt32_t
 
RESERVED3
;

392 
__IO
 
uöt32_t
 
CHSELR
;

393 
uöt32_t
 
RESERVED4
[5];

394 
__IO
 
uöt32_t
 
DR
;

395 } 
	tADC_Ty≥Def
;

399 
__IO
 
uöt32_t
 
CCR
;

400 } 
	tADC_Comm⁄_Ty≥Def
;

408 
__IO
 
uöt32_t
 
TIR
;

409 
__IO
 
uöt32_t
 
TDTR
;

410 
__IO
 
uöt32_t
 
TDLR
;

411 
__IO
 
uöt32_t
 
TDHR
;

412 } 
	tCAN_TxMaûBox_Ty≥Def
;

419 
__IO
 
uöt32_t
 
RIR
;

420 
__IO
 
uöt32_t
 
RDTR
;

421 
__IO
 
uöt32_t
 
RDLR
;

422 
__IO
 
uöt32_t
 
RDHR
;

423 } 
	tCAN_FIFOMaûBox_Ty≥Def
;

430 
__IO
 
uöt32_t
 
FR1
;

431 
__IO
 
uöt32_t
 
FR2
;

432 } 
	tCAN_FûãrRegi°î_Ty≥Def
;

439 
__IO
 
uöt32_t
 
MCR
;

440 
__IO
 
uöt32_t
 
MSR
;

441 
__IO
 
uöt32_t
 
TSR
;

442 
__IO
 
uöt32_t
 
RF0R
;

443 
__IO
 
uöt32_t
 
RF1R
;

444 
__IO
 
uöt32_t
 
IER
;

445 
__IO
 
uöt32_t
 
ESR
;

446 
__IO
 
uöt32_t
 
BTR
;

447 
uöt32_t
 
RESERVED0
[88];

448 
CAN_TxMaûBox_Ty≥Def
 
sTxMaûBox
[3];

449 
CAN_FIFOMaûBox_Ty≥Def
 
sFIFOMaûBox
[2];

450 
uöt32_t
 
RESERVED1
[12];

451 
__IO
 
uöt32_t
 
FMR
;

452 
__IO
 
uöt32_t
 
FM1R
;

453 
uöt32_t
 
RESERVED2
;

454 
__IO
 
uöt32_t
 
FS1R
;

455 
uöt32_t
 
RESERVED3
;

456 
__IO
 
uöt32_t
 
FFA1R
;

457 
uöt32_t
 
RESERVED4
;

458 
__IO
 
uöt32_t
 
FA1R
;

459 
uöt32_t
 
RESERVED5
[8];

460 
CAN_FûãrRegi°î_Ty≥Def
 
sFûãrRegi°î
[28];

461 } 
	tCAN_Ty≥Def
;

469 
__IO
 
uöt32_t
 
CR
;

470 
__IO
 
uöt32_t
 
CFGR
;

471 
__IO
 
uöt32_t
 
TXDR
;

472 
__IO
 
uöt32_t
 
RXDR
;

473 
__IO
 
uöt32_t
 
ISR
;

474 
__IO
 
uöt32_t
 
IER
;

475 }
	tCEC_Ty≥Def
;

483 
__IO
 
uöt32_t
 
CSR
;

484 } 
	tCOMP_Ty≥Def
;

493 
__IO
 
uöt32_t
 
DR
;

494 
__IO
 
uöt8_t
 
IDR
;

495 
uöt8_t
 
RESERVED0
;

496 
uöt16_t
 
RESERVED1
;

497 
__IO
 
uöt32_t
 
CR
;

498 
uöt32_t
 
RESERVED2
;

499 
__IO
 
uöt32_t
 
INIT
;

500 
__IO
 
uöt32_t
 
POL
;

501 } 
	tCRC_Ty≥Def
;

508 
__IO
 
uöt32_t
 
CR
;

509 
__IO
 
uöt32_t
 
CFGR
;

510 
__IO
 
uöt32_t
 
ISR
;

511 
__IO
 
uöt32_t
 
ICR
;

512 } 
	tCRS_Ty≥Def
;

520 
__IO
 
uöt32_t
 
CR
;

521 
__IO
 
uöt32_t
 
SWTRIGR
;

522 
__IO
 
uöt32_t
 
DHR12R1
;

523 
__IO
 
uöt32_t
 
DHR12L1
;

524 
__IO
 
uöt32_t
 
DHR8R1
;

525 
__IO
 
uöt32_t
 
DHR12R2
;

526 
__IO
 
uöt32_t
 
DHR12L2
;

527 
__IO
 
uöt32_t
 
DHR8R2
;

528 
__IO
 
uöt32_t
 
DHR12RD
;

529 
__IO
 
uöt32_t
 
DHR12LD
;

530 
__IO
 
uöt32_t
 
DHR8RD
;

531 
__IO
 
uöt32_t
 
DOR1
;

532 
__IO
 
uöt32_t
 
DOR2
;

533 
__IO
 
uöt32_t
 
SR
;

534 } 
	tDAC_Ty≥Def
;

542 
__IO
 
uöt32_t
 
IDCODE
;

543 
__IO
 
uöt32_t
 
CR
;

544 
__IO
 
uöt32_t
 
APB1FZ
;

545 
__IO
 
uöt32_t
 
APB2FZ
;

546 }
	tDBGMCU_Ty≥Def
;

554 
__IO
 
uöt32_t
 
CCR
;

555 
__IO
 
uöt32_t
 
CNDTR
;

556 
__IO
 
uöt32_t
 
CPAR
;

557 
__IO
 
uöt32_t
 
CMAR
;

558 } 
	tDMA_Ch™√l_Ty≥Def
;

562 
__IO
 
uöt32_t
 
ISR
;

563 
__IO
 
uöt32_t
 
IFCR
;

564 } 
	tDMA_Ty≥Def
;

572 
__IO
 
uöt32_t
 
IMR
;

573 
__IO
 
uöt32_t
 
EMR
;

574 
__IO
 
uöt32_t
 
RTSR
;

575 
__IO
 
uöt32_t
 
FTSR
;

576 
__IO
 
uöt32_t
 
SWIER
;

577 
__IO
 
uöt32_t
 
PR
;

578 }
	tEXTI_Ty≥Def
;

585 
__IO
 
uöt32_t
 
ACR
;

586 
__IO
 
uöt32_t
 
KEYR
;

587 
__IO
 
uöt32_t
 
OPTKEYR
;

588 
__IO
 
uöt32_t
 
SR
;

589 
__IO
 
uöt32_t
 
CR
;

590 
__IO
 
uöt32_t
 
AR
;

591 
__IO
 
uöt32_t
 
RESERVED
;

592 
__IO
 
uöt32_t
 
OBR
;

593 
__IO
 
uöt32_t
 
WRPR
;

594 } 
	tFLASH_Ty≥Def
;

602 
__IO
 
uöt16_t
 
RDP
;

603 
__IO
 
uöt16_t
 
USER
;

604 
__IO
 
uöt16_t
 
DATA0
;

605 
__IO
 
uöt16_t
 
DATA1
;

606 
__IO
 
uöt16_t
 
WRP0
;

607 
__IO
 
uöt16_t
 
WRP1
;

608 
__IO
 
uöt16_t
 
WRP2
;

609 
__IO
 
uöt16_t
 
WRP3
;

610 } 
	tOB_Ty≥Def
;

619 
__IO
 
uöt32_t
 
MODER
;

620 
__IO
 
uöt16_t
 
OTYPER
;

621 
uöt16_t
 
RESERVED0
;

622 
__IO
 
uöt32_t
 
OSPEEDR
;

623 
__IO
 
uöt32_t
 
PUPDR
;

624 
__IO
 
uöt16_t
 
IDR
;

625 
uöt16_t
 
RESERVED1
;

626 
__IO
 
uöt16_t
 
ODR
;

627 
uöt16_t
 
RESERVED2
;

628 
__IO
 
uöt32_t
 
BSRR
;

629 
__IO
 
uöt32_t
 
LCKR
;

630 
__IO
 
uöt32_t
 
AFR
[2];

631 
__IO
 
uöt16_t
 
BRR
;

632 
uöt16_t
 
RESERVED3
;

633 }
	tGPIO_Ty≥Def
;

641 
__IO
 
uöt32_t
 
CFGR1
;

642 
uöt32_t
 
RESERVED
;

643 
__IO
 
uöt32_t
 
EXTICR
[4];

644 
__IO
 
uöt32_t
 
CFGR2
;

645 } 
	tSYSCFG_Ty≥Def
;

653 
__IO
 
uöt32_t
 
CR1
;

654 
__IO
 
uöt32_t
 
CR2
;

655 
__IO
 
uöt32_t
 
OAR1
;

656 
__IO
 
uöt32_t
 
OAR2
;

657 
__IO
 
uöt32_t
 
TIMINGR
;

658 
__IO
 
uöt32_t
 
TIMEOUTR
;

659 
__IO
 
uöt32_t
 
ISR
;

660 
__IO
 
uöt32_t
 
ICR
;

661 
__IO
 
uöt32_t
 
PECR
;

662 
__IO
 
uöt32_t
 
RXDR
;

663 
__IO
 
uöt32_t
 
TXDR
;

664 }
	tI2C_Ty≥Def
;

672 
__IO
 
uöt32_t
 
KR
;

673 
__IO
 
uöt32_t
 
PR
;

674 
__IO
 
uöt32_t
 
RLR
;

675 
__IO
 
uöt32_t
 
SR
;

676 
__IO
 
uöt32_t
 
WINR
;

677 } 
	tIWDG_Ty≥Def
;

685 
__IO
 
uöt32_t
 
CR
;

686 
__IO
 
uöt32_t
 
CSR
;

687 } 
	tPWR_Ty≥Def
;

695 
__IO
 
uöt32_t
 
CR
;

696 
__IO
 
uöt32_t
 
CFGR
;

697 
__IO
 
uöt32_t
 
CIR
;

698 
__IO
 
uöt32_t
 
APB2RSTR
;

699 
__IO
 
uöt32_t
 
APB1RSTR
;

700 
__IO
 
uöt32_t
 
AHBENR
;

701 
__IO
 
uöt32_t
 
APB2ENR
;

702 
__IO
 
uöt32_t
 
APB1ENR
;

703 
__IO
 
uöt32_t
 
BDCR
;

704 
__IO
 
uöt32_t
 
CSR
;

705 
__IO
 
uöt32_t
 
AHBRSTR
;

706 
__IO
 
uöt32_t
 
CFGR2
;

707 
__IO
 
uöt32_t
 
CFGR3
;

708 
__IO
 
uöt32_t
 
CR2
;

709 } 
	tRCC_Ty≥Def
;

717 
__IO
 
uöt32_t
 
TR
;

718 
__IO
 
uöt32_t
 
DR
;

719 
__IO
 
uöt32_t
 
CR
;

720 
__IO
 
uöt32_t
 
ISR
;

721 
__IO
 
uöt32_t
 
PRER
;

722 
__IO
 
uöt32_t
 
WUTR
;

723 
uöt32_t
 
RESERVED1
;

724 
__IO
 
uöt32_t
 
ALRMAR
;

725 
uöt32_t
 
RESERVED2
;

726 
__IO
 
uöt32_t
 
WPR
;

727 
__IO
 
uöt32_t
 
SSR
;

728 
__IO
 
uöt32_t
 
SHIFTR
;

729 
__IO
 
uöt32_t
 
TSTR
;

730 
__IO
 
uöt32_t
 
TSDR
;

731 
__IO
 
uöt32_t
 
TSSSR
;

732 
__IO
 
uöt32_t
 
CALR
;

733 
__IO
 
uöt32_t
 
TAFCR
;

734 
__IO
 
uöt32_t
 
ALRMASSR
;

735 
uöt32_t
 
RESERVED3
;

736 
uöt32_t
 
RESERVED4
;

737 
__IO
 
uöt32_t
 
BKP0R
;

738 
__IO
 
uöt32_t
 
BKP1R
;

739 
__IO
 
uöt32_t
 
BKP2R
;

740 
__IO
 
uöt32_t
 
BKP3R
;

741 
__IO
 
uöt32_t
 
BKP4R
;

742 } 
	tRTC_Ty≥Def
;

745 
	#CAL
 
CALR


	)

753 
__IO
 
uöt16_t
 
CR1
;

754 
uöt16_t
 
RESERVED0
;

755 
__IO
 
uöt16_t
 
CR2
;

756 
uöt16_t
 
RESERVED1
;

757 
__IO
 
uöt16_t
 
SR
;

758 
uöt16_t
 
RESERVED2
;

759 
__IO
 
uöt16_t
 
DR
;

760 
uöt16_t
 
RESERVED3
;

761 
__IO
 
uöt16_t
 
CRCPR
;

762 
uöt16_t
 
RESERVED4
;

763 
__IO
 
uöt16_t
 
RXCRCR
;

764 
uöt16_t
 
RESERVED5
;

765 
__IO
 
uöt16_t
 
TXCRCR
;

766 
uöt16_t
 
RESERVED6
;

767 
__IO
 
uöt16_t
 
I2SCFGR
;

768 
uöt16_t
 
RESERVED7
;

769 
__IO
 
uöt16_t
 
I2SPR
;

770 
uöt16_t
 
RESERVED8
;

771 } 
	tSPI_Ty≥Def
;

779 
__IO
 
uöt16_t
 
CR1
;

780 
uöt16_t
 
RESERVED0
;

781 
__IO
 
uöt16_t
 
CR2
;

782 
uöt16_t
 
RESERVED1
;

783 
__IO
 
uöt16_t
 
SMCR
;

784 
uöt16_t
 
RESERVED2
;

785 
__IO
 
uöt16_t
 
DIER
;

786 
uöt16_t
 
RESERVED3
;

787 
__IO
 
uöt16_t
 
SR
;

788 
uöt16_t
 
RESERVED4
;

789 
__IO
 
uöt16_t
 
EGR
;

790 
uöt16_t
 
RESERVED5
;

791 
__IO
 
uöt16_t
 
CCMR1
;

792 
uöt16_t
 
RESERVED6
;

793 
__IO
 
uöt16_t
 
CCMR2
;

794 
uöt16_t
 
RESERVED7
;

795 
__IO
 
uöt16_t
 
CCER
;

796 
uöt16_t
 
RESERVED8
;

797 
__IO
 
uöt32_t
 
CNT
;

798 
__IO
 
uöt16_t
 
PSC
;

799 
uöt16_t
 
RESERVED10
;

800 
__IO
 
uöt32_t
 
ARR
;

801 
__IO
 
uöt16_t
 
RCR
;

802 
uöt16_t
 
RESERVED12
;

803 
__IO
 
uöt32_t
 
CCR1
;

804 
__IO
 
uöt32_t
 
CCR2
;

805 
__IO
 
uöt32_t
 
CCR3
;

806 
__IO
 
uöt32_t
 
CCR4
;

807 
__IO
 
uöt16_t
 
BDTR
;

808 
uöt16_t
 
RESERVED17
;

809 
__IO
 
uöt16_t
 
DCR
;

810 
uöt16_t
 
RESERVED18
;

811 
__IO
 
uöt16_t
 
DMAR
;

812 
uöt16_t
 
RESERVED19
;

813 
__IO
 
uöt16_t
 
OR
;

814 
uöt16_t
 
RESERVED20
;

815 } 
	tTIM_Ty≥Def
;

822 
__IO
 
uöt32_t
 
CR
;

823 
__IO
 
uöt32_t
 
IER
;

824 
__IO
 
uöt32_t
 
ICR
;

825 
__IO
 
uöt32_t
 
ISR
;

826 
__IO
 
uöt32_t
 
IOHCR
;

827 
__IO
 
uöt32_t
 
RESERVED1
;

828 
__IO
 
uöt32_t
 
IOASCR
;

829 
__IO
 
uöt32_t
 
RESERVED2
;

830 
__IO
 
uöt32_t
 
IOSCR
;

831 
__IO
 
uöt32_t
 
RESERVED3
;

832 
__IO
 
uöt32_t
 
IOCCR
;

833 
__IO
 
uöt32_t
 
RESERVED4
;

834 
__IO
 
uöt32_t
 
IOGCSR
;

835 
__IO
 
uöt32_t
 
IOGXCR
[8];

836 } 
	tTSC_Ty≥Def
;

844 
__IO
 
uöt32_t
 
CR1
;

845 
__IO
 
uöt32_t
 
CR2
;

846 
__IO
 
uöt32_t
 
CR3
;

847 
__IO
 
uöt16_t
 
BRR
;

848 
uöt16_t
 
RESERVED1
;

849 
__IO
 
uöt16_t
 
GTPR
;

850 
uöt16_t
 
RESERVED2
;

851 
__IO
 
uöt32_t
 
RTOR
;

852 
__IO
 
uöt16_t
 
RQR
;

853 
uöt16_t
 
RESERVED3
;

854 
__IO
 
uöt32_t
 
ISR
;

855 
__IO
 
uöt32_t
 
ICR
;

856 
__IO
 
uöt16_t
 
RDR
;

857 
uöt16_t
 
RESERVED4
;

858 
__IO
 
uöt16_t
 
TDR
;

859 
uöt16_t
 
RESERVED5
;

860 } 
	tUSART_Ty≥Def
;

868 
__IO
 
uöt32_t
 
CR
;

869 
__IO
 
uöt32_t
 
CFR
;

870 
__IO
 
uöt32_t
 
SR
;

871 } 
	tWWDG_Ty≥Def
;

882 
	#FLASH_BASE
 ((
uöt32_t
)0x08000000Ë

	)

883 
	#SRAM_BASE
 ((
uöt32_t
)0x20000000Ë

	)

884 
	#PERIPH_BASE
 ((
uöt32_t
)0x40000000Ë

	)

887 
	#APBPERIPH_BASE
 
PERIPH_BASE


	)

888 
	#AHBPERIPH_BASE
 (
PERIPH_BASE
 + 0x00020000)

	)

889 
	#AHB2PERIPH_BASE
 (
PERIPH_BASE
 + 0x08000000)

	)

891 
	#TIM2_BASE
 (
APBPERIPH_BASE
 + 0x00000000)

	)

892 
	#TIM3_BASE
 (
APBPERIPH_BASE
 + 0x00000400)

	)

893 
	#TIM6_BASE
 (
APBPERIPH_BASE
 + 0x00001000)

	)

894 
	#TIM7_BASE
 (
APBPERIPH_BASE
 + 0x00001400)

	)

895 
	#TIM14_BASE
 (
APBPERIPH_BASE
 + 0x00002000)

	)

896 
	#RTC_BASE
 (
APBPERIPH_BASE
 + 0x00002800)

	)

897 
	#WWDG_BASE
 (
APBPERIPH_BASE
 + 0x00002C00)

	)

898 
	#IWDG_BASE
 (
APBPERIPH_BASE
 + 0x00003000)

	)

899 
	#SPI2_BASE
 (
APBPERIPH_BASE
 + 0x00003800)

	)

900 
	#USART2_BASE
 (
APBPERIPH_BASE
 + 0x00004400)

	)

901 
	#USART3_BASE
 (
APBPERIPH_BASE
 + 0x00004800)

	)

902 
	#USART4_BASE
 (
APBPERIPH_BASE
 + 0x00004C00)

	)

903 
	#I2C1_BASE
 (
APBPERIPH_BASE
 + 0x00005400)

	)

904 
	#I2C2_BASE
 (
APBPERIPH_BASE
 + 0x00005800)

	)

905 
	#CAN_BASE
 (
APBPERIPH_BASE
 + 0x00006400)

	)

906 
	#CRS_BASE
 (
APBPERIPH_BASE
 + 0x00006C00)

	)

907 
	#PWR_BASE
 (
APBPERIPH_BASE
 + 0x00007000)

	)

908 
	#DAC_BASE
 (
APBPERIPH_BASE
 + 0x00007400)

	)

909 
	#CEC_BASE
 (
APBPERIPH_BASE
 + 0x00007800)

	)

911 
	#SYSCFG_BASE
 (
APBPERIPH_BASE
 + 0x00010000)

	)

912 
	#COMP_BASE
 (
APBPERIPH_BASE
 + 0x0001001C)

	)

913 
	#EXTI_BASE
 (
APBPERIPH_BASE
 + 0x00010400)

	)

914 
	#ADC1_BASE
 (
APBPERIPH_BASE
 + 0x00012400)

	)

915 
	#ADC_BASE
 (
APBPERIPH_BASE
 + 0x00012708)

	)

916 
	#TIM1_BASE
 (
APBPERIPH_BASE
 + 0x00012C00)

	)

917 
	#SPI1_BASE
 (
APBPERIPH_BASE
 + 0x00013000)

	)

918 
	#USART1_BASE
 (
APBPERIPH_BASE
 + 0x00013800)

	)

919 
	#TIM15_BASE
 (
APBPERIPH_BASE
 + 0x00014000)

	)

920 
	#TIM16_BASE
 (
APBPERIPH_BASE
 + 0x00014400)

	)

921 
	#TIM17_BASE
 (
APBPERIPH_BASE
 + 0x00014800)

	)

922 
	#DBGMCU_BASE
 (
APBPERIPH_BASE
 + 0x00015800)

	)

924 
	#DMA1_BASE
 (
AHBPERIPH_BASE
 + 0x00000000)

	)

925 
	#DMA1_Ch™√l1_BASE
 (
DMA1_BASE
 + 0x00000008)

	)

926 
	#DMA1_Ch™√l2_BASE
 (
DMA1_BASE
 + 0x0000001C)

	)

927 
	#DMA1_Ch™√l3_BASE
 (
DMA1_BASE
 + 0x00000030)

	)

928 
	#DMA1_Ch™√l4_BASE
 (
DMA1_BASE
 + 0x00000044)

	)

929 
	#DMA1_Ch™√l5_BASE
 (
DMA1_BASE
 + 0x00000058)

	)

930 
	#DMA1_Ch™√l6_BASE
 (
DMA1_BASE
 + 0x0000006C)

	)

931 
	#DMA1_Ch™√l7_BASE
 (
DMA1_BASE
 + 0x00000080)

	)

933 
	#RCC_BASE
 (
AHBPERIPH_BASE
 + 0x00001000)

	)

934 
	#FLASH_R_BASE
 (
AHBPERIPH_BASE
 + 0x00002000Ë

	)

935 
	#OB_BASE
 ((
uöt32_t
)0x1FFFF800Ë

	)

936 
	#CRC_BASE
 (
AHBPERIPH_BASE
 + 0x00003000)

	)

937 
	#TSC_BASE
 (
AHBPERIPH_BASE
 + 0x00004000)

	)

939 
	#GPIOA_BASE
 (
AHB2PERIPH_BASE
 + 0x00000000)

	)

940 
	#GPIOB_BASE
 (
AHB2PERIPH_BASE
 + 0x00000400)

	)

941 
	#GPIOC_BASE
 (
AHB2PERIPH_BASE
 + 0x00000800)

	)

942 
	#GPIOD_BASE
 (
AHB2PERIPH_BASE
 + 0x00000C00)

	)

943 
	#GPIOE_BASE
 (
AHB2PERIPH_BASE
 + 0x00001000)

	)

944 
	#GPIOF_BASE
 (
AHB2PERIPH_BASE
 + 0x00001400)

	)

954 
	#TIM2
 ((
TIM_Ty≥Def
 *Ë
TIM2_BASE
)

	)

955 
	#TIM3
 ((
TIM_Ty≥Def
 *Ë
TIM3_BASE
)

	)

956 
	#TIM6
 ((
TIM_Ty≥Def
 *Ë
TIM6_BASE
)

	)

957 
	#TIM7
 ((
TIM_Ty≥Def
 *Ë
TIM7_BASE
)

	)

958 
	#TIM14
 ((
TIM_Ty≥Def
 *Ë
TIM14_BASE
)

	)

959 
	#RTC
 ((
RTC_Ty≥Def
 *Ë
RTC_BASE
)

	)

960 
	#WWDG
 ((
WWDG_Ty≥Def
 *Ë
WWDG_BASE
)

	)

961 
	#IWDG
 ((
IWDG_Ty≥Def
 *Ë
IWDG_BASE
)

	)

962 
	#SPI2
 ((
SPI_Ty≥Def
 *Ë
SPI2_BASE
)

	)

963 
	#USART2
 ((
USART_Ty≥Def
 *Ë
USART2_BASE
)

	)

964 
	#USART3
 ((
USART_Ty≥Def
 *Ë
USART3_BASE
)

	)

965 
	#USART4
 ((
USART_Ty≥Def
 *Ë
USART4_BASE
)

	)

966 
	#I2C1
 ((
I2C_Ty≥Def
 *Ë
I2C1_BASE
)

	)

967 
	#I2C2
 ((
I2C_Ty≥Def
 *Ë
I2C2_BASE
)

	)

968 
	#CAN
 ((
CAN_Ty≥Def
 *Ë
CAN_BASE
)

	)

969 
	#CRS
 ((
CRS_Ty≥Def
 *Ë
CRS_BASE
)

	)

970 
	#PWR
 ((
PWR_Ty≥Def
 *Ë
PWR_BASE
)

	)

971 
	#DAC
 ((
DAC_Ty≥Def
 *Ë
DAC_BASE
)

	)

972 
	#CEC
 ((
CEC_Ty≥Def
 *Ë
CEC_BASE
)

	)

974 
	#SYSCFG
 ((
SYSCFG_Ty≥Def
 *Ë
SYSCFG_BASE
)

	)

975 
	#COMP
 ((
COMP_Ty≥Def
 *Ë
COMP_BASE
)

	)

976 
	#EXTI
 ((
EXTI_Ty≥Def
 *Ë
EXTI_BASE
)

	)

977 
	#ADC1
 ((
ADC_Ty≥Def
 *Ë
ADC1_BASE
)

	)

978 
	#ADC
 ((
ADC_Comm⁄_Ty≥Def
 *Ë
ADC_BASE
)

	)

979 
	#TIM1
 ((
TIM_Ty≥Def
 *Ë
TIM1_BASE
)

	)

980 
	#SPI1
 ((
SPI_Ty≥Def
 *Ë
SPI1_BASE
)

	)

981 
	#USART1
 ((
USART_Ty≥Def
 *Ë
USART1_BASE
)

	)

982 
	#TIM15
 ((
TIM_Ty≥Def
 *Ë
TIM15_BASE
)

	)

983 
	#TIM16
 ((
TIM_Ty≥Def
 *Ë
TIM16_BASE
)

	)

984 
	#TIM17
 ((
TIM_Ty≥Def
 *Ë
TIM17_BASE
)

	)

985 
	#DBGMCU
 ((
DBGMCU_Ty≥Def
 *Ë
DBGMCU_BASE
)

	)

987 
	#DMA1
 ((
DMA_Ty≥Def
 *Ë
DMA1_BASE
)

	)

988 
	#DMA1_Ch™√l1
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l1_BASE
)

	)

989 
	#DMA1_Ch™√l2
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l2_BASE
)

	)

990 
	#DMA1_Ch™√l3
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l3_BASE
)

	)

991 
	#DMA1_Ch™√l4
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l4_BASE
)

	)

992 
	#DMA1_Ch™√l5
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l5_BASE
)

	)

993 
	#DMA1_Ch™√l6
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l6_BASE
)

	)

994 
	#DMA1_Ch™√l7
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l7_BASE
)

	)

995 
	#FLASH
 ((
FLASH_Ty≥Def
 *Ë
FLASH_R_BASE
)

	)

996 
	#OB
 ((
OB_Ty≥Def
 *Ë
OB_BASE
)

	)

997 
	#RCC
 ((
RCC_Ty≥Def
 *Ë
RCC_BASE
)

	)

998 
	#CRC
 ((
CRC_Ty≥Def
 *Ë
CRC_BASE
)

	)

999 
	#TSC
 ((
TSC_Ty≥Def
 *Ë
TSC_BASE
)

	)

1001 
	#GPIOA
 ((
GPIO_Ty≥Def
 *Ë
GPIOA_BASE
)

	)

1002 
	#GPIOB
 ((
GPIO_Ty≥Def
 *Ë
GPIOB_BASE
)

	)

1003 
	#GPIOC
 ((
GPIO_Ty≥Def
 *Ë
GPIOC_BASE
)

	)

1004 
	#GPIOD
 ((
GPIO_Ty≥Def
 *Ë
GPIOD_BASE
)

	)

1005 
	#GPIOE
 ((
GPIO_Ty≥Def
 *Ë
GPIOE_BASE
)

	)

1006 
	#GPIOF
 ((
GPIO_Ty≥Def
 *Ë
GPIOF_BASE
)

	)

1029 
	#ADC_ISR_AWD
 ((
uöt32_t
)0x00000080Ë

	)

1030 
	#ADC_ISR_OVR
 ((
uöt32_t
)0x00000010Ë

	)

1031 
	#ADC_ISR_EOSEQ
 ((
uöt32_t
)0x00000008Ë

	)

1032 
	#ADC_ISR_EOC
 ((
uöt32_t
)0x00000004Ë

	)

1033 
	#ADC_ISR_EOSMP
 ((
uöt32_t
)0x00000002Ë

	)

1034 
	#ADC_ISR_ADRDY
 ((
uöt32_t
)0x00000001Ë

	)

1037 
	#ADC_ISR_EOS
 
ADC_ISR_EOSEQ


	)

1040 
	#ADC_IER_AWDIE
 ((
uöt32_t
)0x00000080Ë

	)

1041 
	#ADC_IER_OVRIE
 ((
uöt32_t
)0x00000010Ë

	)

1042 
	#ADC_IER_EOSEQIE
 ((
uöt32_t
)0x00000008Ë

	)

1043 
	#ADC_IER_EOCIE
 ((
uöt32_t
)0x00000004Ë

	)

1044 
	#ADC_IER_EOSMPIE
 ((
uöt32_t
)0x00000002Ë

	)

1045 
	#ADC_IER_ADRDYIE
 ((
uöt32_t
)0x00000001Ë

	)

1048 
	#ADC_IER_EOSIE
 
ADC_IER_EOSEQIE


	)

1051 
	#ADC_CR_ADCAL
 ((
uöt32_t
)0x80000000Ë

	)

1052 
	#ADC_CR_ADSTP
 ((
uöt32_t
)0x00000010Ë

	)

1053 
	#ADC_CR_ADSTART
 ((
uöt32_t
)0x00000004Ë

	)

1054 
	#ADC_CR_ADDIS
 ((
uöt32_t
)0x00000002Ë

	)

1055 
	#ADC_CR_ADEN
 ((
uöt32_t
)0x00000001Ë

	)

1058 
	#ADC_CFGR1_AWDCH
 ((
uöt32_t
)0x7C000000Ë

	)

1059 
	#ADC_CFGR1_AWDCH_0
 ((
uöt32_t
)0x04000000Ë

	)

1060 
	#ADC_CFGR1_AWDCH_1
 ((
uöt32_t
)0x08000000Ë

	)

1061 
	#ADC_CFGR1_AWDCH_2
 ((
uöt32_t
)0x10000000Ë

	)

1062 
	#ADC_CFGR1_AWDCH_3
 ((
uöt32_t
)0x20000000Ë

	)

1063 
	#ADC_CFGR1_AWDCH_4
 ((
uöt32_t
)0x40000000Ë

	)

1064 
	#ADC_CFGR1_AWDEN
 ((
uöt32_t
)0x00800000Ë

	)

1065 
	#ADC_CFGR1_AWDSGL
 ((
uöt32_t
)0x00400000Ë

	)

1066 
	#ADC_CFGR1_DISCEN
 ((
uöt32_t
)0x00010000Ë

	)

1067 
	#ADC_CFGR1_AUTOFF
 ((
uöt32_t
)0x00008000Ë

	)

1068 
	#ADC_CFGR1_WAIT
 ((
uöt32_t
)0x00004000Ë

	)

1069 
	#ADC_CFGR1_CONT
 ((
uöt32_t
)0x00002000Ë

	)

1070 
	#ADC_CFGR1_OVRMOD
 ((
uöt32_t
)0x00001000Ë

	)

1071 
	#ADC_CFGR1_EXTEN
 ((
uöt32_t
)0x00000C00Ë

	)

1072 
	#ADC_CFGR1_EXTEN_0
 ((
uöt32_t
)0x00000400Ë

	)

1073 
	#ADC_CFGR1_EXTEN_1
 ((
uöt32_t
)0x00000800Ë

	)

1074 
	#ADC_CFGR1_EXTSEL
 ((
uöt32_t
)0x000001C0Ë

	)

1075 
	#ADC_CFGR1_EXTSEL_0
 ((
uöt32_t
)0x00000040Ë

	)

1076 
	#ADC_CFGR1_EXTSEL_1
 ((
uöt32_t
)0x00000080Ë

	)

1077 
	#ADC_CFGR1_EXTSEL_2
 ((
uöt32_t
)0x00000100Ë

	)

1078 
	#ADC_CFGR1_ALIGN
 ((
uöt32_t
)0x00000020Ë

	)

1079 
	#ADC_CFGR1_RES
 ((
uöt32_t
)0x00000018Ë

	)

1080 
	#ADC_CFGR1_RES_0
 ((
uöt32_t
)0x00000008Ë

	)

1081 
	#ADC_CFGR1_RES_1
 ((
uöt32_t
)0x00000010Ë

	)

1082 
	#ADC_CFGR1_SCANDIR
 ((
uöt32_t
)0x00000004Ë

	)

1083 
	#ADC_CFGR1_DMACFG
 ((
uöt32_t
)0x00000002Ë

	)

1084 
	#ADC_CFGR1_DMAEN
 ((
uöt32_t
)0x00000001Ë

	)

1087 
	#ADC_CFGR1_AUTDLY
 
ADC_CFGR1_WAIT


	)

1090 
	#ADC_CFGR2_CKMODE
 ((
uöt32_t
)0xC0000000Ë

	)

1091 
	#ADC_CFGR2_CKMODE_1
 ((
uöt32_t
)0x80000000Ë

	)

1092 
	#ADC_CFGR2_CKMODE_0
 ((
uöt32_t
)0x40000000Ë

	)

1095 
	#ADC_CFGR2_JITOFFDIV4
 
ADC_CFGR2_CKMODE_1


	)

1096 
	#ADC_CFGR2_JITOFFDIV2
 
ADC_CFGR2_CKMODE_0


	)

1099 
	#ADC_SMPR_SMP
 ((
uöt32_t
)0x00000007Ë

	)

1100 
	#ADC_SMPR_SMP_0
 ((
uöt32_t
)0x00000001Ë

	)

1101 
	#ADC_SMPR_SMP_1
 ((
uöt32_t
)0x00000002Ë

	)

1102 
	#ADC_SMPR_SMP_2
 ((
uöt32_t
)0x00000004Ë

	)

1105 
	#ADC_SMPR1_SMPR
 
ADC_SMPR_SMP


	)

1106 
	#ADC_SMPR1_SMPR_0
 
ADC_SMPR_SMP_0


	)

1107 
	#ADC_SMPR1_SMPR_1
 
ADC_SMPR_SMP_1


	)

1108 
	#ADC_SMPR1_SMPR_2
 
ADC_SMPR_SMP_2


	)

1111 
	#ADC_TR_HT
 ((
uöt32_t
)0x0FFF0000Ë

	)

1112 
	#ADC_TR_LT
 ((
uöt32_t
)0x00000FFFË

	)

1115 
	#ADC_HTR_HT
 
ADC_TR_HT


	)

1116 
	#ADC_LTR_LT
 
ADC_TR_LT


	)

1119 
	#ADC_CHSELR_CHSEL18
 ((
uöt32_t
)0x00040000Ë

	)

1120 
	#ADC_CHSELR_CHSEL17
 ((
uöt32_t
)0x00020000Ë

	)

1121 
	#ADC_CHSELR_CHSEL16
 ((
uöt32_t
)0x00010000Ë

	)

1122 
	#ADC_CHSELR_CHSEL15
 ((
uöt32_t
)0x00008000Ë

	)

1123 
	#ADC_CHSELR_CHSEL14
 ((
uöt32_t
)0x00004000Ë

	)

1124 
	#ADC_CHSELR_CHSEL13
 ((
uöt32_t
)0x00002000Ë

	)

1125 
	#ADC_CHSELR_CHSEL12
 ((
uöt32_t
)0x00001000Ë

	)

1126 
	#ADC_CHSELR_CHSEL11
 ((
uöt32_t
)0x00000800Ë

	)

1127 
	#ADC_CHSELR_CHSEL10
 ((
uöt32_t
)0x00000400Ë

	)

1128 
	#ADC_CHSELR_CHSEL9
 ((
uöt32_t
)0x00000200Ë

	)

1129 
	#ADC_CHSELR_CHSEL8
 ((
uöt32_t
)0x00000100Ë

	)

1130 
	#ADC_CHSELR_CHSEL7
 ((
uöt32_t
)0x00000080Ë

	)

1131 
	#ADC_CHSELR_CHSEL6
 ((
uöt32_t
)0x00000040Ë

	)

1132 
	#ADC_CHSELR_CHSEL5
 ((
uöt32_t
)0x00000020Ë

	)

1133 
	#ADC_CHSELR_CHSEL4
 ((
uöt32_t
)0x00000010Ë

	)

1134 
	#ADC_CHSELR_CHSEL3
 ((
uöt32_t
)0x00000008Ë

	)

1135 
	#ADC_CHSELR_CHSEL2
 ((
uöt32_t
)0x00000004Ë

	)

1136 
	#ADC_CHSELR_CHSEL1
 ((
uöt32_t
)0x00000002Ë

	)

1137 
	#ADC_CHSELR_CHSEL0
 ((
uöt32_t
)0x00000001Ë

	)

1140 
	#ADC_DR_DATA
 ((
uöt32_t
)0x0000FFFFË

	)

1143 
	#ADC_CCR_VBATEN
 ((
uöt32_t
)0x01000000Ë

	)

1144 
	#ADC_CCR_TSEN
 ((
uöt32_t
)0x00800000Ë

	)

1145 
	#ADC_CCR_VREFEN
 ((
uöt32_t
)0x00400000Ë

	)

1153 
	#CAN_MCR_INRQ
 ((
uöt16_t
)0x0001Ë

	)

1154 
	#CAN_MCR_SLEEP
 ((
uöt16_t
)0x0002Ë

	)

1155 
	#CAN_MCR_TXFP
 ((
uöt16_t
)0x0004Ë

	)

1156 
	#CAN_MCR_RFLM
 ((
uöt16_t
)0x0008Ë

	)

1157 
	#CAN_MCR_NART
 ((
uöt16_t
)0x0010Ë

	)

1158 
	#CAN_MCR_AWUM
 ((
uöt16_t
)0x0020Ë

	)

1159 
	#CAN_MCR_ABOM
 ((
uöt16_t
)0x0040Ë

	)

1160 
	#CAN_MCR_TTCM
 ((
uöt16_t
)0x0080Ë

	)

1161 
	#CAN_MCR_RESET
 ((
uöt16_t
)0x8000Ë

	)

1164 
	#CAN_MSR_INAK
 ((
uöt16_t
)0x0001Ë

	)

1165 
	#CAN_MSR_SLAK
 ((
uöt16_t
)0x0002Ë

	)

1166 
	#CAN_MSR_ERRI
 ((
uöt16_t
)0x0004Ë

	)

1167 
	#CAN_MSR_WKUI
 ((
uöt16_t
)0x0008Ë

	)

1168 
	#CAN_MSR_SLAKI
 ((
uöt16_t
)0x0010Ë

	)

1169 
	#CAN_MSR_TXM
 ((
uöt16_t
)0x0100Ë

	)

1170 
	#CAN_MSR_RXM
 ((
uöt16_t
)0x0200Ë

	)

1171 
	#CAN_MSR_SAMP
 ((
uöt16_t
)0x0400Ë

	)

1172 
	#CAN_MSR_RX
 ((
uöt16_t
)0x0800Ë

	)

1175 
	#CAN_TSR_RQCP0
 ((
uöt32_t
)0x00000001Ë

	)

1176 
	#CAN_TSR_TXOK0
 ((
uöt32_t
)0x00000002Ë

	)

1177 
	#CAN_TSR_ALST0
 ((
uöt32_t
)0x00000004Ë

	)

1178 
	#CAN_TSR_TERR0
 ((
uöt32_t
)0x00000008Ë

	)

1179 
	#CAN_TSR_ABRQ0
 ((
uöt32_t
)0x00000080Ë

	)

1180 
	#CAN_TSR_RQCP1
 ((
uöt32_t
)0x00000100Ë

	)

1181 
	#CAN_TSR_TXOK1
 ((
uöt32_t
)0x00000200Ë

	)

1182 
	#CAN_TSR_ALST1
 ((
uöt32_t
)0x00000400Ë

	)

1183 
	#CAN_TSR_TERR1
 ((
uöt32_t
)0x00000800Ë

	)

1184 
	#CAN_TSR_ABRQ1
 ((
uöt32_t
)0x00008000Ë

	)

1185 
	#CAN_TSR_RQCP2
 ((
uöt32_t
)0x00010000Ë

	)

1186 
	#CAN_TSR_TXOK2
 ((
uöt32_t
)0x00020000Ë

	)

1187 
	#CAN_TSR_ALST2
 ((
uöt32_t
)0x00040000Ë

	)

1188 
	#CAN_TSR_TERR2
 ((
uöt32_t
)0x00080000Ë

	)

1189 
	#CAN_TSR_ABRQ2
 ((
uöt32_t
)0x00800000Ë

	)

1190 
	#CAN_TSR_CODE
 ((
uöt32_t
)0x03000000Ë

	)

1192 
	#CAN_TSR_TME
 ((
uöt32_t
)0x1C000000Ë

	)

1193 
	#CAN_TSR_TME0
 ((
uöt32_t
)0x04000000Ë

	)

1194 
	#CAN_TSR_TME1
 ((
uöt32_t
)0x08000000Ë

	)

1195 
	#CAN_TSR_TME2
 ((
uöt32_t
)0x10000000Ë

	)

1197 
	#CAN_TSR_LOW
 ((
uöt32_t
)0xE0000000Ë

	)

1198 
	#CAN_TSR_LOW0
 ((
uöt32_t
)0x20000000Ë

	)

1199 
	#CAN_TSR_LOW1
 ((
uöt32_t
)0x40000000Ë

	)

1200 
	#CAN_TSR_LOW2
 ((
uöt32_t
)0x80000000Ë

	)

1203 
	#CAN_RF0R_FMP0
 ((
uöt8_t
)0x03Ë

	)

1204 
	#CAN_RF0R_FULL0
 ((
uöt8_t
)0x08Ë

	)

1205 
	#CAN_RF0R_FOVR0
 ((
uöt8_t
)0x10Ë

	)

1206 
	#CAN_RF0R_RFOM0
 ((
uöt8_t
)0x20Ë

	)

1209 
	#CAN_RF1R_FMP1
 ((
uöt8_t
)0x03Ë

	)

1210 
	#CAN_RF1R_FULL1
 ((
uöt8_t
)0x08Ë

	)

1211 
	#CAN_RF1R_FOVR1
 ((
uöt8_t
)0x10Ë

	)

1212 
	#CAN_RF1R_RFOM1
 ((
uöt8_t
)0x20Ë

	)

1215 
	#CAN_IER_TMEIE
 ((
uöt32_t
)0x00000001Ë

	)

1216 
	#CAN_IER_FMPIE0
 ((
uöt32_t
)0x00000002Ë

	)

1217 
	#CAN_IER_FFIE0
 ((
uöt32_t
)0x00000004Ë

	)

1218 
	#CAN_IER_FOVIE0
 ((
uöt32_t
)0x00000008Ë

	)

1219 
	#CAN_IER_FMPIE1
 ((
uöt32_t
)0x00000010Ë

	)

1220 
	#CAN_IER_FFIE1
 ((
uöt32_t
)0x00000020Ë

	)

1221 
	#CAN_IER_FOVIE1
 ((
uöt32_t
)0x00000040Ë

	)

1222 
	#CAN_IER_EWGIE
 ((
uöt32_t
)0x00000100Ë

	)

1223 
	#CAN_IER_EPVIE
 ((
uöt32_t
)0x00000200Ë

	)

1224 
	#CAN_IER_BOFIE
 ((
uöt32_t
)0x00000400Ë

	)

1225 
	#CAN_IER_LECIE
 ((
uöt32_t
)0x00000800Ë

	)

1226 
	#CAN_IER_ERRIE
 ((
uöt32_t
)0x00008000Ë

	)

1227 
	#CAN_IER_WKUIE
 ((
uöt32_t
)0x00010000Ë

	)

1228 
	#CAN_IER_SLKIE
 ((
uöt32_t
)0x00020000Ë

	)

1231 
	#CAN_ESR_EWGF
 ((
uöt32_t
)0x00000001Ë

	)

1232 
	#CAN_ESR_EPVF
 ((
uöt32_t
)0x00000002Ë

	)

1233 
	#CAN_ESR_BOFF
 ((
uöt32_t
)0x00000004Ë

	)

1235 
	#CAN_ESR_LEC
 ((
uöt32_t
)0x00000070Ë

	)

1236 
	#CAN_ESR_LEC_0
 ((
uöt32_t
)0x00000010Ë

	)

1237 
	#CAN_ESR_LEC_1
 ((
uöt32_t
)0x00000020Ë

	)

1238 
	#CAN_ESR_LEC_2
 ((
uöt32_t
)0x00000040Ë

	)

1240 
	#CAN_ESR_TEC
 ((
uöt32_t
)0x00FF0000Ë

	)

1241 
	#CAN_ESR_REC
 ((
uöt32_t
)0xFF000000Ë

	)

1244 
	#CAN_BTR_BRP
 ((
uöt32_t
)0x000003FFË

	)

1245 
	#CAN_BTR_TS1
 ((
uöt32_t
)0x000F0000Ë

	)

1246 
	#CAN_BTR_TS2
 ((
uöt32_t
)0x00700000Ë

	)

1247 
	#CAN_BTR_SJW
 ((
uöt32_t
)0x03000000Ë

	)

1248 
	#CAN_BTR_LBKM
 ((
uöt32_t
)0x40000000Ë

	)

1249 
	#CAN_BTR_SILM
 ((
uöt32_t
)0x80000000Ë

	)

1253 
	#CAN_TI0R_TXRQ
 ((
uöt32_t
)0x00000001Ë

	)

1254 
	#CAN_TI0R_RTR
 ((
uöt32_t
)0x00000002Ë

	)

1255 
	#CAN_TI0R_IDE
 ((
uöt32_t
)0x00000004Ë

	)

1256 
	#CAN_TI0R_EXID
 ((
uöt32_t
)0x001FFFF8Ë

	)

1257 
	#CAN_TI0R_STID
 ((
uöt32_t
)0xFFE00000Ë

	)

1260 
	#CAN_TDT0R_DLC
 ((
uöt32_t
)0x0000000FË

	)

1261 
	#CAN_TDT0R_TGT
 ((
uöt32_t
)0x00000100Ë

	)

1262 
	#CAN_TDT0R_TIME
 ((
uöt32_t
)0xFFFF0000Ë

	)

1265 
	#CAN_TDL0R_DATA0
 ((
uöt32_t
)0x000000FFË

	)

1266 
	#CAN_TDL0R_DATA1
 ((
uöt32_t
)0x0000FF00Ë

	)

1267 
	#CAN_TDL0R_DATA2
 ((
uöt32_t
)0x00FF0000Ë

	)

1268 
	#CAN_TDL0R_DATA3
 ((
uöt32_t
)0xFF000000Ë

	)

1271 
	#CAN_TDH0R_DATA4
 ((
uöt32_t
)0x000000FFË

	)

1272 
	#CAN_TDH0R_DATA5
 ((
uöt32_t
)0x0000FF00Ë

	)

1273 
	#CAN_TDH0R_DATA6
 ((
uöt32_t
)0x00FF0000Ë

	)

1274 
	#CAN_TDH0R_DATA7
 ((
uöt32_t
)0xFF000000Ë

	)

1277 
	#CAN_TI1R_TXRQ
 ((
uöt32_t
)0x00000001Ë

	)

1278 
	#CAN_TI1R_RTR
 ((
uöt32_t
)0x00000002Ë

	)

1279 
	#CAN_TI1R_IDE
 ((
uöt32_t
)0x00000004Ë

	)

1280 
	#CAN_TI1R_EXID
 ((
uöt32_t
)0x001FFFF8Ë

	)

1281 
	#CAN_TI1R_STID
 ((
uöt32_t
)0xFFE00000Ë

	)

1284 
	#CAN_TDT1R_DLC
 ((
uöt32_t
)0x0000000FË

	)

1285 
	#CAN_TDT1R_TGT
 ((
uöt32_t
)0x00000100Ë

	)

1286 
	#CAN_TDT1R_TIME
 ((
uöt32_t
)0xFFFF0000Ë

	)

1289 
	#CAN_TDL1R_DATA0
 ((
uöt32_t
)0x000000FFË

	)

1290 
	#CAN_TDL1R_DATA1
 ((
uöt32_t
)0x0000FF00Ë

	)

1291 
	#CAN_TDL1R_DATA2
 ((
uöt32_t
)0x00FF0000Ë

	)

1292 
	#CAN_TDL1R_DATA3
 ((
uöt32_t
)0xFF000000Ë

	)

1295 
	#CAN_TDH1R_DATA4
 ((
uöt32_t
)0x000000FFË

	)

1296 
	#CAN_TDH1R_DATA5
 ((
uöt32_t
)0x0000FF00Ë

	)

1297 
	#CAN_TDH1R_DATA6
 ((
uöt32_t
)0x00FF0000Ë

	)

1298 
	#CAN_TDH1R_DATA7
 ((
uöt32_t
)0xFF000000Ë

	)

1301 
	#CAN_TI2R_TXRQ
 ((
uöt32_t
)0x00000001Ë

	)

1302 
	#CAN_TI2R_RTR
 ((
uöt32_t
)0x00000002Ë

	)

1303 
	#CAN_TI2R_IDE
 ((
uöt32_t
)0x00000004Ë

	)

1304 
	#CAN_TI2R_EXID
 ((
uöt32_t
)0x001FFFF8Ë

	)

1305 
	#CAN_TI2R_STID
 ((
uöt32_t
)0xFFE00000Ë

	)

1308 
	#CAN_TDT2R_DLC
 ((
uöt32_t
)0x0000000FË

	)

1309 
	#CAN_TDT2R_TGT
 ((
uöt32_t
)0x00000100Ë

	)

1310 
	#CAN_TDT2R_TIME
 ((
uöt32_t
)0xFFFF0000Ë

	)

1313 
	#CAN_TDL2R_DATA0
 ((
uöt32_t
)0x000000FFË

	)

1314 
	#CAN_TDL2R_DATA1
 ((
uöt32_t
)0x0000FF00Ë

	)

1315 
	#CAN_TDL2R_DATA2
 ((
uöt32_t
)0x00FF0000Ë

	)

1316 
	#CAN_TDL2R_DATA3
 ((
uöt32_t
)0xFF000000Ë

	)

1319 
	#CAN_TDH2R_DATA4
 ((
uöt32_t
)0x000000FFË

	)

1320 
	#CAN_TDH2R_DATA5
 ((
uöt32_t
)0x0000FF00Ë

	)

1321 
	#CAN_TDH2R_DATA6
 ((
uöt32_t
)0x00FF0000Ë

	)

1322 
	#CAN_TDH2R_DATA7
 ((
uöt32_t
)0xFF000000Ë

	)

1325 
	#CAN_RI0R_RTR
 ((
uöt32_t
)0x00000002Ë

	)

1326 
	#CAN_RI0R_IDE
 ((
uöt32_t
)0x00000004Ë

	)

1327 
	#CAN_RI0R_EXID
 ((
uöt32_t
)0x001FFFF8Ë

	)

1328 
	#CAN_RI0R_STID
 ((
uöt32_t
)0xFFE00000Ë

	)

1331 
	#CAN_RDT0R_DLC
 ((
uöt32_t
)0x0000000FË

	)

1332 
	#CAN_RDT0R_FMI
 ((
uöt32_t
)0x0000FF00Ë

	)

1333 
	#CAN_RDT0R_TIME
 ((
uöt32_t
)0xFFFF0000Ë

	)

1336 
	#CAN_RDL0R_DATA0
 ((
uöt32_t
)0x000000FFË

	)

1337 
	#CAN_RDL0R_DATA1
 ((
uöt32_t
)0x0000FF00Ë

	)

1338 
	#CAN_RDL0R_DATA2
 ((
uöt32_t
)0x00FF0000Ë

	)

1339 
	#CAN_RDL0R_DATA3
 ((
uöt32_t
)0xFF000000Ë

	)

1342 
	#CAN_RDH0R_DATA4
 ((
uöt32_t
)0x000000FFË

	)

1343 
	#CAN_RDH0R_DATA5
 ((
uöt32_t
)0x0000FF00Ë

	)

1344 
	#CAN_RDH0R_DATA6
 ((
uöt32_t
)0x00FF0000Ë

	)

1345 
	#CAN_RDH0R_DATA7
 ((
uöt32_t
)0xFF000000Ë

	)

1348 
	#CAN_RI1R_RTR
 ((
uöt32_t
)0x00000002Ë

	)

1349 
	#CAN_RI1R_IDE
 ((
uöt32_t
)0x00000004Ë

	)

1350 
	#CAN_RI1R_EXID
 ((
uöt32_t
)0x001FFFF8Ë

	)

1351 
	#CAN_RI1R_STID
 ((
uöt32_t
)0xFFE00000Ë

	)

1354 
	#CAN_RDT1R_DLC
 ((
uöt32_t
)0x0000000FË

	)

1355 
	#CAN_RDT1R_FMI
 ((
uöt32_t
)0x0000FF00Ë

	)

1356 
	#CAN_RDT1R_TIME
 ((
uöt32_t
)0xFFFF0000Ë

	)

1359 
	#CAN_RDL1R_DATA0
 ((
uöt32_t
)0x000000FFË

	)

1360 
	#CAN_RDL1R_DATA1
 ((
uöt32_t
)0x0000FF00Ë

	)

1361 
	#CAN_RDL1R_DATA2
 ((
uöt32_t
)0x00FF0000Ë

	)

1362 
	#CAN_RDL1R_DATA3
 ((
uöt32_t
)0xFF000000Ë

	)

1365 
	#CAN_RDH1R_DATA4
 ((
uöt32_t
)0x000000FFË

	)

1366 
	#CAN_RDH1R_DATA5
 ((
uöt32_t
)0x0000FF00Ë

	)

1367 
	#CAN_RDH1R_DATA6
 ((
uöt32_t
)0x00FF0000Ë

	)

1368 
	#CAN_RDH1R_DATA7
 ((
uöt32_t
)0xFF000000Ë

	)

1372 
	#CAN_FMR_FINIT
 ((
uöt8_t
)0x01Ë

	)

1375 
	#CAN_FM1R_FBM
 ((
uöt16_t
)0x3FFFË

	)

1376 
	#CAN_FM1R_FBM0
 ((
uöt16_t
)0x0001Ë

	)

1377 
	#CAN_FM1R_FBM1
 ((
uöt16_t
)0x0002Ë

	)

1378 
	#CAN_FM1R_FBM2
 ((
uöt16_t
)0x0004Ë

	)

1379 
	#CAN_FM1R_FBM3
 ((
uöt16_t
)0x0008Ë

	)

1380 
	#CAN_FM1R_FBM4
 ((
uöt16_t
)0x0010Ë

	)

1381 
	#CAN_FM1R_FBM5
 ((
uöt16_t
)0x0020Ë

	)

1382 
	#CAN_FM1R_FBM6
 ((
uöt16_t
)0x0040Ë

	)

1383 
	#CAN_FM1R_FBM7
 ((
uöt16_t
)0x0080Ë

	)

1384 
	#CAN_FM1R_FBM8
 ((
uöt16_t
)0x0100Ë

	)

1385 
	#CAN_FM1R_FBM9
 ((
uöt16_t
)0x0200Ë

	)

1386 
	#CAN_FM1R_FBM10
 ((
uöt16_t
)0x0400Ë

	)

1387 
	#CAN_FM1R_FBM11
 ((
uöt16_t
)0x0800Ë

	)

1388 
	#CAN_FM1R_FBM12
 ((
uöt16_t
)0x1000Ë

	)

1389 
	#CAN_FM1R_FBM13
 ((
uöt16_t
)0x2000Ë

	)

1392 
	#CAN_FS1R_FSC
 ((
uöt16_t
)0x3FFFË

	)

1393 
	#CAN_FS1R_FSC0
 ((
uöt16_t
)0x0001Ë

	)

1394 
	#CAN_FS1R_FSC1
 ((
uöt16_t
)0x0002Ë

	)

1395 
	#CAN_FS1R_FSC2
 ((
uöt16_t
)0x0004Ë

	)

1396 
	#CAN_FS1R_FSC3
 ((
uöt16_t
)0x0008Ë

	)

1397 
	#CAN_FS1R_FSC4
 ((
uöt16_t
)0x0010Ë

	)

1398 
	#CAN_FS1R_FSC5
 ((
uöt16_t
)0x0020Ë

	)

1399 
	#CAN_FS1R_FSC6
 ((
uöt16_t
)0x0040Ë

	)

1400 
	#CAN_FS1R_FSC7
 ((
uöt16_t
)0x0080Ë

	)

1401 
	#CAN_FS1R_FSC8
 ((
uöt16_t
)0x0100Ë

	)

1402 
	#CAN_FS1R_FSC9
 ((
uöt16_t
)0x0200Ë

	)

1403 
	#CAN_FS1R_FSC10
 ((
uöt16_t
)0x0400Ë

	)

1404 
	#CAN_FS1R_FSC11
 ((
uöt16_t
)0x0800Ë

	)

1405 
	#CAN_FS1R_FSC12
 ((
uöt16_t
)0x1000Ë

	)

1406 
	#CAN_FS1R_FSC13
 ((
uöt16_t
)0x2000Ë

	)

1409 
	#CAN_FFA1R_FFA
 ((
uöt16_t
)0x3FFFË

	)

1410 
	#CAN_FFA1R_FFA0
 ((
uöt16_t
)0x0001Ë

	)

1411 
	#CAN_FFA1R_FFA1
 ((
uöt16_t
)0x0002Ë

	)

1412 
	#CAN_FFA1R_FFA2
 ((
uöt16_t
)0x0004Ë

	)

1413 
	#CAN_FFA1R_FFA3
 ((
uöt16_t
)0x0008Ë

	)

1414 
	#CAN_FFA1R_FFA4
 ((
uöt16_t
)0x0010Ë

	)

1415 
	#CAN_FFA1R_FFA5
 ((
uöt16_t
)0x0020Ë

	)

1416 
	#CAN_FFA1R_FFA6
 ((
uöt16_t
)0x0040Ë

	)

1417 
	#CAN_FFA1R_FFA7
 ((
uöt16_t
)0x0080Ë

	)

1418 
	#CAN_FFA1R_FFA8
 ((
uöt16_t
)0x0100Ë

	)

1419 
	#CAN_FFA1R_FFA9
 ((
uöt16_t
)0x0200Ë

	)

1420 
	#CAN_FFA1R_FFA10
 ((
uöt16_t
)0x0400Ë

	)

1421 
	#CAN_FFA1R_FFA11
 ((
uöt16_t
)0x0800Ë

	)

1422 
	#CAN_FFA1R_FFA12
 ((
uöt16_t
)0x1000Ë

	)

1423 
	#CAN_FFA1R_FFA13
 ((
uöt16_t
)0x2000Ë

	)

1426 
	#CAN_FA1R_FACT
 ((
uöt16_t
)0x3FFFË

	)

1427 
	#CAN_FA1R_FACT0
 ((
uöt16_t
)0x0001Ë

	)

1428 
	#CAN_FA1R_FACT1
 ((
uöt16_t
)0x0002Ë

	)

1429 
	#CAN_FA1R_FACT2
 ((
uöt16_t
)0x0004Ë

	)

1430 
	#CAN_FA1R_FACT3
 ((
uöt16_t
)0x0008Ë

	)

1431 
	#CAN_FA1R_FACT4
 ((
uöt16_t
)0x0010Ë

	)

1432 
	#CAN_FA1R_FACT5
 ((
uöt16_t
)0x0020Ë

	)

1433 
	#CAN_FA1R_FACT6
 ((
uöt16_t
)0x0040Ë

	)

1434 
	#CAN_FA1R_FACT7
 ((
uöt16_t
)0x0080Ë

	)

1435 
	#CAN_FA1R_FACT8
 ((
uöt16_t
)0x0100Ë

	)

1436 
	#CAN_FA1R_FACT9
 ((
uöt16_t
)0x0200Ë

	)

1437 
	#CAN_FA1R_FACT10
 ((
uöt16_t
)0x0400Ë

	)

1438 
	#CAN_FA1R_FACT11
 ((
uöt16_t
)0x0800Ë

	)

1439 
	#CAN_FA1R_FACT12
 ((
uöt16_t
)0x1000Ë

	)

1440 
	#CAN_FA1R_FACT13
 ((
uöt16_t
)0x2000Ë

	)

1443 
	#CAN_F0R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1444 
	#CAN_F0R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1445 
	#CAN_F0R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1446 
	#CAN_F0R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1447 
	#CAN_F0R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1448 
	#CAN_F0R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1449 
	#CAN_F0R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1450 
	#CAN_F0R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1451 
	#CAN_F0R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1452 
	#CAN_F0R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1453 
	#CAN_F0R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1454 
	#CAN_F0R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1455 
	#CAN_F0R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1456 
	#CAN_F0R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1457 
	#CAN_F0R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1458 
	#CAN_F0R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1459 
	#CAN_F0R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1460 
	#CAN_F0R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1461 
	#CAN_F0R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1462 
	#CAN_F0R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1463 
	#CAN_F0R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1464 
	#CAN_F0R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1465 
	#CAN_F0R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1466 
	#CAN_F0R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1467 
	#CAN_F0R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1468 
	#CAN_F0R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1469 
	#CAN_F0R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1470 
	#CAN_F0R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1471 
	#CAN_F0R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1472 
	#CAN_F0R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1473 
	#CAN_F0R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1474 
	#CAN_F0R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1477 
	#CAN_F1R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1478 
	#CAN_F1R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1479 
	#CAN_F1R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1480 
	#CAN_F1R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1481 
	#CAN_F1R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1482 
	#CAN_F1R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1483 
	#CAN_F1R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1484 
	#CAN_F1R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1485 
	#CAN_F1R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1486 
	#CAN_F1R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1487 
	#CAN_F1R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1488 
	#CAN_F1R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1489 
	#CAN_F1R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1490 
	#CAN_F1R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1491 
	#CAN_F1R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1492 
	#CAN_F1R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1493 
	#CAN_F1R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1494 
	#CAN_F1R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1495 
	#CAN_F1R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1496 
	#CAN_F1R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1497 
	#CAN_F1R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1498 
	#CAN_F1R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1499 
	#CAN_F1R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1500 
	#CAN_F1R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1501 
	#CAN_F1R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1502 
	#CAN_F1R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1503 
	#CAN_F1R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1504 
	#CAN_F1R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1505 
	#CAN_F1R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1506 
	#CAN_F1R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1507 
	#CAN_F1R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1508 
	#CAN_F1R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1511 
	#CAN_F2R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1512 
	#CAN_F2R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1513 
	#CAN_F2R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1514 
	#CAN_F2R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1515 
	#CAN_F2R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1516 
	#CAN_F2R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1517 
	#CAN_F2R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1518 
	#CAN_F2R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1519 
	#CAN_F2R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1520 
	#CAN_F2R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1521 
	#CAN_F2R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1522 
	#CAN_F2R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1523 
	#CAN_F2R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1524 
	#CAN_F2R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1525 
	#CAN_F2R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1526 
	#CAN_F2R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1527 
	#CAN_F2R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1528 
	#CAN_F2R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1529 
	#CAN_F2R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1530 
	#CAN_F2R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1531 
	#CAN_F2R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1532 
	#CAN_F2R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1533 
	#CAN_F2R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1534 
	#CAN_F2R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1535 
	#CAN_F2R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1536 
	#CAN_F2R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1537 
	#CAN_F2R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1538 
	#CAN_F2R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1539 
	#CAN_F2R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1540 
	#CAN_F2R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1541 
	#CAN_F2R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1542 
	#CAN_F2R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1545 
	#CAN_F3R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1546 
	#CAN_F3R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1547 
	#CAN_F3R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1548 
	#CAN_F3R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1549 
	#CAN_F3R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1550 
	#CAN_F3R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1551 
	#CAN_F3R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1552 
	#CAN_F3R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1553 
	#CAN_F3R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1554 
	#CAN_F3R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1555 
	#CAN_F3R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1556 
	#CAN_F3R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1557 
	#CAN_F3R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1558 
	#CAN_F3R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1559 
	#CAN_F3R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1560 
	#CAN_F3R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1561 
	#CAN_F3R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1562 
	#CAN_F3R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1563 
	#CAN_F3R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1564 
	#CAN_F3R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1565 
	#CAN_F3R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1566 
	#CAN_F3R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1567 
	#CAN_F3R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1568 
	#CAN_F3R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1569 
	#CAN_F3R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1570 
	#CAN_F3R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1571 
	#CAN_F3R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1572 
	#CAN_F3R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1573 
	#CAN_F3R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1574 
	#CAN_F3R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1575 
	#CAN_F3R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1576 
	#CAN_F3R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1579 
	#CAN_F4R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1580 
	#CAN_F4R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1581 
	#CAN_F4R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1582 
	#CAN_F4R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1583 
	#CAN_F4R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1584 
	#CAN_F4R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1585 
	#CAN_F4R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1586 
	#CAN_F4R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1587 
	#CAN_F4R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1588 
	#CAN_F4R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1589 
	#CAN_F4R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1590 
	#CAN_F4R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1591 
	#CAN_F4R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1592 
	#CAN_F4R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1593 
	#CAN_F4R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1594 
	#CAN_F4R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1595 
	#CAN_F4R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1596 
	#CAN_F4R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1597 
	#CAN_F4R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1598 
	#CAN_F4R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1599 
	#CAN_F4R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1600 
	#CAN_F4R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1601 
	#CAN_F4R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1602 
	#CAN_F4R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1603 
	#CAN_F4R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1604 
	#CAN_F4R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1605 
	#CAN_F4R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1606 
	#CAN_F4R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1607 
	#CAN_F4R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1608 
	#CAN_F4R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1609 
	#CAN_F4R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1610 
	#CAN_F4R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1613 
	#CAN_F5R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1614 
	#CAN_F5R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1615 
	#CAN_F5R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1616 
	#CAN_F5R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1617 
	#CAN_F5R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1618 
	#CAN_F5R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1619 
	#CAN_F5R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1620 
	#CAN_F5R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1621 
	#CAN_F5R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1622 
	#CAN_F5R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1623 
	#CAN_F5R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1624 
	#CAN_F5R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1625 
	#CAN_F5R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1626 
	#CAN_F5R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1627 
	#CAN_F5R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1628 
	#CAN_F5R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1629 
	#CAN_F5R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1630 
	#CAN_F5R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1631 
	#CAN_F5R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1632 
	#CAN_F5R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1633 
	#CAN_F5R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1634 
	#CAN_F5R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1635 
	#CAN_F5R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1636 
	#CAN_F5R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1637 
	#CAN_F5R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1638 
	#CAN_F5R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1639 
	#CAN_F5R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1640 
	#CAN_F5R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1641 
	#CAN_F5R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1642 
	#CAN_F5R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1643 
	#CAN_F5R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1644 
	#CAN_F5R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1647 
	#CAN_F6R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1648 
	#CAN_F6R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1649 
	#CAN_F6R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1650 
	#CAN_F6R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1651 
	#CAN_F6R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1652 
	#CAN_F6R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1653 
	#CAN_F6R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1654 
	#CAN_F6R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1655 
	#CAN_F6R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1656 
	#CAN_F6R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1657 
	#CAN_F6R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1658 
	#CAN_F6R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1659 
	#CAN_F6R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1660 
	#CAN_F6R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1661 
	#CAN_F6R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1662 
	#CAN_F6R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1663 
	#CAN_F6R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1664 
	#CAN_F6R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1665 
	#CAN_F6R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1666 
	#CAN_F6R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1667 
	#CAN_F6R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1668 
	#CAN_F6R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1669 
	#CAN_F6R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1670 
	#CAN_F6R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1671 
	#CAN_F6R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1672 
	#CAN_F6R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1673 
	#CAN_F6R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1674 
	#CAN_F6R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1675 
	#CAN_F6R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1676 
	#CAN_F6R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1677 
	#CAN_F6R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1678 
	#CAN_F6R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1681 
	#CAN_F7R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1682 
	#CAN_F7R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1683 
	#CAN_F7R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1684 
	#CAN_F7R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1685 
	#CAN_F7R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1686 
	#CAN_F7R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1687 
	#CAN_F7R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1688 
	#CAN_F7R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1689 
	#CAN_F7R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1690 
	#CAN_F7R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1691 
	#CAN_F7R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1692 
	#CAN_F7R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1693 
	#CAN_F7R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1694 
	#CAN_F7R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1695 
	#CAN_F7R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1696 
	#CAN_F7R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1697 
	#CAN_F7R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1698 
	#CAN_F7R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1699 
	#CAN_F7R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1700 
	#CAN_F7R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1701 
	#CAN_F7R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1702 
	#CAN_F7R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1703 
	#CAN_F7R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1704 
	#CAN_F7R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1705 
	#CAN_F7R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1706 
	#CAN_F7R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1707 
	#CAN_F7R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1708 
	#CAN_F7R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1709 
	#CAN_F7R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1710 
	#CAN_F7R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1711 
	#CAN_F7R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1712 
	#CAN_F7R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1715 
	#CAN_F8R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1716 
	#CAN_F8R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1717 
	#CAN_F8R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1718 
	#CAN_F8R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1719 
	#CAN_F8R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1720 
	#CAN_F8R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1721 
	#CAN_F8R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1722 
	#CAN_F8R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1723 
	#CAN_F8R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1724 
	#CAN_F8R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1725 
	#CAN_F8R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1726 
	#CAN_F8R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1727 
	#CAN_F8R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1728 
	#CAN_F8R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1729 
	#CAN_F8R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1730 
	#CAN_F8R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1731 
	#CAN_F8R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1732 
	#CAN_F8R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1733 
	#CAN_F8R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1734 
	#CAN_F8R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1735 
	#CAN_F8R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1736 
	#CAN_F8R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1737 
	#CAN_F8R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1738 
	#CAN_F8R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1739 
	#CAN_F8R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1740 
	#CAN_F8R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1741 
	#CAN_F8R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1742 
	#CAN_F8R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1743 
	#CAN_F8R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1744 
	#CAN_F8R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1745 
	#CAN_F8R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1746 
	#CAN_F8R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1749 
	#CAN_F9R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1750 
	#CAN_F9R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1751 
	#CAN_F9R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1752 
	#CAN_F9R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1753 
	#CAN_F9R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1754 
	#CAN_F9R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1755 
	#CAN_F9R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1756 
	#CAN_F9R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1757 
	#CAN_F9R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1758 
	#CAN_F9R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1759 
	#CAN_F9R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1760 
	#CAN_F9R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1761 
	#CAN_F9R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1762 
	#CAN_F9R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1763 
	#CAN_F9R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1764 
	#CAN_F9R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1765 
	#CAN_F9R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1766 
	#CAN_F9R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1767 
	#CAN_F9R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1768 
	#CAN_F9R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1769 
	#CAN_F9R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1770 
	#CAN_F9R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1771 
	#CAN_F9R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1772 
	#CAN_F9R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1773 
	#CAN_F9R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1774 
	#CAN_F9R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1775 
	#CAN_F9R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1776 
	#CAN_F9R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1777 
	#CAN_F9R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1778 
	#CAN_F9R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1779 
	#CAN_F9R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1780 
	#CAN_F9R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1783 
	#CAN_F10R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1784 
	#CAN_F10R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1785 
	#CAN_F10R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1786 
	#CAN_F10R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1787 
	#CAN_F10R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1788 
	#CAN_F10R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1789 
	#CAN_F10R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1790 
	#CAN_F10R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1791 
	#CAN_F10R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1792 
	#CAN_F10R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1793 
	#CAN_F10R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1794 
	#CAN_F10R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1795 
	#CAN_F10R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1796 
	#CAN_F10R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1797 
	#CAN_F10R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1798 
	#CAN_F10R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1799 
	#CAN_F10R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1800 
	#CAN_F10R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1801 
	#CAN_F10R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1802 
	#CAN_F10R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1803 
	#CAN_F10R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1804 
	#CAN_F10R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1805 
	#CAN_F10R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1806 
	#CAN_F10R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1807 
	#CAN_F10R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1808 
	#CAN_F10R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1809 
	#CAN_F10R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1810 
	#CAN_F10R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1811 
	#CAN_F10R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1812 
	#CAN_F10R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1813 
	#CAN_F10R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1814 
	#CAN_F10R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1817 
	#CAN_F11R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1818 
	#CAN_F11R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1819 
	#CAN_F11R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1820 
	#CAN_F11R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1821 
	#CAN_F11R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1822 
	#CAN_F11R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1823 
	#CAN_F11R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1824 
	#CAN_F11R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1825 
	#CAN_F11R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1826 
	#CAN_F11R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1827 
	#CAN_F11R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1828 
	#CAN_F11R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1829 
	#CAN_F11R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1830 
	#CAN_F11R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1831 
	#CAN_F11R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1832 
	#CAN_F11R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1833 
	#CAN_F11R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1834 
	#CAN_F11R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1835 
	#CAN_F11R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1836 
	#CAN_F11R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1837 
	#CAN_F11R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1838 
	#CAN_F11R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1839 
	#CAN_F11R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1840 
	#CAN_F11R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1841 
	#CAN_F11R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1842 
	#CAN_F11R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1843 
	#CAN_F11R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1844 
	#CAN_F11R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1845 
	#CAN_F11R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1846 
	#CAN_F11R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1847 
	#CAN_F11R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1848 
	#CAN_F11R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1851 
	#CAN_F12R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1852 
	#CAN_F12R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1853 
	#CAN_F12R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1854 
	#CAN_F12R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1855 
	#CAN_F12R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1856 
	#CAN_F12R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1857 
	#CAN_F12R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1858 
	#CAN_F12R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1859 
	#CAN_F12R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1860 
	#CAN_F12R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1861 
	#CAN_F12R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1862 
	#CAN_F12R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1863 
	#CAN_F12R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1864 
	#CAN_F12R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1865 
	#CAN_F12R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1866 
	#CAN_F12R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1867 
	#CAN_F12R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1868 
	#CAN_F12R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1869 
	#CAN_F12R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1870 
	#CAN_F12R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1871 
	#CAN_F12R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1872 
	#CAN_F12R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1873 
	#CAN_F12R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1874 
	#CAN_F12R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1875 
	#CAN_F12R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1876 
	#CAN_F12R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1877 
	#CAN_F12R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1878 
	#CAN_F12R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1879 
	#CAN_F12R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1880 
	#CAN_F12R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1881 
	#CAN_F12R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1882 
	#CAN_F12R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1885 
	#CAN_F13R1_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1886 
	#CAN_F13R1_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1887 
	#CAN_F13R1_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1888 
	#CAN_F13R1_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1889 
	#CAN_F13R1_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1890 
	#CAN_F13R1_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1891 
	#CAN_F13R1_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1892 
	#CAN_F13R1_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1893 
	#CAN_F13R1_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1894 
	#CAN_F13R1_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1895 
	#CAN_F13R1_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1896 
	#CAN_F13R1_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1897 
	#CAN_F13R1_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1898 
	#CAN_F13R1_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1899 
	#CAN_F13R1_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1900 
	#CAN_F13R1_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1901 
	#CAN_F13R1_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1902 
	#CAN_F13R1_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1903 
	#CAN_F13R1_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1904 
	#CAN_F13R1_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1905 
	#CAN_F13R1_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1906 
	#CAN_F13R1_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1907 
	#CAN_F13R1_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1908 
	#CAN_F13R1_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1909 
	#CAN_F13R1_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1910 
	#CAN_F13R1_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1911 
	#CAN_F13R1_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1912 
	#CAN_F13R1_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1913 
	#CAN_F13R1_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1914 
	#CAN_F13R1_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1915 
	#CAN_F13R1_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1916 
	#CAN_F13R1_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1919 
	#CAN_F0R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1920 
	#CAN_F0R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1921 
	#CAN_F0R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1922 
	#CAN_F0R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1923 
	#CAN_F0R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1924 
	#CAN_F0R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1925 
	#CAN_F0R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1926 
	#CAN_F0R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1927 
	#CAN_F0R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1928 
	#CAN_F0R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1929 
	#CAN_F0R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1930 
	#CAN_F0R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1931 
	#CAN_F0R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1932 
	#CAN_F0R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1933 
	#CAN_F0R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1934 
	#CAN_F0R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1935 
	#CAN_F0R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1936 
	#CAN_F0R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1937 
	#CAN_F0R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1938 
	#CAN_F0R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1939 
	#CAN_F0R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1940 
	#CAN_F0R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1941 
	#CAN_F0R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1942 
	#CAN_F0R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1943 
	#CAN_F0R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1944 
	#CAN_F0R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1945 
	#CAN_F0R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1946 
	#CAN_F0R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1947 
	#CAN_F0R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1948 
	#CAN_F0R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1949 
	#CAN_F0R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1950 
	#CAN_F0R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1953 
	#CAN_F1R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1954 
	#CAN_F1R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1955 
	#CAN_F1R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1956 
	#CAN_F1R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1957 
	#CAN_F1R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1958 
	#CAN_F1R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1959 
	#CAN_F1R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1960 
	#CAN_F1R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1961 
	#CAN_F1R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1962 
	#CAN_F1R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1963 
	#CAN_F1R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1964 
	#CAN_F1R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1965 
	#CAN_F1R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

1966 
	#CAN_F1R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

1967 
	#CAN_F1R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

1968 
	#CAN_F1R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

1969 
	#CAN_F1R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

1970 
	#CAN_F1R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

1971 
	#CAN_F1R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

1972 
	#CAN_F1R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

1973 
	#CAN_F1R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

1974 
	#CAN_F1R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

1975 
	#CAN_F1R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

1976 
	#CAN_F1R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

1977 
	#CAN_F1R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

1978 
	#CAN_F1R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

1979 
	#CAN_F1R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

1980 
	#CAN_F1R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

1981 
	#CAN_F1R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

1982 
	#CAN_F1R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

1983 
	#CAN_F1R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

1984 
	#CAN_F1R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

1987 
	#CAN_F2R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

1988 
	#CAN_F2R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

1989 
	#CAN_F2R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

1990 
	#CAN_F2R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

1991 
	#CAN_F2R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

1992 
	#CAN_F2R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

1993 
	#CAN_F2R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

1994 
	#CAN_F2R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

1995 
	#CAN_F2R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

1996 
	#CAN_F2R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

1997 
	#CAN_F2R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

1998 
	#CAN_F2R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

1999 
	#CAN_F2R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2000 
	#CAN_F2R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2001 
	#CAN_F2R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2002 
	#CAN_F2R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2003 
	#CAN_F2R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2004 
	#CAN_F2R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2005 
	#CAN_F2R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2006 
	#CAN_F2R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2007 
	#CAN_F2R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2008 
	#CAN_F2R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2009 
	#CAN_F2R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2010 
	#CAN_F2R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2011 
	#CAN_F2R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2012 
	#CAN_F2R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2013 
	#CAN_F2R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2014 
	#CAN_F2R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2015 
	#CAN_F2R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2016 
	#CAN_F2R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2017 
	#CAN_F2R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2018 
	#CAN_F2R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2021 
	#CAN_F3R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2022 
	#CAN_F3R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2023 
	#CAN_F3R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2024 
	#CAN_F3R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2025 
	#CAN_F3R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2026 
	#CAN_F3R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2027 
	#CAN_F3R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2028 
	#CAN_F3R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2029 
	#CAN_F3R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2030 
	#CAN_F3R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2031 
	#CAN_F3R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2032 
	#CAN_F3R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2033 
	#CAN_F3R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2034 
	#CAN_F3R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2035 
	#CAN_F3R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2036 
	#CAN_F3R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2037 
	#CAN_F3R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2038 
	#CAN_F3R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2039 
	#CAN_F3R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2040 
	#CAN_F3R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2041 
	#CAN_F3R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2042 
	#CAN_F3R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2043 
	#CAN_F3R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2044 
	#CAN_F3R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2045 
	#CAN_F3R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2046 
	#CAN_F3R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2047 
	#CAN_F3R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2048 
	#CAN_F3R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2049 
	#CAN_F3R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2050 
	#CAN_F3R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2051 
	#CAN_F3R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2052 
	#CAN_F3R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2055 
	#CAN_F4R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2056 
	#CAN_F4R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2057 
	#CAN_F4R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2058 
	#CAN_F4R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2059 
	#CAN_F4R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2060 
	#CAN_F4R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2061 
	#CAN_F4R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2062 
	#CAN_F4R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2063 
	#CAN_F4R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2064 
	#CAN_F4R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2065 
	#CAN_F4R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2066 
	#CAN_F4R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2067 
	#CAN_F4R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2068 
	#CAN_F4R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2069 
	#CAN_F4R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2070 
	#CAN_F4R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2071 
	#CAN_F4R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2072 
	#CAN_F4R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2073 
	#CAN_F4R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2074 
	#CAN_F4R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2075 
	#CAN_F4R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2076 
	#CAN_F4R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2077 
	#CAN_F4R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2078 
	#CAN_F4R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2079 
	#CAN_F4R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2080 
	#CAN_F4R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2081 
	#CAN_F4R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2082 
	#CAN_F4R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2083 
	#CAN_F4R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2084 
	#CAN_F4R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2085 
	#CAN_F4R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2086 
	#CAN_F4R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2089 
	#CAN_F5R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2090 
	#CAN_F5R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2091 
	#CAN_F5R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2092 
	#CAN_F5R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2093 
	#CAN_F5R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2094 
	#CAN_F5R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2095 
	#CAN_F5R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2096 
	#CAN_F5R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2097 
	#CAN_F5R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2098 
	#CAN_F5R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2099 
	#CAN_F5R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2100 
	#CAN_F5R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2101 
	#CAN_F5R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2102 
	#CAN_F5R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2103 
	#CAN_F5R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2104 
	#CAN_F5R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2105 
	#CAN_F5R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2106 
	#CAN_F5R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2107 
	#CAN_F5R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2108 
	#CAN_F5R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2109 
	#CAN_F5R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2110 
	#CAN_F5R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2111 
	#CAN_F5R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2112 
	#CAN_F5R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2113 
	#CAN_F5R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2114 
	#CAN_F5R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2115 
	#CAN_F5R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2116 
	#CAN_F5R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2117 
	#CAN_F5R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2118 
	#CAN_F5R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2119 
	#CAN_F5R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2120 
	#CAN_F5R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2123 
	#CAN_F6R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2124 
	#CAN_F6R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2125 
	#CAN_F6R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2126 
	#CAN_F6R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2127 
	#CAN_F6R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2128 
	#CAN_F6R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2129 
	#CAN_F6R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2130 
	#CAN_F6R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2131 
	#CAN_F6R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2132 
	#CAN_F6R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2133 
	#CAN_F6R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2134 
	#CAN_F6R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2135 
	#CAN_F6R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2136 
	#CAN_F6R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2137 
	#CAN_F6R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2138 
	#CAN_F6R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2139 
	#CAN_F6R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2140 
	#CAN_F6R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2141 
	#CAN_F6R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2142 
	#CAN_F6R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2143 
	#CAN_F6R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2144 
	#CAN_F6R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2145 
	#CAN_F6R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2146 
	#CAN_F6R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2147 
	#CAN_F6R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2148 
	#CAN_F6R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2149 
	#CAN_F6R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2150 
	#CAN_F6R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2151 
	#CAN_F6R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2152 
	#CAN_F6R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2153 
	#CAN_F6R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2154 
	#CAN_F6R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2157 
	#CAN_F7R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2158 
	#CAN_F7R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2159 
	#CAN_F7R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2160 
	#CAN_F7R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2161 
	#CAN_F7R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2162 
	#CAN_F7R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2163 
	#CAN_F7R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2164 
	#CAN_F7R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2165 
	#CAN_F7R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2166 
	#CAN_F7R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2167 
	#CAN_F7R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2168 
	#CAN_F7R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2169 
	#CAN_F7R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2170 
	#CAN_F7R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2171 
	#CAN_F7R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2172 
	#CAN_F7R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2173 
	#CAN_F7R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2174 
	#CAN_F7R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2175 
	#CAN_F7R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2176 
	#CAN_F7R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2177 
	#CAN_F7R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2178 
	#CAN_F7R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2179 
	#CAN_F7R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2180 
	#CAN_F7R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2181 
	#CAN_F7R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2182 
	#CAN_F7R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2183 
	#CAN_F7R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2184 
	#CAN_F7R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2185 
	#CAN_F7R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2186 
	#CAN_F7R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2187 
	#CAN_F7R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2188 
	#CAN_F7R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2191 
	#CAN_F8R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2192 
	#CAN_F8R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2193 
	#CAN_F8R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2194 
	#CAN_F8R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2195 
	#CAN_F8R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2196 
	#CAN_F8R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2197 
	#CAN_F8R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2198 
	#CAN_F8R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2199 
	#CAN_F8R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2200 
	#CAN_F8R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2201 
	#CAN_F8R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2202 
	#CAN_F8R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2203 
	#CAN_F8R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2204 
	#CAN_F8R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2205 
	#CAN_F8R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2206 
	#CAN_F8R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2207 
	#CAN_F8R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2208 
	#CAN_F8R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2209 
	#CAN_F8R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2210 
	#CAN_F8R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2211 
	#CAN_F8R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2212 
	#CAN_F8R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2213 
	#CAN_F8R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2214 
	#CAN_F8R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2215 
	#CAN_F8R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2216 
	#CAN_F8R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2217 
	#CAN_F8R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2218 
	#CAN_F8R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2219 
	#CAN_F8R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2220 
	#CAN_F8R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2221 
	#CAN_F8R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2222 
	#CAN_F8R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2225 
	#CAN_F9R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2226 
	#CAN_F9R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2227 
	#CAN_F9R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2228 
	#CAN_F9R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2229 
	#CAN_F9R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2230 
	#CAN_F9R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2231 
	#CAN_F9R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2232 
	#CAN_F9R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2233 
	#CAN_F9R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2234 
	#CAN_F9R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2235 
	#CAN_F9R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2236 
	#CAN_F9R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2237 
	#CAN_F9R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2238 
	#CAN_F9R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2239 
	#CAN_F9R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2240 
	#CAN_F9R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2241 
	#CAN_F9R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2242 
	#CAN_F9R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2243 
	#CAN_F9R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2244 
	#CAN_F9R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2245 
	#CAN_F9R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2246 
	#CAN_F9R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2247 
	#CAN_F9R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2248 
	#CAN_F9R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2249 
	#CAN_F9R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2250 
	#CAN_F9R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2251 
	#CAN_F9R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2252 
	#CAN_F9R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2253 
	#CAN_F9R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2254 
	#CAN_F9R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2255 
	#CAN_F9R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2256 
	#CAN_F9R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2259 
	#CAN_F10R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2260 
	#CAN_F10R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2261 
	#CAN_F10R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2262 
	#CAN_F10R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2263 
	#CAN_F10R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2264 
	#CAN_F10R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2265 
	#CAN_F10R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2266 
	#CAN_F10R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2267 
	#CAN_F10R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2268 
	#CAN_F10R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2269 
	#CAN_F10R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2270 
	#CAN_F10R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2271 
	#CAN_F10R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2272 
	#CAN_F10R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2273 
	#CAN_F10R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2274 
	#CAN_F10R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2275 
	#CAN_F10R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2276 
	#CAN_F10R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2277 
	#CAN_F10R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2278 
	#CAN_F10R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2279 
	#CAN_F10R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2280 
	#CAN_F10R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2281 
	#CAN_F10R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2282 
	#CAN_F10R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2283 
	#CAN_F10R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2284 
	#CAN_F10R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2285 
	#CAN_F10R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2286 
	#CAN_F10R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2287 
	#CAN_F10R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2288 
	#CAN_F10R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2289 
	#CAN_F10R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2290 
	#CAN_F10R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2293 
	#CAN_F11R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2294 
	#CAN_F11R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2295 
	#CAN_F11R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2296 
	#CAN_F11R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2297 
	#CAN_F11R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2298 
	#CAN_F11R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2299 
	#CAN_F11R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2300 
	#CAN_F11R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2301 
	#CAN_F11R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2302 
	#CAN_F11R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2303 
	#CAN_F11R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2304 
	#CAN_F11R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2305 
	#CAN_F11R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2306 
	#CAN_F11R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2307 
	#CAN_F11R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2308 
	#CAN_F11R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2309 
	#CAN_F11R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2310 
	#CAN_F11R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2311 
	#CAN_F11R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2312 
	#CAN_F11R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2313 
	#CAN_F11R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2314 
	#CAN_F11R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2315 
	#CAN_F11R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2316 
	#CAN_F11R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2317 
	#CAN_F11R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2318 
	#CAN_F11R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2319 
	#CAN_F11R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2320 
	#CAN_F11R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2321 
	#CAN_F11R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2322 
	#CAN_F11R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2323 
	#CAN_F11R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2324 
	#CAN_F11R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2327 
	#CAN_F12R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2328 
	#CAN_F12R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2329 
	#CAN_F12R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2330 
	#CAN_F12R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2331 
	#CAN_F12R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2332 
	#CAN_F12R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2333 
	#CAN_F12R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2334 
	#CAN_F12R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2335 
	#CAN_F12R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2336 
	#CAN_F12R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2337 
	#CAN_F12R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2338 
	#CAN_F12R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2339 
	#CAN_F12R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2340 
	#CAN_F12R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2341 
	#CAN_F12R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2342 
	#CAN_F12R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2343 
	#CAN_F12R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2344 
	#CAN_F12R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2345 
	#CAN_F12R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2346 
	#CAN_F12R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2347 
	#CAN_F12R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2348 
	#CAN_F12R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2349 
	#CAN_F12R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2350 
	#CAN_F12R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2351 
	#CAN_F12R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2352 
	#CAN_F12R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2353 
	#CAN_F12R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2354 
	#CAN_F12R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2355 
	#CAN_F12R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2356 
	#CAN_F12R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2357 
	#CAN_F12R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2358 
	#CAN_F12R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2361 
	#CAN_F13R2_FB0
 ((
uöt32_t
)0x00000001Ë

	)

2362 
	#CAN_F13R2_FB1
 ((
uöt32_t
)0x00000002Ë

	)

2363 
	#CAN_F13R2_FB2
 ((
uöt32_t
)0x00000004Ë

	)

2364 
	#CAN_F13R2_FB3
 ((
uöt32_t
)0x00000008Ë

	)

2365 
	#CAN_F13R2_FB4
 ((
uöt32_t
)0x00000010Ë

	)

2366 
	#CAN_F13R2_FB5
 ((
uöt32_t
)0x00000020Ë

	)

2367 
	#CAN_F13R2_FB6
 ((
uöt32_t
)0x00000040Ë

	)

2368 
	#CAN_F13R2_FB7
 ((
uöt32_t
)0x00000080Ë

	)

2369 
	#CAN_F13R2_FB8
 ((
uöt32_t
)0x00000100Ë

	)

2370 
	#CAN_F13R2_FB9
 ((
uöt32_t
)0x00000200Ë

	)

2371 
	#CAN_F13R2_FB10
 ((
uöt32_t
)0x00000400Ë

	)

2372 
	#CAN_F13R2_FB11
 ((
uöt32_t
)0x00000800Ë

	)

2373 
	#CAN_F13R2_FB12
 ((
uöt32_t
)0x00001000Ë

	)

2374 
	#CAN_F13R2_FB13
 ((
uöt32_t
)0x00002000Ë

	)

2375 
	#CAN_F13R2_FB14
 ((
uöt32_t
)0x00004000Ë

	)

2376 
	#CAN_F13R2_FB15
 ((
uöt32_t
)0x00008000Ë

	)

2377 
	#CAN_F13R2_FB16
 ((
uöt32_t
)0x00010000Ë

	)

2378 
	#CAN_F13R2_FB17
 ((
uöt32_t
)0x00020000Ë

	)

2379 
	#CAN_F13R2_FB18
 ((
uöt32_t
)0x00040000Ë

	)

2380 
	#CAN_F13R2_FB19
 ((
uöt32_t
)0x00080000Ë

	)

2381 
	#CAN_F13R2_FB20
 ((
uöt32_t
)0x00100000Ë

	)

2382 
	#CAN_F13R2_FB21
 ((
uöt32_t
)0x00200000Ë

	)

2383 
	#CAN_F13R2_FB22
 ((
uöt32_t
)0x00400000Ë

	)

2384 
	#CAN_F13R2_FB23
 ((
uöt32_t
)0x00800000Ë

	)

2385 
	#CAN_F13R2_FB24
 ((
uöt32_t
)0x01000000Ë

	)

2386 
	#CAN_F13R2_FB25
 ((
uöt32_t
)0x02000000Ë

	)

2387 
	#CAN_F13R2_FB26
 ((
uöt32_t
)0x04000000Ë

	)

2388 
	#CAN_F13R2_FB27
 ((
uöt32_t
)0x08000000Ë

	)

2389 
	#CAN_F13R2_FB28
 ((
uöt32_t
)0x10000000Ë

	)

2390 
	#CAN_F13R2_FB29
 ((
uöt32_t
)0x20000000Ë

	)

2391 
	#CAN_F13R2_FB30
 ((
uöt32_t
)0x40000000Ë

	)

2392 
	#CAN_F13R2_FB31
 ((
uöt32_t
)0x80000000Ë

	)

2402 
	#CEC_CR_CECEN
 ((
uöt32_t
)0x00000001Ë

	)

2403 
	#CEC_CR_TXSOM
 ((
uöt32_t
)0x00000002Ë

	)

2404 
	#CEC_CR_TXEOM
 ((
uöt32_t
)0x00000004Ë

	)

2407 
	#CEC_CFGR_SFT
 ((
uöt32_t
)0x00000007Ë

	)

2408 
	#CEC_CFGR_RXTOL
 ((
uöt32_t
)0x00000008Ë

	)

2409 
	#CEC_CFGR_BRESTP
 ((
uöt32_t
)0x00000010Ë

	)

2410 
	#CEC_CFGR_BREGEN
 ((
uöt32_t
)0x00000020Ë

	)

2411 
	#CEC_CFGR_LREGEN
 ((
uöt32_t
)0x00000040Ë

	)

2412 
	#CEC_CFGR_BRDNOGEN
 ((
uöt32_t
)0x00000080Ë

	)

2413 
	#CEC_CFGR_SFTOPT
 ((
uöt32_t
)0x00000100Ë

	)

2414 
	#CEC_CFGR_OAR
 ((
uöt32_t
)0x7FFF0000Ë

	)

2415 
	#CEC_CFGR_LSTN
 ((
uöt32_t
)0x80000000Ë

	)

2418 
	#CEC_TXDR_TXD
 ((
uöt32_t
)0x000000FFË

	)

2421 
	#CEC_TXDR_RXD
 ((
uöt32_t
)0x000000FFË

	)

2424 
	#CEC_ISR_RXBR
 ((
uöt32_t
)0x00000001Ë

	)

2425 
	#CEC_ISR_RXEND
 ((
uöt32_t
)0x00000002Ë

	)

2426 
	#CEC_ISR_RXOVR
 ((
uöt32_t
)0x00000004Ë

	)

2427 
	#CEC_ISR_BRE
 ((
uöt32_t
)0x00000008Ë

	)

2428 
	#CEC_ISR_SBPE
 ((
uöt32_t
)0x00000010Ë

	)

2429 
	#CEC_ISR_LBPE
 ((
uöt32_t
)0x00000020Ë

	)

2430 
	#CEC_ISR_RXACKE
 ((
uöt32_t
)0x00000040Ë

	)

2431 
	#CEC_ISR_ARBLST
 ((
uöt32_t
)0x00000080Ë

	)

2432 
	#CEC_ISR_TXBR
 ((
uöt32_t
)0x00000100Ë

	)

2433 
	#CEC_ISR_TXEND
 ((
uöt32_t
)0x00000200Ë

	)

2434 
	#CEC_ISR_TXUDR
 ((
uöt32_t
)0x00000400Ë

	)

2435 
	#CEC_ISR_TXERR
 ((
uöt32_t
)0x00000800Ë

	)

2436 
	#CEC_ISR_TXACKE
 ((
uöt32_t
)0x00001000Ë

	)

2439 
	#CEC_IER_RXBRIE
 ((
uöt32_t
)0x00000001Ë

	)

2440 
	#CEC_IER_RXENDIE
 ((
uöt32_t
)0x00000002Ë

	)

2441 
	#CEC_IER_RXOVRIE
 ((
uöt32_t
)0x00000004Ë

	)

2442 
	#CEC_IER_BREIEIE
 ((
uöt32_t
)0x00000008Ë

	)

2443 
	#CEC_IER_SBPEIE
 ((
uöt32_t
)0x00000010Ë

	)

2444 
	#CEC_IER_LBPEIE
 ((
uöt32_t
)0x00000020Ë

	)

2445 
	#CEC_IER_RXACKEIE
 ((
uöt32_t
)0x00000040Ë

	)

2446 
	#CEC_IER_ARBLSTIE
 ((
uöt32_t
)0x00000080Ë

	)

2447 
	#CEC_IER_TXBRIE
 ((
uöt32_t
)0x00000100Ë

	)

2448 
	#CEC_IER_TXENDIE
 ((
uöt32_t
)0x00000200Ë

	)

2449 
	#CEC_IER_TXUDRIE
 ((
uöt32_t
)0x00000400Ë

	)

2450 
	#CEC_IER_TXERRIE
 ((
uöt32_t
)0x00000800Ë

	)

2451 
	#CEC_IER_TXACKEIE
 ((
uöt32_t
)0x00001000Ë

	)

2460 
	#COMP_CSR_COMP1EN
 ((
uöt32_t
)0x00000001Ë

	)

2461 
	#COMP_CSR_COMP1SW1
 ((
uöt32_t
)0x00000002Ë

	)

2462 
	#COMP_CSR_COMP1MODE
 ((
uöt32_t
)0x0000000CË

	)

2463 
	#COMP_CSR_COMP1MODE_0
 ((
uöt32_t
)0x00000004Ë

	)

2464 
	#COMP_CSR_COMP1MODE_1
 ((
uöt32_t
)0x00000008Ë

	)

2465 
	#COMP_CSR_COMP1INSEL
 ((
uöt32_t
)0x00000070Ë

	)

2466 
	#COMP_CSR_COMP1INSEL_0
 ((
uöt32_t
)0x00000010Ë

	)

2467 
	#COMP_CSR_COMP1INSEL_1
 ((
uöt32_t
)0x00000020Ë

	)

2468 
	#COMP_CSR_COMP1INSEL_2
 ((
uöt32_t
)0x00000040Ë

	)

2469 
	#COMP_CSR_COMP1OUTSEL
 ((
uöt32_t
)0x00000700Ë

	)

2470 
	#COMP_CSR_COMP1OUTSEL_0
 ((
uöt32_t
)0x00000100Ë

	)

2471 
	#COMP_CSR_COMP1OUTSEL_1
 ((
uöt32_t
)0x00000200Ë

	)

2472 
	#COMP_CSR_COMP1OUTSEL_2
 ((
uöt32_t
)0x00000400Ë

	)

2473 
	#COMP_CSR_COMP1POL
 ((
uöt32_t
)0x00000800Ë

	)

2474 
	#COMP_CSR_COMP1HYST
 ((
uöt32_t
)0x00003000Ë

	)

2475 
	#COMP_CSR_COMP1HYST_0
 ((
uöt32_t
)0x00001000Ë

	)

2476 
	#COMP_CSR_COMP1HYST_1
 ((
uöt32_t
)0x00002000Ë

	)

2477 
	#COMP_CSR_COMP1OUT
 ((
uöt32_t
)0x00004000Ë

	)

2478 
	#COMP_CSR_COMP1LOCK
 ((
uöt32_t
)0x00008000Ë

	)

2480 
	#COMP_CSR_COMP2EN
 ((
uöt32_t
)0x00010000Ë

	)

2481 
	#COMP_CSR_COMP2MODE
 ((
uöt32_t
)0x000C0000Ë

	)

2482 
	#COMP_CSR_COMP2MODE_0
 ((
uöt32_t
)0x00040000Ë

	)

2483 
	#COMP_CSR_COMP2MODE_1
 ((
uöt32_t
)0x00080000Ë

	)

2484 
	#COMP_CSR_COMP2INSEL
 ((
uöt32_t
)0x00700000Ë

	)

2485 
	#COMP_CSR_COMP2INSEL_0
 ((
uöt32_t
)0x00100000Ë

	)

2486 
	#COMP_CSR_COMP2INSEL_1
 ((
uöt32_t
)0x00200000Ë

	)

2487 
	#COMP_CSR_COMP2INSEL_2
 ((
uöt32_t
)0x00400000Ë

	)

2488 
	#COMP_CSR_WNDWEN
 ((
uöt32_t
)0x00800000Ë

	)

2489 
	#COMP_CSR_COMP2OUTSEL
 ((
uöt32_t
)0x07000000Ë

	)

2490 
	#COMP_CSR_COMP2OUTSEL_0
 ((
uöt32_t
)0x01000000Ë

	)

2491 
	#COMP_CSR_COMP2OUTSEL_1
 ((
uöt32_t
)0x02000000Ë

	)

2492 
	#COMP_CSR_COMP2OUTSEL_2
 ((
uöt32_t
)0x04000000Ë

	)

2493 
	#COMP_CSR_COMP2POL
 ((
uöt32_t
)0x08000000Ë

	)

2494 
	#COMP_CSR_COMP2HYST
 ((
uöt32_t
)0x30000000Ë

	)

2495 
	#COMP_CSR_COMP2HYST_0
 ((
uöt32_t
)0x10000000Ë

	)

2496 
	#COMP_CSR_COMP2HYST_1
 ((
uöt32_t
)0x20000000Ë

	)

2497 
	#COMP_CSR_COMP2OUT
 ((
uöt32_t
)0x40000000Ë

	)

2498 
	#COMP_CSR_COMP2LOCK
 ((
uöt32_t
)0x80000000Ë

	)

2506 
	#CRC_DR_DR
 ((
uöt32_t
)0xFFFFFFFFË

	)

2509 
	#CRC_IDR_IDR
 ((
uöt8_t
)0xFFË

	)

2512 
	#CRC_CR_RESET
 ((
uöt32_t
)0x00000001Ë

	)

2513 
	#CRC_CR_POLSIZE
 ((
uöt32_t
)0x00000018Ë

	)

2514 
	#CRC_CR_POLSIZE_0
 ((
uöt32_t
)0x00000008Ë

	)

2515 
	#CRC_CR_POLSIZE_1
 ((
uöt32_t
)0x00000010Ë

	)

2516 
	#CRC_CR_REV_IN
 ((
uöt32_t
)0x00000060Ë

	)

2517 
	#CRC_CR_REV_IN_0
 ((
uöt32_t
)0x00000020Ë

	)

2518 
	#CRC_CR_REV_IN_1
 ((
uöt32_t
)0x00000040Ë

	)

2519 
	#CRC_CR_REV_OUT
 ((
uöt32_t
)0x00000080Ë

	)

2522 
	#CRC_INIT_INIT
 ((
uöt32_t
)0xFFFFFFFFË

	)

2525 
	#CRC_POL_POL
 ((
uöt32_t
)0xFFFFFFFFË

	)

2534 
	#CRS_CR_SYNCOKIE
 ((
uöt32_t
)0x00000001Ë

	)

2535 
	#CRS_CR_SYNCWARNIE
 ((
uöt32_t
)0x00000002Ë

	)

2536 
	#CRS_CR_ERRIE
 ((
uöt32_t
)0x00000004Ë

	)

2537 
	#CRS_CR_ESYNCIE
 ((
uöt32_t
)0x00000008Ë

	)

2538 
	#CRS_CR_CEN
 ((
uöt32_t
)0x00000020Ë

	)

2539 
	#CRS_CR_AUTOTRIMEN
 ((
uöt32_t
)0x00000040Ë

	)

2540 
	#CRS_CR_SWSYNC
 ((
uöt32_t
)0x00000080Ë

	)

2541 
	#CRS_CR_TRIM
 ((
uöt32_t
)0x00003F00Ë

	)

2544 
	#CRS_CFGR_RELOAD
 ((
uöt32_t
)0x0000FFFFË

	)

2545 
	#CRS_CFGR_FELIM
 ((
uöt32_t
)0x00FF0000Ë

	)

2546 
	#CRS_CFGR_SYNCDIV
 ((
uöt32_t
)0x07000000Ë

	)

2547 
	#CRS_CFGR_SYNCDIV_0
 ((
uöt32_t
)0x01000000Ë

	)

2548 
	#CRS_CFGR_SYNCDIV_1
 ((
uöt32_t
)0x02000000Ë

	)

2549 
	#CRS_CFGR_SYNCDIV_2
 ((
uöt32_t
)0x04000000Ë

	)

2550 
	#CRS_CFGR_SYNCSRC
 ((
uöt32_t
)0x30000000Ë

	)

2551 
	#CRS_CFGR_SYNCSRC_0
 ((
uöt32_t
)0x10000000Ë

	)

2552 
	#CRS_CFGR_SYNCSRC_1
 ((
uöt32_t
)0x20000000Ë

	)

2553 
	#CRS_CFGR_SYNCPOL
 ((
uöt32_t
)0x80000000Ë

	)

2556 
	#CRS_ISR_SYNCOKF
 ((
uöt32_t
)0x00000001Ë

	)

2557 
	#CRS_ISR_SYNCWARNF
 ((
uöt32_t
)0x00000002Ë

	)

2558 
	#CRS_ISR_ERRF
 ((
uöt32_t
)0x00000004Ë

	)

2559 
	#CRS_ISR_ESYNCF
 ((
uöt32_t
)0x00000008Ë

	)

2560 
	#CRS_ISR_SYNCERR
 ((
uöt32_t
)0x00000100Ë

	)

2561 
	#CRS_ISR_SYNCMISS
 ((
uöt32_t
)0x00000200Ë

	)

2562 
	#CRS_ISR_TRIMOVF
 ((
uöt32_t
)0x00000400Ë

	)

2563 
	#CRS_ISR_FEDIR
 ((
uöt32_t
)0x00008000Ë

	)

2564 
	#CRS_ISR_FECAP
 ((
uöt32_t
)0xFFFF0000Ë

	)

2567 
	#CRS_ICR_SYNCOKC
 ((
uöt32_t
)0x00000001Ë

	)

2568 
	#CRS_ICR_SYNCWARNC
 ((
uöt32_t
)0x00000002Ë

	)

2569 
	#CRS_ICR_ERRC
 ((
uöt32_t
)0x00000004Ë

	)

2570 
	#CRS_ICR_ESYNCC
 ((
uöt32_t
)0x00000008Ë

	)

2578 
	#DAC_CR_EN1
 ((
uöt32_t
)0x00000001Ë

	)

2579 
	#DAC_CR_BOFF1
 ((
uöt32_t
)0x00000002Ë

	)

2580 
	#DAC_CR_TEN1
 ((
uöt32_t
)0x00000004Ë

	)

2582 
	#DAC_CR_TSEL1
 ((
uöt32_t
)0x00000038Ë

	)

2583 
	#DAC_CR_TSEL1_0
 ((
uöt32_t
)0x00000008Ë

	)

2584 
	#DAC_CR_TSEL1_1
 ((
uöt32_t
)0x00000010Ë

	)

2585 
	#DAC_CR_TSEL1_2
 ((
uöt32_t
)0x00000020Ë

	)

2587 
	#DAC_CR_WAVE1
 ((
uöt32_t
)0x000000C0Ë

	)

2588 
	#DAC_CR_WAVE1_0
 ((
uöt32_t
)0x00000040Ë

	)

2589 
	#DAC_CR_WAVE1_1
 ((
uöt32_t
)0x00000080Ë

	)

2591 
	#DAC_CR_MAMP1
 ((
uöt32_t
)0x00000F00Ë

	)

2592 
	#DAC_CR_MAMP1_0
 ((
uöt32_t
)0x00000100Ë

	)

2593 
	#DAC_CR_MAMP1_1
 ((
uöt32_t
)0x00000200Ë

	)

2594 
	#DAC_CR_MAMP1_2
 ((
uöt32_t
)0x00000400Ë

	)

2595 
	#DAC_CR_MAMP1_3
 ((
uöt32_t
)0x00000800Ë

	)

2597 
	#DAC_CR_DMAEN1
 ((
uöt32_t
)0x00001000Ë

	)

2598 
	#DAC_CR_DMAUDRIE1
 ((
uöt32_t
)0x00002000Ë

	)

2599 
	#DAC_CR_EN2
 ((
uöt32_t
)0x00010000Ë

	)

2600 
	#DAC_CR_BOFF2
 ((
uöt32_t
)0x00020000Ë

	)

2601 
	#DAC_CR_TEN2
 ((
uöt32_t
)0x00040000Ë

	)

2603 
	#DAC_CR_TSEL2
 ((
uöt32_t
)0x00380000Ë

	)

2604 
	#DAC_CR_TSEL2_0
 ((
uöt32_t
)0x00080000Ë

	)

2605 
	#DAC_CR_TSEL2_1
 ((
uöt32_t
)0x00100000Ë

	)

2606 
	#DAC_CR_TSEL2_2
 ((
uöt32_t
)0x00200000Ë

	)

2608 
	#DAC_CR_WAVE2
 ((
uöt32_t
)0x00C00000Ë

	)

2609 
	#DAC_CR_WAVE2_0
 ((
uöt32_t
)0x00400000Ë

	)

2610 
	#DAC_CR_WAVE2_1
 ((
uöt32_t
)0x00800000Ë

	)

2612 
	#DAC_CR_MAMP2
 ((
uöt32_t
)0x0F000000Ë

	)

2613 
	#DAC_CR_MAMP2_0
 ((
uöt32_t
)0x01000000Ë

	)

2614 
	#DAC_CR_MAMP2_1
 ((
uöt32_t
)0x02000000Ë

	)

2615 
	#DAC_CR_MAMP2_2
 ((
uöt32_t
)0x04000000Ë

	)

2616 
	#DAC_CR_MAMP2_3
 ((
uöt32_t
)0x08000000Ë

	)

2618 
	#DAC_CR_DMAEN2
 ((
uöt32_t
)0x10000000Ë

	)

2619 
	#DAC_CR_DMAUDRIE2
 ((
uöt32_t
)0x20000000Ë

	)

2622 
	#DAC_SWTRIGR_SWTRIG1
 ((
uöt32_t
)0x00000001Ë

	)

2623 
	#DAC_SWTRIGR_SWTRIG2
 ((
uöt32_t
)0x00000002Ë

	)

2626 
	#DAC_DHR12R1_DACC1DHR
 ((
uöt32_t
)0x00000FFFË

	)

2629 
	#DAC_DHR12L1_DACC1DHR
 ((
uöt32_t
)0x0000FFF0Ë

	)

2632 
	#DAC_DHR8R1_DACC1DHR
 ((
uöt32_t
)0x000000FFË

	)

2635 
	#DAC_DOR1_DACC1DOR
 ((
uöt32_t
)0x00000FFFË

	)

2638 
	#DAC_SR_DMAUDR1
 ((
uöt32_t
)0x00002000Ë

	)

2639 
	#DAC_SR_DMAUDR2
 ((
uöt32_t
)0x20000000Ë

	)

2648 
	#DBGMCU_IDCODE_DEV_ID
 ((
uöt32_t
)0x00000FFFË

	)

2650 
	#DBGMCU_IDCODE_REV_ID
 ((
uöt32_t
)0xFFFF0000Ë

	)

2651 
	#DBGMCU_IDCODE_REV_ID_0
 ((
uöt32_t
)0x00010000Ë

	)

2652 
	#DBGMCU_IDCODE_REV_ID_1
 ((
uöt32_t
)0x00020000Ë

	)

2653 
	#DBGMCU_IDCODE_REV_ID_2
 ((
uöt32_t
)0x00040000Ë

	)

2654 
	#DBGMCU_IDCODE_REV_ID_3
 ((
uöt32_t
)0x00080000Ë

	)

2655 
	#DBGMCU_IDCODE_REV_ID_4
 ((
uöt32_t
)0x00100000Ë

	)

2656 
	#DBGMCU_IDCODE_REV_ID_5
 ((
uöt32_t
)0x00200000Ë

	)

2657 
	#DBGMCU_IDCODE_REV_ID_6
 ((
uöt32_t
)0x00400000Ë

	)

2658 
	#DBGMCU_IDCODE_REV_ID_7
 ((
uöt32_t
)0x00800000Ë

	)

2659 
	#DBGMCU_IDCODE_REV_ID_8
 ((
uöt32_t
)0x01000000Ë

	)

2660 
	#DBGMCU_IDCODE_REV_ID_9
 ((
uöt32_t
)0x02000000Ë

	)

2661 
	#DBGMCU_IDCODE_REV_ID_10
 ((
uöt32_t
)0x04000000Ë

	)

2662 
	#DBGMCU_IDCODE_REV_ID_11
 ((
uöt32_t
)0x08000000Ë

	)

2663 
	#DBGMCU_IDCODE_REV_ID_12
 ((
uöt32_t
)0x10000000Ë

	)

2664 
	#DBGMCU_IDCODE_REV_ID_13
 ((
uöt32_t
)0x20000000Ë

	)

2665 
	#DBGMCU_IDCODE_REV_ID_14
 ((
uöt32_t
)0x40000000Ë

	)

2666 
	#DBGMCU_IDCODE_REV_ID_15
 ((
uöt32_t
)0x80000000Ë

	)

2669 
	#DBGMCU_CR_DBG_STOP
 ((
uöt32_t
)0x00000002Ë

	)

2670 
	#DBGMCU_CR_DBG_STANDBY
 ((
uöt32_t
)0x00000004Ë

	)

2673 
	#DBGMCU_APB1_FZ_DBG_TIM2_STOP
 ((
uöt32_t
)0x00000001Ë

	)

2674 
	#DBGMCU_APB1_FZ_DBG_TIM3_STOP
 ((
uöt32_t
)0x00000002Ë

	)

2675 
	#DBGMCU_APB1_FZ_DBG_TIM6_STOP
 ((
uöt32_t
)0x00000010Ë

	)

2676 
	#DBGMCU_APB1_FZ_DBG_TIM7_STOP
 ((
uöt32_t
)0x00000020Ë

	)

2677 
	#DBGMCU_APB1_FZ_DBG_TIM14_STOP
 ((
uöt32_t
)0x00000100Ë

	)

2678 
	#DBGMCU_APB1_FZ_DBG_RTC_STOP
 ((
uöt32_t
)0x00000400Ë

	)

2679 
	#DBGMCU_APB1_FZ_DBG_WWDG_STOP
 ((
uöt32_t
)0x00000800Ë

	)

2680 
	#DBGMCU_APB1_FZ_DBG_IWDG_STOP
 ((
uöt32_t
)0x00001000Ë

	)

2681 
	#DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT
 ((
uöt32_t
)0x00200000Ë

	)

2682 
	#DBGMCU_APB1_FZ_DBG_CAN_STOP
 ((
uöt32_t
)0x02000000Ë

	)

2685 
	#DBGMCU_APB2_FZ_DBG_TIM1_STOP
 ((
uöt32_t
)0x00000800Ë

	)

2686 
	#DBGMCU_APB2_FZ_DBG_TIM15_STOP
 ((
uöt32_t
)0x00010000Ë

	)

2687 
	#DBGMCU_APB2_FZ_DBG_TIM16_STOP
 ((
uöt32_t
)0x00020000Ë

	)

2688 
	#DBGMCU_APB2_FZ_DBG_TIM17_STOP
 ((
uöt32_t
)0x00040000Ë

	)

2697 
	#DMA_ISR_GIF1
 ((
uöt32_t
)0x00000001Ë

	)

2698 
	#DMA_ISR_TCIF1
 ((
uöt32_t
)0x00000002Ë

	)

2699 
	#DMA_ISR_HTIF1
 ((
uöt32_t
)0x00000004Ë

	)

2700 
	#DMA_ISR_TEIF1
 ((
uöt32_t
)0x00000008Ë

	)

2701 
	#DMA_ISR_GIF2
 ((
uöt32_t
)0x00000010Ë

	)

2702 
	#DMA_ISR_TCIF2
 ((
uöt32_t
)0x00000020Ë

	)

2703 
	#DMA_ISR_HTIF2
 ((
uöt32_t
)0x00000040Ë

	)

2704 
	#DMA_ISR_TEIF2
 ((
uöt32_t
)0x00000080Ë

	)

2705 
	#DMA_ISR_GIF3
 ((
uöt32_t
)0x00000100Ë

	)

2706 
	#DMA_ISR_TCIF3
 ((
uöt32_t
)0x00000200Ë

	)

2707 
	#DMA_ISR_HTIF3
 ((
uöt32_t
)0x00000400Ë

	)

2708 
	#DMA_ISR_TEIF3
 ((
uöt32_t
)0x00000800Ë

	)

2709 
	#DMA_ISR_GIF4
 ((
uöt32_t
)0x00001000Ë

	)

2710 
	#DMA_ISR_TCIF4
 ((
uöt32_t
)0x00002000Ë

	)

2711 
	#DMA_ISR_HTIF4
 ((
uöt32_t
)0x00004000Ë

	)

2712 
	#DMA_ISR_TEIF4
 ((
uöt32_t
)0x00008000Ë

	)

2713 
	#DMA_ISR_GIF5
 ((
uöt32_t
)0x00010000Ë

	)

2714 
	#DMA_ISR_TCIF5
 ((
uöt32_t
)0x00020000Ë

	)

2715 
	#DMA_ISR_HTIF5
 ((
uöt32_t
)0x00040000Ë

	)

2716 
	#DMA_ISR_TEIF5
 ((
uöt32_t
)0x00080000Ë

	)

2717 
	#DMA_ISR_GIF6
 ((
uöt32_t
)0x00100000Ë

	)

2718 
	#DMA_ISR_TCIF6
 ((
uöt32_t
)0x00200000Ë

	)

2719 
	#DMA_ISR_HTIF6
 ((
uöt32_t
)0x00400000Ë

	)

2720 
	#DMA_ISR_TEIF6
 ((
uöt32_t
)0x00800000Ë

	)

2721 
	#DMA_ISR_GIF7
 ((
uöt32_t
)0x01000000Ë

	)

2722 
	#DMA_ISR_TCIF7
 ((
uöt32_t
)0x02000000Ë

	)

2723 
	#DMA_ISR_HTIF7
 ((
uöt32_t
)0x04000000Ë

	)

2724 
	#DMA_ISR_TEIF7
 ((
uöt32_t
)0x08000000Ë

	)

2727 
	#DMA_IFCR_CGIF1
 ((
uöt32_t
)0x00000001Ë

	)

2728 
	#DMA_IFCR_CTCIF1
 ((
uöt32_t
)0x00000002Ë

	)

2729 
	#DMA_IFCR_CHTIF1
 ((
uöt32_t
)0x00000004Ë

	)

2730 
	#DMA_IFCR_CTEIF1
 ((
uöt32_t
)0x00000008Ë

	)

2731 
	#DMA_IFCR_CGIF2
 ((
uöt32_t
)0x00000010Ë

	)

2732 
	#DMA_IFCR_CTCIF2
 ((
uöt32_t
)0x00000020Ë

	)

2733 
	#DMA_IFCR_CHTIF2
 ((
uöt32_t
)0x00000040Ë

	)

2734 
	#DMA_IFCR_CTEIF2
 ((
uöt32_t
)0x00000080Ë

	)

2735 
	#DMA_IFCR_CGIF3
 ((
uöt32_t
)0x00000100Ë

	)

2736 
	#DMA_IFCR_CTCIF3
 ((
uöt32_t
)0x00000200Ë

	)

2737 
	#DMA_IFCR_CHTIF3
 ((
uöt32_t
)0x00000400Ë

	)

2738 
	#DMA_IFCR_CTEIF3
 ((
uöt32_t
)0x00000800Ë

	)

2739 
	#DMA_IFCR_CGIF4
 ((
uöt32_t
)0x00001000Ë

	)

2740 
	#DMA_IFCR_CTCIF4
 ((
uöt32_t
)0x00002000Ë

	)

2741 
	#DMA_IFCR_CHTIF4
 ((
uöt32_t
)0x00004000Ë

	)

2742 
	#DMA_IFCR_CTEIF4
 ((
uöt32_t
)0x00008000Ë

	)

2743 
	#DMA_IFCR_CGIF5
 ((
uöt32_t
)0x00010000Ë

	)

2744 
	#DMA_IFCR_CTCIF5
 ((
uöt32_t
)0x00020000Ë

	)

2745 
	#DMA_IFCR_CHTIF5
 ((
uöt32_t
)0x00040000Ë

	)

2746 
	#DMA_IFCR_CTEIF5
 ((
uöt32_t
)0x00080000Ë

	)

2747 
	#DMA_IFCR_CGIF6
 ((
uöt32_t
)0x00100000Ë

	)

2748 
	#DMA_IFCR_CTCIF6
 ((
uöt32_t
)0x00200000Ë

	)

2749 
	#DMA_IFCR_CHTIF6
 ((
uöt32_t
)0x00400000Ë

	)

2750 
	#DMA_IFCR_CTEIF6
 ((
uöt32_t
)0x00800000Ë

	)

2751 
	#DMA_IFCR_CGIF7
 ((
uöt32_t
)0x01000000Ë

	)

2752 
	#DMA_IFCR_CTCIF7
 ((
uöt32_t
)0x02000000Ë

	)

2753 
	#DMA_IFCR_CHTIF7
 ((
uöt32_t
)0x04000000Ë

	)

2754 
	#DMA_IFCR_CTEIF7
 ((
uöt32_t
)0x08000000Ë

	)

2757 
	#DMA_CCR_EN
 ((
uöt32_t
)0x00000001Ë

	)

2758 
	#DMA_CCR_TCIE
 ((
uöt32_t
)0x00000002Ë

	)

2759 
	#DMA_CCR_HTIE
 ((
uöt32_t
)0x00000004Ë

	)

2760 
	#DMA_CCR_TEIE
 ((
uöt32_t
)0x00000008Ë

	)

2761 
	#DMA_CCR_DIR
 ((
uöt32_t
)0x00000010Ë

	)

2762 
	#DMA_CCR_CIRC
 ((
uöt32_t
)0x00000020Ë

	)

2763 
	#DMA_CCR_PINC
 ((
uöt32_t
)0x00000040Ë

	)

2764 
	#DMA_CCR_MINC
 ((
uöt32_t
)0x00000080Ë

	)

2766 
	#DMA_CCR_PSIZE
 ((
uöt32_t
)0x00000300Ë

	)

2767 
	#DMA_CCR_PSIZE_0
 ((
uöt32_t
)0x00000100Ë

	)

2768 
	#DMA_CCR_PSIZE_1
 ((
uöt32_t
)0x00000200Ë

	)

2770 
	#DMA_CCR_MSIZE
 ((
uöt32_t
)0x00000C00Ë

	)

2771 
	#DMA_CCR_MSIZE_0
 ((
uöt32_t
)0x00000400Ë

	)

2772 
	#DMA_CCR_MSIZE_1
 ((
uöt32_t
)0x00000800Ë

	)

2774 
	#DMA_CCR_PL
 ((
uöt32_t
)0x00003000Ë

	)

2775 
	#DMA_CCR_PL_0
 ((
uöt32_t
)0x00001000Ë

	)

2776 
	#DMA_CCR_PL_1
 ((
uöt32_t
)0x00002000Ë

	)

2778 
	#DMA_CCR_MEM2MEM
 ((
uöt32_t
)0x00004000Ë

	)

2781 
	#DMA_CNDTR_NDT
 ((
uöt32_t
)0x0000FFFFË

	)

2784 
	#DMA_CPAR_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2787 
	#DMA_CMAR_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2795 
	#EXTI_IMR_MR0
 ((
uöt32_t
)0x00000001Ë

	)

2796 
	#EXTI_IMR_MR1
 ((
uöt32_t
)0x00000002Ë

	)

2797 
	#EXTI_IMR_MR2
 ((
uöt32_t
)0x00000004Ë

	)

2798 
	#EXTI_IMR_MR3
 ((
uöt32_t
)0x00000008Ë

	)

2799 
	#EXTI_IMR_MR4
 ((
uöt32_t
)0x00000010Ë

	)

2800 
	#EXTI_IMR_MR5
 ((
uöt32_t
)0x00000020Ë

	)

2801 
	#EXTI_IMR_MR6
 ((
uöt32_t
)0x00000040Ë

	)

2802 
	#EXTI_IMR_MR7
 ((
uöt32_t
)0x00000080Ë

	)

2803 
	#EXTI_IMR_MR8
 ((
uöt32_t
)0x00000100Ë

	)

2804 
	#EXTI_IMR_MR9
 ((
uöt32_t
)0x00000200Ë

	)

2805 
	#EXTI_IMR_MR10
 ((
uöt32_t
)0x00000400Ë

	)

2806 
	#EXTI_IMR_MR11
 ((
uöt32_t
)0x00000800Ë

	)

2807 
	#EXTI_IMR_MR12
 ((
uöt32_t
)0x00001000Ë

	)

2808 
	#EXTI_IMR_MR13
 ((
uöt32_t
)0x00002000Ë

	)

2809 
	#EXTI_IMR_MR14
 ((
uöt32_t
)0x00004000Ë

	)

2810 
	#EXTI_IMR_MR15
 ((
uöt32_t
)0x00008000Ë

	)

2811 
	#EXTI_IMR_MR16
 ((
uöt32_t
)0x00010000Ë

	)

2812 
	#EXTI_IMR_MR17
 ((
uöt32_t
)0x00020000Ë

	)

2813 
	#EXTI_IMR_MR18
 ((
uöt32_t
)0x00040000Ë

	)

2814 
	#EXTI_IMR_MR19
 ((
uöt32_t
)0x00080000Ë

	)

2815 
	#EXTI_IMR_MR20
 ((
uöt32_t
)0x00100000Ë

	)

2816 
	#EXTI_IMR_MR21
 ((
uöt32_t
)0x00200000Ë

	)

2817 
	#EXTI_IMR_MR22
 ((
uöt32_t
)0x00400000Ë

	)

2818 
	#EXTI_IMR_MR23
 ((
uöt32_t
)0x00800000Ë

	)

2819 
	#EXTI_IMR_MR24
 ((
uöt32_t
)0x01000000Ë

	)

2820 
	#EXTI_IMR_MR25
 ((
uöt32_t
)0x02000000Ë

	)

2821 
	#EXTI_IMR_MR26
 ((
uöt32_t
)0x04000000Ë

	)

2822 
	#EXTI_IMR_MR27
 ((
uöt32_t
)0x08000000Ë

	)

2823 
	#EXTI_IMR_MR28
 ((
uöt32_t
)0x10000000Ë

	)

2824 
	#EXTI_IMR_MR29
 ((
uöt32_t
)0x20000000Ë

	)

2825 
	#EXTI_IMR_MR30
 ((
uöt32_t
)0x40000000Ë

	)

2826 
	#EXTI_IMR_MR31
 ((
uöt32_t
)0x80000000Ë

	)

2829 
	#EXTI_EMR_MR0
 ((
uöt32_t
)0x00000001Ë

	)

2830 
	#EXTI_EMR_MR1
 ((
uöt32_t
)0x00000002Ë

	)

2831 
	#EXTI_EMR_MR2
 ((
uöt32_t
)0x00000004Ë

	)

2832 
	#EXTI_EMR_MR3
 ((
uöt32_t
)0x00000008Ë

	)

2833 
	#EXTI_EMR_MR4
 ((
uöt32_t
)0x00000010Ë

	)

2834 
	#EXTI_EMR_MR5
 ((
uöt32_t
)0x00000020Ë

	)

2835 
	#EXTI_EMR_MR6
 ((
uöt32_t
)0x00000040Ë

	)

2836 
	#EXTI_EMR_MR7
 ((
uöt32_t
)0x00000080Ë

	)

2837 
	#EXTI_EMR_MR8
 ((
uöt32_t
)0x00000100Ë

	)

2838 
	#EXTI_EMR_MR9
 ((
uöt32_t
)0x00000200Ë

	)

2839 
	#EXTI_EMR_MR10
 ((
uöt32_t
)0x00000400Ë

	)

2840 
	#EXTI_EMR_MR11
 ((
uöt32_t
)0x00000800Ë

	)

2841 
	#EXTI_EMR_MR12
 ((
uöt32_t
)0x00001000Ë

	)

2842 
	#EXTI_EMR_MR13
 ((
uöt32_t
)0x00002000Ë

	)

2843 
	#EXTI_EMR_MR14
 ((
uöt32_t
)0x00004000Ë

	)

2844 
	#EXTI_EMR_MR15
 ((
uöt32_t
)0x00008000Ë

	)

2845 
	#EXTI_EMR_MR16
 ((
uöt32_t
)0x00010000Ë

	)

2846 
	#EXTI_EMR_MR17
 ((
uöt32_t
)0x00020000Ë

	)

2847 
	#EXTI_EMR_MR18
 ((
uöt32_t
)0x00040000Ë

	)

2848 
	#EXTI_EMR_MR19
 ((
uöt32_t
)0x00080000Ë

	)

2849 
	#EXTI_EMR_MR20
 ((
uöt32_t
)0x00100000Ë

	)

2850 
	#EXTI_EMR_MR21
 ((
uöt32_t
)0x00200000Ë

	)

2851 
	#EXTI_EMR_MR22
 ((
uöt32_t
)0x00400000Ë

	)

2852 
	#EXTI_EMR_MR23
 ((
uöt32_t
)0x00800000Ë

	)

2853 
	#EXTI_EMR_MR24
 ((
uöt32_t
)0x01000000Ë

	)

2854 
	#EXTI_EMR_MR25
 ((
uöt32_t
)0x02000000Ë

	)

2855 
	#EXTI_EMR_MR26
 ((
uöt32_t
)0x04000000Ë

	)

2856 
	#EXTI_EMR_MR27
 ((
uöt32_t
)0x08000000Ë

	)

2857 
	#EXTI_EMR_MR28
 ((
uöt32_t
)0x10000000Ë

	)

2858 
	#EXTI_EMR_MR29
 ((
uöt32_t
)0x20000000Ë

	)

2859 
	#EXTI_EMR_MR30
 ((
uöt32_t
)0x40000000Ë

	)

2860 
	#EXTI_EMR_MR31
 ((
uöt32_t
)0x80000000Ë

	)

2863 
	#EXTI_RTSR_TR0
 ((
uöt32_t
)0x00000001Ë

	)

2864 
	#EXTI_RTSR_TR1
 ((
uöt32_t
)0x00000002Ë

	)

2865 
	#EXTI_RTSR_TR2
 ((
uöt32_t
)0x00000004Ë

	)

2866 
	#EXTI_RTSR_TR3
 ((
uöt32_t
)0x00000008Ë

	)

2867 
	#EXTI_RTSR_TR4
 ((
uöt32_t
)0x00000010Ë

	)

2868 
	#EXTI_RTSR_TR5
 ((
uöt32_t
)0x00000020Ë

	)

2869 
	#EXTI_RTSR_TR6
 ((
uöt32_t
)0x00000040Ë

	)

2870 
	#EXTI_RTSR_TR7
 ((
uöt32_t
)0x00000080Ë

	)

2871 
	#EXTI_RTSR_TR8
 ((
uöt32_t
)0x00000100Ë

	)

2872 
	#EXTI_RTSR_TR9
 ((
uöt32_t
)0x00000200Ë

	)

2873 
	#EXTI_RTSR_TR10
 ((
uöt32_t
)0x00000400Ë

	)

2874 
	#EXTI_RTSR_TR11
 ((
uöt32_t
)0x00000800Ë

	)

2875 
	#EXTI_RTSR_TR12
 ((
uöt32_t
)0x00001000Ë

	)

2876 
	#EXTI_RTSR_TR13
 ((
uöt32_t
)0x00002000Ë

	)

2877 
	#EXTI_RTSR_TR14
 ((
uöt32_t
)0x00004000Ë

	)

2878 
	#EXTI_RTSR_TR15
 ((
uöt32_t
)0x00008000Ë

	)

2879 
	#EXTI_RTSR_TR16
 ((
uöt32_t
)0x00010000Ë

	)

2880 
	#EXTI_RTSR_TR17
 ((
uöt32_t
)0x00020000Ë

	)

2881 
	#EXTI_RTSR_TR19
 ((
uöt32_t
)0x00080000Ë

	)

2882 
	#EXTI_RTSR_TR20
 ((
uöt32_t
)0x00100000Ë

	)

2883 
	#EXTI_RTSR_TR21
 ((
uöt32_t
)0x00200000Ë

	)

2884 
	#EXTI_RTSR_TR22
 ((
uöt32_t
)0x00400000Ë

	)

2887 
	#EXTI_FTSR_TR0
 ((
uöt32_t
)0x00000001Ë

	)

2888 
	#EXTI_FTSR_TR1
 ((
uöt32_t
)0x00000002Ë

	)

2889 
	#EXTI_FTSR_TR2
 ((
uöt32_t
)0x00000004Ë

	)

2890 
	#EXTI_FTSR_TR3
 ((
uöt32_t
)0x00000008Ë

	)

2891 
	#EXTI_FTSR_TR4
 ((
uöt32_t
)0x00000010Ë

	)

2892 
	#EXTI_FTSR_TR5
 ((
uöt32_t
)0x00000020Ë

	)

2893 
	#EXTI_FTSR_TR6
 ((
uöt32_t
)0x00000040Ë

	)

2894 
	#EXTI_FTSR_TR7
 ((
uöt32_t
)0x00000080Ë

	)

2895 
	#EXTI_FTSR_TR8
 ((
uöt32_t
)0x00000100Ë

	)

2896 
	#EXTI_FTSR_TR9
 ((
uöt32_t
)0x00000200Ë

	)

2897 
	#EXTI_FTSR_TR10
 ((
uöt32_t
)0x00000400Ë

	)

2898 
	#EXTI_FTSR_TR11
 ((
uöt32_t
)0x00000800Ë

	)

2899 
	#EXTI_FTSR_TR12
 ((
uöt32_t
)0x00001000Ë

	)

2900 
	#EXTI_FTSR_TR13
 ((
uöt32_t
)0x00002000Ë

	)

2901 
	#EXTI_FTSR_TR14
 ((
uöt32_t
)0x00004000Ë

	)

2902 
	#EXTI_FTSR_TR15
 ((
uöt32_t
)0x00008000Ë

	)

2903 
	#EXTI_FTSR_TR16
 ((
uöt32_t
)0x00010000Ë

	)

2904 
	#EXTI_FTSR_TR17
 ((
uöt32_t
)0x00020000Ë

	)

2905 
	#EXTI_FTSR_TR19
 ((
uöt32_t
)0x00080000Ë

	)

2906 
	#EXTI_FTSR_TR20
 ((
uöt32_t
)0x00100000Ë

	)

2907 
	#EXTI_FTSR_TR21
 ((
uöt32_t
)0x00200000Ë

	)

2908 
	#EXTI_FTSR_TR22
 ((
uöt32_t
)0x00400000Ë

	)

2911 
	#EXTI_SWIER_SWIER0
 ((
uöt32_t
)0x00000001Ë

	)

2912 
	#EXTI_SWIER_SWIER1
 ((
uöt32_t
)0x00000002Ë

	)

2913 
	#EXTI_SWIER_SWIER2
 ((
uöt32_t
)0x00000004Ë

	)

2914 
	#EXTI_SWIER_SWIER3
 ((
uöt32_t
)0x00000008Ë

	)

2915 
	#EXTI_SWIER_SWIER4
 ((
uöt32_t
)0x00000010Ë

	)

2916 
	#EXTI_SWIER_SWIER5
 ((
uöt32_t
)0x00000020Ë

	)

2917 
	#EXTI_SWIER_SWIER6
 ((
uöt32_t
)0x00000040Ë

	)

2918 
	#EXTI_SWIER_SWIER7
 ((
uöt32_t
)0x00000080Ë

	)

2919 
	#EXTI_SWIER_SWIER8
 ((
uöt32_t
)0x00000100Ë

	)

2920 
	#EXTI_SWIER_SWIER9
 ((
uöt32_t
)0x00000200Ë

	)

2921 
	#EXTI_SWIER_SWIER10
 ((
uöt32_t
)0x00000400Ë

	)

2922 
	#EXTI_SWIER_SWIER11
 ((
uöt32_t
)0x00000800Ë

	)

2923 
	#EXTI_SWIER_SWIER12
 ((
uöt32_t
)0x00001000Ë

	)

2924 
	#EXTI_SWIER_SWIER13
 ((
uöt32_t
)0x00002000Ë

	)

2925 
	#EXTI_SWIER_SWIER14
 ((
uöt32_t
)0x00004000Ë

	)

2926 
	#EXTI_SWIER_SWIER15
 ((
uöt32_t
)0x00008000Ë

	)

2927 
	#EXTI_SWIER_SWIER16
 ((
uöt32_t
)0x00010000Ë

	)

2928 
	#EXTI_SWIER_SWIER17
 ((
uöt32_t
)0x00020000Ë

	)

2929 
	#EXTI_SWIER_SWIER19
 ((
uöt32_t
)0x00080000Ë

	)

2930 
	#EXTI_SWIER_SWIER20
 ((
uöt32_t
)0x00100000Ë

	)

2931 
	#EXTI_SWIER_SWIER21
 ((
uöt32_t
)0x00200000Ë

	)

2932 
	#EXTI_SWIER_SWIER22
 ((
uöt32_t
)0x00400000Ë

	)

2935 
	#EXTI_PR_PR0
 ((
uöt32_t
)0x00000001Ë

	)

2936 
	#EXTI_PR_PR1
 ((
uöt32_t
)0x00000002Ë

	)

2937 
	#EXTI_PR_PR2
 ((
uöt32_t
)0x00000004Ë

	)

2938 
	#EXTI_PR_PR3
 ((
uöt32_t
)0x00000008Ë

	)

2939 
	#EXTI_PR_PR4
 ((
uöt32_t
)0x00000010Ë

	)

2940 
	#EXTI_PR_PR5
 ((
uöt32_t
)0x00000020Ë

	)

2941 
	#EXTI_PR_PR6
 ((
uöt32_t
)0x00000040Ë

	)

2942 
	#EXTI_PR_PR7
 ((
uöt32_t
)0x00000080Ë

	)

2943 
	#EXTI_PR_PR8
 ((
uöt32_t
)0x00000100Ë

	)

2944 
	#EXTI_PR_PR9
 ((
uöt32_t
)0x00000200Ë

	)

2945 
	#EXTI_PR_PR10
 ((
uöt32_t
)0x00000400Ë

	)

2946 
	#EXTI_PR_PR11
 ((
uöt32_t
)0x00000800Ë

	)

2947 
	#EXTI_PR_PR12
 ((
uöt32_t
)0x00001000Ë

	)

2948 
	#EXTI_PR_PR13
 ((
uöt32_t
)0x00002000Ë

	)

2949 
	#EXTI_PR_PR14
 ((
uöt32_t
)0x00004000Ë

	)

2950 
	#EXTI_PR_PR15
 ((
uöt32_t
)0x00008000Ë

	)

2951 
	#EXTI_PR_PR16
 ((
uöt32_t
)0x00010000Ë

	)

2952 
	#EXTI_PR_PR17
 ((
uöt32_t
)0x00020000Ë

	)

2953 
	#EXTI_PR_PR19
 ((
uöt32_t
)0x00080000Ë

	)

2954 
	#EXTI_PR_PR20
 ((
uöt32_t
)0x00100000Ë

	)

2955 
	#EXTI_PR_PR21
 ((
uöt32_t
)0x00200000Ë

	)

2956 
	#EXTI_PR_PR22
 ((
uöt32_t
)0x00400000Ë

	)

2965 
	#FLASH_ACR_LATENCY
 ((
uöt32_t
)0x00000001Ë

	)

2967 
	#FLASH_ACR_PRFTBE
 ((
uöt32_t
)0x00000010Ë

	)

2968 
	#FLASH_ACR_PRFTBS
 ((
uöt32_t
)0x00000020Ë

	)

2971 
	#FLASH_KEYR_FKEYR
 ((
uöt32_t
)0xFFFFFFFFË

	)

2974 
	#FLASH_OPTKEYR_OPTKEYR
 ((
uöt32_t
)0xFFFFFFFFË

	)

2977 
	#FLASH_FKEY1
 ((
uöt32_t
)0x45670123Ë

	)

2978 
	#FLASH_FKEY2
 ((
uöt32_t
)0xCDEF89ABË

	)

2981 
	#FLASH_OPTKEY1
 ((
uöt32_t
)0x45670123Ë

	)

2982 
	#FLASH_OPTKEY2
 ((
uöt32_t
)0xCDEF89ABË

	)

2986 
	#FLASH_SR_BSY
 ((
uöt32_t
)0x00000001Ë

	)

2987 
	#FLASH_SR_PGERR
 ((
uöt32_t
)0x00000004Ë

	)

2988 
	#FLASH_SR_WRPRTERR
 ((
uöt32_t
)0x00000010Ë

	)

2989 
	#FLASH_SR_EOP
 ((
uöt32_t
)0x00000020Ë

	)

2990 
	#FLASH_SR_WRPERR
 
FLASH_SR_WRPRTERR


	)

2993 
	#FLASH_CR_PG
 ((
uöt32_t
)0x00000001Ë

	)

2994 
	#FLASH_CR_PER
 ((
uöt32_t
)0x00000002Ë

	)

2995 
	#FLASH_CR_MER
 ((
uöt32_t
)0x00000004Ë

	)

2996 
	#FLASH_CR_OPTPG
 ((
uöt32_t
)0x00000010Ë

	)

2997 
	#FLASH_CR_OPTER
 ((
uöt32_t
)0x00000020Ë

	)

2998 
	#FLASH_CR_STRT
 ((
uöt32_t
)0x00000040Ë

	)

2999 
	#FLASH_CR_LOCK
 ((
uöt32_t
)0x00000080Ë

	)

3000 
	#FLASH_CR_OPTWRE
 ((
uöt32_t
)0x00000200Ë

	)

3001 
	#FLASH_CR_ERRIE
 ((
uöt32_t
)0x00000400Ë

	)

3002 
	#FLASH_CR_EOPIE
 ((
uöt32_t
)0x00001000Ë

	)

3003 
	#FLASH_CR_OBL_LAUNCH
 ((
uöt32_t
)0x00002000Ë

	)

3006 
	#FLASH_AR_FAR
 ((
uöt32_t
)0xFFFFFFFFË

	)

3009 
	#FLASH_OBR_OPTERR
 ((
uöt32_t
)0x00000001Ë

	)

3010 
	#FLASH_OBR_RDPRT1
 ((
uöt32_t
)0x00000002Ë

	)

3011 
	#FLASH_OBR_RDPRT2
 ((
uöt32_t
)0x00000004Ë

	)

3013 
	#FLASH_OBR_USER
 ((
uöt32_t
)0x00003700Ë

	)

3014 
	#FLASH_OBR_IWDG_SW
 ((
uöt32_t
)0x00000100Ë

	)

3015 
	#FLASH_OBR_nRST_STOP
 ((
uöt32_t
)0x00000200Ë

	)

3016 
	#FLASH_OBR_nRST_STDBY
 ((
uöt32_t
)0x00000400Ë

	)

3017 
	#FLASH_OBR_nBOOT0
 ((
uöt32_t
)0x00000800Ë

	)

3018 
	#FLASH_OBR_nBOOT1
 ((
uöt32_t
)0x00001000Ë

	)

3019 
	#FLASH_OBR_VDDA_MONITOR
 ((
uöt32_t
)0x00002000Ë

	)

3020 
	#FLASH_OBR_RAM_PARITY_CHECK
 ((
uöt32_t
)0x00004000Ë

	)

3021 
	#FLASH_OBR_nBOOT0_SW
 ((
uöt32_t
)0x00008000Ë

	)

3022 
	#FLASH_OBR_DATA0
 ((
uöt32_t
)0x00FF0000Ë

	)

3023 
	#FLASH_OBR_DATA1
 ((
uöt32_t
)0xFF000000Ë

	)

3026 
	#FLASH_OBR_BOOT1
 
FLASH_OBR_nBOOT1


	)

3029 
	#FLASH_OBR_VDDA_ANALOG
 
FLASH_OBR_VDDA_MONITOR


	)

3032 
	#FLASH_WRPR_WRP
 ((
uöt32_t
)0xFFFFFFFFË

	)

3037 
	#OB_RDP_RDP
 ((
uöt32_t
)0x000000FFË

	)

3038 
	#OB_RDP_nRDP
 ((
uöt32_t
)0x0000FF00Ë

	)

3041 
	#OB_USER_USER
 ((
uöt32_t
)0x00FF0000Ë

	)

3042 
	#OB_USER_nUSER
 ((
uöt32_t
)0xFF000000Ë

	)

3045 
	#OB_WRP0_WRP0
 ((
uöt32_t
)0x000000FFË

	)

3046 
	#OB_WRP0_nWRP0
 ((
uöt32_t
)0x0000FF00Ë

	)

3049 
	#OB_WRP1_WRP1
 ((
uöt32_t
)0x00FF0000Ë

	)

3050 
	#OB_WRP1_nWRP1
 ((
uöt32_t
)0xFF000000Ë

	)

3053 
	#OB_WRP2_WRP2
 ((
uöt32_t
)0x000000FFË

	)

3054 
	#OB_WRP2_nWRP2
 ((
uöt32_t
)0x0000FF00Ë

	)

3057 
	#OB_WRP3_WRP3
 ((
uöt32_t
)0x00FF0000Ë

	)

3058 
	#OB_WRP3_nWRP3
 ((
uöt32_t
)0xFF000000Ë

	)

3066 
	#GPIO_MODER_MODER0
 ((
uöt32_t
)0x00000003)

	)

3067 
	#GPIO_MODER_MODER0_0
 ((
uöt32_t
)0x00000001)

	)

3068 
	#GPIO_MODER_MODER0_1
 ((
uöt32_t
)0x00000002)

	)

3069 
	#GPIO_MODER_MODER1
 ((
uöt32_t
)0x0000000C)

	)

3070 
	#GPIO_MODER_MODER1_0
 ((
uöt32_t
)0x00000004)

	)

3071 
	#GPIO_MODER_MODER1_1
 ((
uöt32_t
)0x00000008)

	)

3072 
	#GPIO_MODER_MODER2
 ((
uöt32_t
)0x00000030)

	)

3073 
	#GPIO_MODER_MODER2_0
 ((
uöt32_t
)0x00000010)

	)

3074 
	#GPIO_MODER_MODER2_1
 ((
uöt32_t
)0x00000020)

	)

3075 
	#GPIO_MODER_MODER3
 ((
uöt32_t
)0x000000C0)

	)

3076 
	#GPIO_MODER_MODER3_0
 ((
uöt32_t
)0x00000040)

	)

3077 
	#GPIO_MODER_MODER3_1
 ((
uöt32_t
)0x00000080)

	)

3078 
	#GPIO_MODER_MODER4
 ((
uöt32_t
)0x00000300)

	)

3079 
	#GPIO_MODER_MODER4_0
 ((
uöt32_t
)0x00000100)

	)

3080 
	#GPIO_MODER_MODER4_1
 ((
uöt32_t
)0x00000200)

	)

3081 
	#GPIO_MODER_MODER5
 ((
uöt32_t
)0x00000C00)

	)

3082 
	#GPIO_MODER_MODER5_0
 ((
uöt32_t
)0x00000400)

	)

3083 
	#GPIO_MODER_MODER5_1
 ((
uöt32_t
)0x00000800)

	)

3084 
	#GPIO_MODER_MODER6
 ((
uöt32_t
)0x00003000)

	)

3085 
	#GPIO_MODER_MODER6_0
 ((
uöt32_t
)0x00001000)

	)

3086 
	#GPIO_MODER_MODER6_1
 ((
uöt32_t
)0x00002000)

	)

3087 
	#GPIO_MODER_MODER7
 ((
uöt32_t
)0x0000C000)

	)

3088 
	#GPIO_MODER_MODER7_0
 ((
uöt32_t
)0x00004000)

	)

3089 
	#GPIO_MODER_MODER7_1
 ((
uöt32_t
)0x00008000)

	)

3090 
	#GPIO_MODER_MODER8
 ((
uöt32_t
)0x00030000)

	)

3091 
	#GPIO_MODER_MODER8_0
 ((
uöt32_t
)0x00010000)

	)

3092 
	#GPIO_MODER_MODER8_1
 ((
uöt32_t
)0x00020000)

	)

3093 
	#GPIO_MODER_MODER9
 ((
uöt32_t
)0x000C0000)

	)

3094 
	#GPIO_MODER_MODER9_0
 ((
uöt32_t
)0x00040000)

	)

3095 
	#GPIO_MODER_MODER9_1
 ((
uöt32_t
)0x00080000)

	)

3096 
	#GPIO_MODER_MODER10
 ((
uöt32_t
)0x00300000)

	)

3097 
	#GPIO_MODER_MODER10_0
 ((
uöt32_t
)0x00100000)

	)

3098 
	#GPIO_MODER_MODER10_1
 ((
uöt32_t
)0x00200000)

	)

3099 
	#GPIO_MODER_MODER11
 ((
uöt32_t
)0x00C00000)

	)

3100 
	#GPIO_MODER_MODER11_0
 ((
uöt32_t
)0x00400000)

	)

3101 
	#GPIO_MODER_MODER11_1
 ((
uöt32_t
)0x00800000)

	)

3102 
	#GPIO_MODER_MODER12
 ((
uöt32_t
)0x03000000)

	)

3103 
	#GPIO_MODER_MODER12_0
 ((
uöt32_t
)0x01000000)

	)

3104 
	#GPIO_MODER_MODER12_1
 ((
uöt32_t
)0x02000000)

	)

3105 
	#GPIO_MODER_MODER13
 ((
uöt32_t
)0x0C000000)

	)

3106 
	#GPIO_MODER_MODER13_0
 ((
uöt32_t
)0x04000000)

	)

3107 
	#GPIO_MODER_MODER13_1
 ((
uöt32_t
)0x08000000)

	)

3108 
	#GPIO_MODER_MODER14
 ((
uöt32_t
)0x30000000)

	)

3109 
	#GPIO_MODER_MODER14_0
 ((
uöt32_t
)0x10000000)

	)

3110 
	#GPIO_MODER_MODER14_1
 ((
uöt32_t
)0x20000000)

	)

3111 
	#GPIO_MODER_MODER15
 ((
uöt32_t
)0xC0000000)

	)

3112 
	#GPIO_MODER_MODER15_0
 ((
uöt32_t
)0x40000000)

	)

3113 
	#GPIO_MODER_MODER15_1
 ((
uöt32_t
)0x80000000)

	)

3116 
	#GPIO_OTYPER_OT_0
 ((
uöt32_t
)0x00000001)

	)

3117 
	#GPIO_OTYPER_OT_1
 ((
uöt32_t
)0x00000002)

	)

3118 
	#GPIO_OTYPER_OT_2
 ((
uöt32_t
)0x00000004)

	)

3119 
	#GPIO_OTYPER_OT_3
 ((
uöt32_t
)0x00000008)

	)

3120 
	#GPIO_OTYPER_OT_4
 ((
uöt32_t
)0x00000010)

	)

3121 
	#GPIO_OTYPER_OT_5
 ((
uöt32_t
)0x00000020)

	)

3122 
	#GPIO_OTYPER_OT_6
 ((
uöt32_t
)0x00000040)

	)

3123 
	#GPIO_OTYPER_OT_7
 ((
uöt32_t
)0x00000080)

	)

3124 
	#GPIO_OTYPER_OT_8
 ((
uöt32_t
)0x00000100)

	)

3125 
	#GPIO_OTYPER_OT_9
 ((
uöt32_t
)0x00000200)

	)

3126 
	#GPIO_OTYPER_OT_10
 ((
uöt32_t
)0x00000400)

	)

3127 
	#GPIO_OTYPER_OT_11
 ((
uöt32_t
)0x00000800)

	)

3128 
	#GPIO_OTYPER_OT_12
 ((
uöt32_t
)0x00001000)

	)

3129 
	#GPIO_OTYPER_OT_13
 ((
uöt32_t
)0x00002000)

	)

3130 
	#GPIO_OTYPER_OT_14
 ((
uöt32_t
)0x00004000)

	)

3131 
	#GPIO_OTYPER_OT_15
 ((
uöt32_t
)0x00008000)

	)

3134 
	#GPIO_OSPEEDR_OSPEEDR0
 ((
uöt32_t
)0x00000003)

	)

3135 
	#GPIO_OSPEEDR_OSPEEDR0_0
 ((
uöt32_t
)0x00000001)

	)

3136 
	#GPIO_OSPEEDR_OSPEEDR0_1
 ((
uöt32_t
)0x00000002)

	)

3137 
	#GPIO_OSPEEDR_OSPEEDR1
 ((
uöt32_t
)0x0000000C)

	)

3138 
	#GPIO_OSPEEDR_OSPEEDR1_0
 ((
uöt32_t
)0x00000004)

	)

3139 
	#GPIO_OSPEEDR_OSPEEDR1_1
 ((
uöt32_t
)0x00000008)

	)

3140 
	#GPIO_OSPEEDR_OSPEEDR2
 ((
uöt32_t
)0x00000030)

	)

3141 
	#GPIO_OSPEEDR_OSPEEDR2_0
 ((
uöt32_t
)0x00000010)

	)

3142 
	#GPIO_OSPEEDR_OSPEEDR2_1
 ((
uöt32_t
)0x00000020)

	)

3143 
	#GPIO_OSPEEDR_OSPEEDR3
 ((
uöt32_t
)0x000000C0)

	)

3144 
	#GPIO_OSPEEDR_OSPEEDR3_0
 ((
uöt32_t
)0x00000040)

	)

3145 
	#GPIO_OSPEEDR_OSPEEDR3_1
 ((
uöt32_t
)0x00000080)

	)

3146 
	#GPIO_OSPEEDR_OSPEEDR4
 ((
uöt32_t
)0x00000300)

	)

3147 
	#GPIO_OSPEEDR_OSPEEDR4_0
 ((
uöt32_t
)0x00000100)

	)

3148 
	#GPIO_OSPEEDR_OSPEEDR4_1
 ((
uöt32_t
)0x00000200)

	)

3149 
	#GPIO_OSPEEDR_OSPEEDR5
 ((
uöt32_t
)0x00000C00)

	)

3150 
	#GPIO_OSPEEDR_OSPEEDR5_0
 ((
uöt32_t
)0x00000400)

	)

3151 
	#GPIO_OSPEEDR_OSPEEDR5_1
 ((
uöt32_t
)0x00000800)

	)

3152 
	#GPIO_OSPEEDR_OSPEEDR6
 ((
uöt32_t
)0x00003000)

	)

3153 
	#GPIO_OSPEEDR_OSPEEDR6_0
 ((
uöt32_t
)0x00001000)

	)

3154 
	#GPIO_OSPEEDR_OSPEEDR6_1
 ((
uöt32_t
)0x00002000)

	)

3155 
	#GPIO_OSPEEDR_OSPEEDR7
 ((
uöt32_t
)0x0000C000)

	)

3156 
	#GPIO_OSPEEDR_OSPEEDR7_0
 ((
uöt32_t
)0x00004000)

	)

3157 
	#GPIO_OSPEEDR_OSPEEDR7_1
 ((
uöt32_t
)0x00008000)

	)

3158 
	#GPIO_OSPEEDR_OSPEEDR8
 ((
uöt32_t
)0x00030000)

	)

3159 
	#GPIO_OSPEEDR_OSPEEDR8_0
 ((
uöt32_t
)0x00010000)

	)

3160 
	#GPIO_OSPEEDR_OSPEEDR8_1
 ((
uöt32_t
)0x00020000)

	)

3161 
	#GPIO_OSPEEDR_OSPEEDR9
 ((
uöt32_t
)0x000C0000)

	)

3162 
	#GPIO_OSPEEDR_OSPEEDR9_0
 ((
uöt32_t
)0x00040000)

	)

3163 
	#GPIO_OSPEEDR_OSPEEDR9_1
 ((
uöt32_t
)0x00080000)

	)

3164 
	#GPIO_OSPEEDR_OSPEEDR10
 ((
uöt32_t
)0x00300000)

	)

3165 
	#GPIO_OSPEEDR_OSPEEDR10_0
 ((
uöt32_t
)0x00100000)

	)

3166 
	#GPIO_OSPEEDR_OSPEEDR10_1
 ((
uöt32_t
)0x00200000)

	)

3167 
	#GPIO_OSPEEDR_OSPEEDR11
 ((
uöt32_t
)0x00C00000)

	)

3168 
	#GPIO_OSPEEDR_OSPEEDR11_0
 ((
uöt32_t
)0x00400000)

	)

3169 
	#GPIO_OSPEEDR_OSPEEDR11_1
 ((
uöt32_t
)0x00800000)

	)

3170 
	#GPIO_OSPEEDR_OSPEEDR12
 ((
uöt32_t
)0x03000000)

	)

3171 
	#GPIO_OSPEEDR_OSPEEDR12_0
 ((
uöt32_t
)0x01000000)

	)

3172 
	#GPIO_OSPEEDR_OSPEEDR12_1
 ((
uöt32_t
)0x02000000)

	)

3173 
	#GPIO_OSPEEDR_OSPEEDR13
 ((
uöt32_t
)0x0C000000)

	)

3174 
	#GPIO_OSPEEDR_OSPEEDR13_0
 ((
uöt32_t
)0x04000000)

	)

3175 
	#GPIO_OSPEEDR_OSPEEDR13_1
 ((
uöt32_t
)0x08000000)

	)

3176 
	#GPIO_OSPEEDR_OSPEEDR14
 ((
uöt32_t
)0x30000000)

	)

3177 
	#GPIO_OSPEEDR_OSPEEDR14_0
 ((
uöt32_t
)0x10000000)

	)

3178 
	#GPIO_OSPEEDR_OSPEEDR14_1
 ((
uöt32_t
)0x20000000)

	)

3179 
	#GPIO_OSPEEDR_OSPEEDR15
 ((
uöt32_t
)0xC0000000)

	)

3180 
	#GPIO_OSPEEDR_OSPEEDR15_0
 ((
uöt32_t
)0x40000000)

	)

3181 
	#GPIO_OSPEEDR_OSPEEDR15_1
 ((
uöt32_t
)0x80000000)

	)

3184 
	#GPIO_OSPEEDER_OSPEEDR0
 
GPIO_OSPEEDR_OSPEEDR0


	)

3185 
	#GPIO_OSPEEDER_OSPEEDR0_0
 
GPIO_OSPEEDR_OSPEEDR0_0


	)

3186 
	#GPIO_OSPEEDER_OSPEEDR0_1
 
GPIO_OSPEEDR_OSPEEDR0_1


	)

3187 
	#GPIO_OSPEEDER_OSPEEDR1
 
GPIO_OSPEEDR_OSPEEDR1


	)

3188 
	#GPIO_OSPEEDER_OSPEEDR1_0
 
GPIO_OSPEEDR_OSPEEDR1_0


	)

3189 
	#GPIO_OSPEEDER_OSPEEDR1_1
 
GPIO_OSPEEDR_OSPEEDR1_1


	)

3190 
	#GPIO_OSPEEDER_OSPEEDR2
 
GPIO_OSPEEDR_OSPEEDR2


	)

3191 
	#GPIO_OSPEEDER_OSPEEDR2_0
 
GPIO_OSPEEDR_OSPEEDR2_0


	)

3192 
	#GPIO_OSPEEDER_OSPEEDR2_1
 
GPIO_OSPEEDR_OSPEEDR2_1


	)

3193 
	#GPIO_OSPEEDER_OSPEEDR3
 
GPIO_OSPEEDR_OSPEEDR3


	)

3194 
	#GPIO_OSPEEDER_OSPEEDR3_0
 
GPIO_OSPEEDR_OSPEEDR3_0


	)

3195 
	#GPIO_OSPEEDER_OSPEEDR3_1
 
GPIO_OSPEEDR_OSPEEDR3_1


	)

3196 
	#GPIO_OSPEEDER_OSPEEDR4
 
GPIO_OSPEEDR_OSPEEDR4


	)

3197 
	#GPIO_OSPEEDER_OSPEEDR4_0
 
GPIO_OSPEEDR_OSPEEDR4_0


	)

3198 
	#GPIO_OSPEEDER_OSPEEDR4_1
 
GPIO_OSPEEDR_OSPEEDR4_1


	)

3199 
	#GPIO_OSPEEDER_OSPEEDR5
 
GPIO_OSPEEDR_OSPEEDR5


	)

3200 
	#GPIO_OSPEEDER_OSPEEDR5_0
 
GPIO_OSPEEDR_OSPEEDR5_0


	)

3201 
	#GPIO_OSPEEDER_OSPEEDR5_1
 
GPIO_OSPEEDR_OSPEEDR5_1


	)

3202 
	#GPIO_OSPEEDER_OSPEEDR6
 
GPIO_OSPEEDR_OSPEEDR6


	)

3203 
	#GPIO_OSPEEDER_OSPEEDR6_0
 
GPIO_OSPEEDR_OSPEEDR6_0


	)

3204 
	#GPIO_OSPEEDER_OSPEEDR6_1
 
GPIO_OSPEEDR_OSPEEDR6_1


	)

3205 
	#GPIO_OSPEEDER_OSPEEDR7
 
GPIO_OSPEEDR_OSPEEDR7


	)

3206 
	#GPIO_OSPEEDER_OSPEEDR7_0
 
GPIO_OSPEEDR_OSPEEDR7_0


	)

3207 
	#GPIO_OSPEEDER_OSPEEDR7_1
 
GPIO_OSPEEDR_OSPEEDR7_1


	)

3208 
	#GPIO_OSPEEDER_OSPEEDR8
 
GPIO_OSPEEDR_OSPEEDR8


	)

3209 
	#GPIO_OSPEEDER_OSPEEDR8_0
 
GPIO_OSPEEDR_OSPEEDR8_0


	)

3210 
	#GPIO_OSPEEDER_OSPEEDR8_1
 
GPIO_OSPEEDR_OSPEEDR8_1


	)

3211 
	#GPIO_OSPEEDER_OSPEEDR9
 
GPIO_OSPEEDR_OSPEEDR9


	)

3212 
	#GPIO_OSPEEDER_OSPEEDR9_0
 
GPIO_OSPEEDR_OSPEEDR9_0


	)

3213 
	#GPIO_OSPEEDER_OSPEEDR9_1
 
GPIO_OSPEEDR_OSPEEDR9_1


	)

3214 
	#GPIO_OSPEEDER_OSPEEDR10
 
GPIO_OSPEEDR_OSPEEDR10


	)

3215 
	#GPIO_OSPEEDER_OSPEEDR10_0
 
GPIO_OSPEEDR_OSPEEDR10_0


	)

3216 
	#GPIO_OSPEEDER_OSPEEDR10_1
 
GPIO_OSPEEDR_OSPEEDR10_1


	)

3217 
	#GPIO_OSPEEDER_OSPEEDR11
 
GPIO_OSPEEDR_OSPEEDR11


	)

3218 
	#GPIO_OSPEEDER_OSPEEDR11_0
 
GPIO_OSPEEDR_OSPEEDR11_0


	)

3219 
	#GPIO_OSPEEDER_OSPEEDR11_1
 
GPIO_OSPEEDR_OSPEEDR11_1


	)

3220 
	#GPIO_OSPEEDER_OSPEEDR12
 
GPIO_OSPEEDR_OSPEEDR12


	)

3221 
	#GPIO_OSPEEDER_OSPEEDR12_0
 
GPIO_OSPEEDR_OSPEEDR12_0


	)

3222 
	#GPIO_OSPEEDER_OSPEEDR12_1
 
GPIO_OSPEEDR_OSPEEDR12_1


	)

3223 
	#GPIO_OSPEEDER_OSPEEDR13
 
GPIO_OSPEEDR_OSPEEDR13


	)

3224 
	#GPIO_OSPEEDER_OSPEEDR13_0
 
GPIO_OSPEEDR_OSPEEDR13_0


	)

3225 
	#GPIO_OSPEEDER_OSPEEDR13_1
 
GPIO_OSPEEDR_OSPEEDR13_1


	)

3226 
	#GPIO_OSPEEDER_OSPEEDR14
 
GPIO_OSPEEDR_OSPEEDR14


	)

3227 
	#GPIO_OSPEEDER_OSPEEDR14_0
 
GPIO_OSPEEDR_OSPEEDR14_0


	)

3228 
	#GPIO_OSPEEDER_OSPEEDR14_1
 
GPIO_OSPEEDR_OSPEEDR14_1


	)

3229 
	#GPIO_OSPEEDER_OSPEEDR15
 
GPIO_OSPEEDR_OSPEEDR15


	)

3230 
	#GPIO_OSPEEDER_OSPEEDR15_0
 
GPIO_OSPEEDR_OSPEEDR15_0


	)

3231 
	#GPIO_OSPEEDER_OSPEEDR15_1
 
GPIO_OSPEEDR_OSPEEDR15_1


	)

3234 
	#GPIO_PUPDR_PUPDR0
 ((
uöt32_t
)0x00000003)

	)

3235 
	#GPIO_PUPDR_PUPDR0_0
 ((
uöt32_t
)0x00000001)

	)

3236 
	#GPIO_PUPDR_PUPDR0_1
 ((
uöt32_t
)0x00000002)

	)

3237 
	#GPIO_PUPDR_PUPDR1
 ((
uöt32_t
)0x0000000C)

	)

3238 
	#GPIO_PUPDR_PUPDR1_0
 ((
uöt32_t
)0x00000004)

	)

3239 
	#GPIO_PUPDR_PUPDR1_1
 ((
uöt32_t
)0x00000008)

	)

3240 
	#GPIO_PUPDR_PUPDR2
 ((
uöt32_t
)0x00000030)

	)

3241 
	#GPIO_PUPDR_PUPDR2_0
 ((
uöt32_t
)0x00000010)

	)

3242 
	#GPIO_PUPDR_PUPDR2_1
 ((
uöt32_t
)0x00000020)

	)

3243 
	#GPIO_PUPDR_PUPDR3
 ((
uöt32_t
)0x000000C0)

	)

3244 
	#GPIO_PUPDR_PUPDR3_0
 ((
uöt32_t
)0x00000040)

	)

3245 
	#GPIO_PUPDR_PUPDR3_1
 ((
uöt32_t
)0x00000080)

	)

3246 
	#GPIO_PUPDR_PUPDR4
 ((
uöt32_t
)0x00000300)

	)

3247 
	#GPIO_PUPDR_PUPDR4_0
 ((
uöt32_t
)0x00000100)

	)

3248 
	#GPIO_PUPDR_PUPDR4_1
 ((
uöt32_t
)0x00000200)

	)

3249 
	#GPIO_PUPDR_PUPDR5
 ((
uöt32_t
)0x00000C00)

	)

3250 
	#GPIO_PUPDR_PUPDR5_0
 ((
uöt32_t
)0x00000400)

	)

3251 
	#GPIO_PUPDR_PUPDR5_1
 ((
uöt32_t
)0x00000800)

	)

3252 
	#GPIO_PUPDR_PUPDR6
 ((
uöt32_t
)0x00003000)

	)

3253 
	#GPIO_PUPDR_PUPDR6_0
 ((
uöt32_t
)0x00001000)

	)

3254 
	#GPIO_PUPDR_PUPDR6_1
 ((
uöt32_t
)0x00002000)

	)

3255 
	#GPIO_PUPDR_PUPDR7
 ((
uöt32_t
)0x0000C000)

	)

3256 
	#GPIO_PUPDR_PUPDR7_0
 ((
uöt32_t
)0x00004000)

	)

3257 
	#GPIO_PUPDR_PUPDR7_1
 ((
uöt32_t
)0x00008000)

	)

3258 
	#GPIO_PUPDR_PUPDR8
 ((
uöt32_t
)0x00030000)

	)

3259 
	#GPIO_PUPDR_PUPDR8_0
 ((
uöt32_t
)0x00010000)

	)

3260 
	#GPIO_PUPDR_PUPDR8_1
 ((
uöt32_t
)0x00020000)

	)

3261 
	#GPIO_PUPDR_PUPDR9
 ((
uöt32_t
)0x000C0000)

	)

3262 
	#GPIO_PUPDR_PUPDR9_0
 ((
uöt32_t
)0x00040000)

	)

3263 
	#GPIO_PUPDR_PUPDR9_1
 ((
uöt32_t
)0x00080000)

	)

3264 
	#GPIO_PUPDR_PUPDR10
 ((
uöt32_t
)0x00300000)

	)

3265 
	#GPIO_PUPDR_PUPDR10_0
 ((
uöt32_t
)0x00100000)

	)

3266 
	#GPIO_PUPDR_PUPDR10_1
 ((
uöt32_t
)0x00200000)

	)

3267 
	#GPIO_PUPDR_PUPDR11
 ((
uöt32_t
)0x00C00000)

	)

3268 
	#GPIO_PUPDR_PUPDR11_0
 ((
uöt32_t
)0x00400000)

	)

3269 
	#GPIO_PUPDR_PUPDR11_1
 ((
uöt32_t
)0x00800000)

	)

3270 
	#GPIO_PUPDR_PUPDR12
 ((
uöt32_t
)0x03000000)

	)

3271 
	#GPIO_PUPDR_PUPDR12_0
 ((
uöt32_t
)0x01000000)

	)

3272 
	#GPIO_PUPDR_PUPDR12_1
 ((
uöt32_t
)0x02000000)

	)

3273 
	#GPIO_PUPDR_PUPDR13
 ((
uöt32_t
)0x0C000000)

	)

3274 
	#GPIO_PUPDR_PUPDR13_0
 ((
uöt32_t
)0x04000000)

	)

3275 
	#GPIO_PUPDR_PUPDR13_1
 ((
uöt32_t
)0x08000000)

	)

3276 
	#GPIO_PUPDR_PUPDR14
 ((
uöt32_t
)0x30000000)

	)

3277 
	#GPIO_PUPDR_PUPDR14_0
 ((
uöt32_t
)0x10000000)

	)

3278 
	#GPIO_PUPDR_PUPDR14_1
 ((
uöt32_t
)0x20000000)

	)

3279 
	#GPIO_PUPDR_PUPDR15
 ((
uöt32_t
)0xC0000000)

	)

3280 
	#GPIO_PUPDR_PUPDR15_0
 ((
uöt32_t
)0x40000000)

	)

3281 
	#GPIO_PUPDR_PUPDR15_1
 ((
uöt32_t
)0x80000000)

	)

3284 
	#GPIO_IDR_0
 ((
uöt32_t
)0x00000001)

	)

3285 
	#GPIO_IDR_1
 ((
uöt32_t
)0x00000002)

	)

3286 
	#GPIO_IDR_2
 ((
uöt32_t
)0x00000004)

	)

3287 
	#GPIO_IDR_3
 ((
uöt32_t
)0x00000008)

	)

3288 
	#GPIO_IDR_4
 ((
uöt32_t
)0x00000010)

	)

3289 
	#GPIO_IDR_5
 ((
uöt32_t
)0x00000020)

	)

3290 
	#GPIO_IDR_6
 ((
uöt32_t
)0x00000040)

	)

3291 
	#GPIO_IDR_7
 ((
uöt32_t
)0x00000080)

	)

3292 
	#GPIO_IDR_8
 ((
uöt32_t
)0x00000100)

	)

3293 
	#GPIO_IDR_9
 ((
uöt32_t
)0x00000200)

	)

3294 
	#GPIO_IDR_10
 ((
uöt32_t
)0x00000400)

	)

3295 
	#GPIO_IDR_11
 ((
uöt32_t
)0x00000800)

	)

3296 
	#GPIO_IDR_12
 ((
uöt32_t
)0x00001000)

	)

3297 
	#GPIO_IDR_13
 ((
uöt32_t
)0x00002000)

	)

3298 
	#GPIO_IDR_14
 ((
uöt32_t
)0x00004000)

	)

3299 
	#GPIO_IDR_15
 ((
uöt32_t
)0x00008000)

	)

3302 
	#GPIO_ODR_0
 ((
uöt32_t
)0x00000001)

	)

3303 
	#GPIO_ODR_1
 ((
uöt32_t
)0x00000002)

	)

3304 
	#GPIO_ODR_2
 ((
uöt32_t
)0x00000004)

	)

3305 
	#GPIO_ODR_3
 ((
uöt32_t
)0x00000008)

	)

3306 
	#GPIO_ODR_4
 ((
uöt32_t
)0x00000010)

	)

3307 
	#GPIO_ODR_5
 ((
uöt32_t
)0x00000020)

	)

3308 
	#GPIO_ODR_6
 ((
uöt32_t
)0x00000040)

	)

3309 
	#GPIO_ODR_7
 ((
uöt32_t
)0x00000080)

	)

3310 
	#GPIO_ODR_8
 ((
uöt32_t
)0x00000100)

	)

3311 
	#GPIO_ODR_9
 ((
uöt32_t
)0x00000200)

	)

3312 
	#GPIO_ODR_10
 ((
uöt32_t
)0x00000400)

	)

3313 
	#GPIO_ODR_11
 ((
uöt32_t
)0x00000800)

	)

3314 
	#GPIO_ODR_12
 ((
uöt32_t
)0x00001000)

	)

3315 
	#GPIO_ODR_13
 ((
uöt32_t
)0x00002000)

	)

3316 
	#GPIO_ODR_14
 ((
uöt32_t
)0x00004000)

	)

3317 
	#GPIO_ODR_15
 ((
uöt32_t
)0x00008000)

	)

3320 
	#GPIO_BSRR_BS_0
 ((
uöt32_t
)0x00000001)

	)

3321 
	#GPIO_BSRR_BS_1
 ((
uöt32_t
)0x00000002)

	)

3322 
	#GPIO_BSRR_BS_2
 ((
uöt32_t
)0x00000004)

	)

3323 
	#GPIO_BSRR_BS_3
 ((
uöt32_t
)0x00000008)

	)

3324 
	#GPIO_BSRR_BS_4
 ((
uöt32_t
)0x00000010)

	)

3325 
	#GPIO_BSRR_BS_5
 ((
uöt32_t
)0x00000020)

	)

3326 
	#GPIO_BSRR_BS_6
 ((
uöt32_t
)0x00000040)

	)

3327 
	#GPIO_BSRR_BS_7
 ((
uöt32_t
)0x00000080)

	)

3328 
	#GPIO_BSRR_BS_8
 ((
uöt32_t
)0x00000100)

	)

3329 
	#GPIO_BSRR_BS_9
 ((
uöt32_t
)0x00000200)

	)

3330 
	#GPIO_BSRR_BS_10
 ((
uöt32_t
)0x00000400)

	)

3331 
	#GPIO_BSRR_BS_11
 ((
uöt32_t
)0x00000800)

	)

3332 
	#GPIO_BSRR_BS_12
 ((
uöt32_t
)0x00001000)

	)

3333 
	#GPIO_BSRR_BS_13
 ((
uöt32_t
)0x00002000)

	)

3334 
	#GPIO_BSRR_BS_14
 ((
uöt32_t
)0x00004000)

	)

3335 
	#GPIO_BSRR_BS_15
 ((
uöt32_t
)0x00008000)

	)

3336 
	#GPIO_BSRR_BR_0
 ((
uöt32_t
)0x00010000)

	)

3337 
	#GPIO_BSRR_BR_1
 ((
uöt32_t
)0x00020000)

	)

3338 
	#GPIO_BSRR_BR_2
 ((
uöt32_t
)0x00040000)

	)

3339 
	#GPIO_BSRR_BR_3
 ((
uöt32_t
)0x00080000)

	)

3340 
	#GPIO_BSRR_BR_4
 ((
uöt32_t
)0x00100000)

	)

3341 
	#GPIO_BSRR_BR_5
 ((
uöt32_t
)0x00200000)

	)

3342 
	#GPIO_BSRR_BR_6
 ((
uöt32_t
)0x00400000)

	)

3343 
	#GPIO_BSRR_BR_7
 ((
uöt32_t
)0x00800000)

	)

3344 
	#GPIO_BSRR_BR_8
 ((
uöt32_t
)0x01000000)

	)

3345 
	#GPIO_BSRR_BR_9
 ((
uöt32_t
)0x02000000)

	)

3346 
	#GPIO_BSRR_BR_10
 ((
uöt32_t
)0x04000000)

	)

3347 
	#GPIO_BSRR_BR_11
 ((
uöt32_t
)0x08000000)

	)

3348 
	#GPIO_BSRR_BR_12
 ((
uöt32_t
)0x10000000)

	)

3349 
	#GPIO_BSRR_BR_13
 ((
uöt32_t
)0x20000000)

	)

3350 
	#GPIO_BSRR_BR_14
 ((
uöt32_t
)0x40000000)

	)

3351 
	#GPIO_BSRR_BR_15
 ((
uöt32_t
)0x80000000)

	)

3354 
	#GPIO_LCKR_LCK0
 ((
uöt32_t
)0x00000001)

	)

3355 
	#GPIO_LCKR_LCK1
 ((
uöt32_t
)0x00000002)

	)

3356 
	#GPIO_LCKR_LCK2
 ((
uöt32_t
)0x00000004)

	)

3357 
	#GPIO_LCKR_LCK3
 ((
uöt32_t
)0x00000008)

	)

3358 
	#GPIO_LCKR_LCK4
 ((
uöt32_t
)0x00000010)

	)

3359 
	#GPIO_LCKR_LCK5
 ((
uöt32_t
)0x00000020)

	)

3360 
	#GPIO_LCKR_LCK6
 ((
uöt32_t
)0x00000040)

	)

3361 
	#GPIO_LCKR_LCK7
 ((
uöt32_t
)0x00000080)

	)

3362 
	#GPIO_LCKR_LCK8
 ((
uöt32_t
)0x00000100)

	)

3363 
	#GPIO_LCKR_LCK9
 ((
uöt32_t
)0x00000200)

	)

3364 
	#GPIO_LCKR_LCK10
 ((
uöt32_t
)0x00000400)

	)

3365 
	#GPIO_LCKR_LCK11
 ((
uöt32_t
)0x00000800)

	)

3366 
	#GPIO_LCKR_LCK12
 ((
uöt32_t
)0x00001000)

	)

3367 
	#GPIO_LCKR_LCK13
 ((
uöt32_t
)0x00002000)

	)

3368 
	#GPIO_LCKR_LCK14
 ((
uöt32_t
)0x00004000)

	)

3369 
	#GPIO_LCKR_LCK15
 ((
uöt32_t
)0x00008000)

	)

3370 
	#GPIO_LCKR_LCKK
 ((
uöt32_t
)0x00010000)

	)

3373 
	#GPIO_AFRL_AFR0
 ((
uöt32_t
)0x0000000F)

	)

3374 
	#GPIO_AFRL_AFR1
 ((
uöt32_t
)0x000000F0)

	)

3375 
	#GPIO_AFRL_AFR2
 ((
uöt32_t
)0x00000F00)

	)

3376 
	#GPIO_AFRL_AFR3
 ((
uöt32_t
)0x0000F000)

	)

3377 
	#GPIO_AFRL_AFR4
 ((
uöt32_t
)0x000F0000)

	)

3378 
	#GPIO_AFRL_AFR5
 ((
uöt32_t
)0x00F00000)

	)

3379 
	#GPIO_AFRL_AFR6
 ((
uöt32_t
)0x0F000000)

	)

3380 
	#GPIO_AFRL_AFR7
 ((
uöt32_t
)0xF0000000)

	)

3383 
	#GPIO_AFRH_AFR8
 ((
uöt32_t
)0x0000000F)

	)

3384 
	#GPIO_AFRH_AFR9
 ((
uöt32_t
)0x000000F0)

	)

3385 
	#GPIO_AFRH_AFR10
 ((
uöt32_t
)0x00000F00)

	)

3386 
	#GPIO_AFRH_AFR11
 ((
uöt32_t
)0x0000F000)

	)

3387 
	#GPIO_AFRH_AFR12
 ((
uöt32_t
)0x000F0000)

	)

3388 
	#GPIO_AFRH_AFR13
 ((
uöt32_t
)0x00F00000)

	)

3389 
	#GPIO_AFRH_AFR14
 ((
uöt32_t
)0x0F000000)

	)

3390 
	#GPIO_AFRH_AFR15
 ((
uöt32_t
)0xF0000000)

	)

3393 
	#GPIO_AFRL_AFRL0
 
GPIO_AFRL_AFR0


	)

3394 
	#GPIO_AFRL_AFRL1
 
GPIO_AFRL_AFR1


	)

3395 
	#GPIO_AFRL_AFRL2
 
GPIO_AFRL_AFR2


	)

3396 
	#GPIO_AFRL_AFRL3
 
GPIO_AFRL_AFR3


	)

3397 
	#GPIO_AFRL_AFRL4
 
GPIO_AFRL_AFR4


	)

3398 
	#GPIO_AFRL_AFRL5
 
GPIO_AFRL_AFR5


	)

3399 
	#GPIO_AFRL_AFRL6
 
GPIO_AFRL_AFR6


	)

3400 
	#GPIO_AFRL_AFRL7
 
GPIO_AFRL_AFR7


	)

3403 
	#GPIO_AFRH_AFRH0
 
GPIO_AFRH_AFR8


	)

3404 
	#GPIO_AFRH_AFRH1
 
GPIO_AFRH_AFR9


	)

3405 
	#GPIO_AFRH_AFRH2
 
GPIO_AFRH_AFR10


	)

3406 
	#GPIO_AFRH_AFRH3
 
GPIO_AFRH_AFR11


	)

3407 
	#GPIO_AFRH_AFRH4
 
GPIO_AFRH_AFR12


	)

3408 
	#GPIO_AFRH_AFRH5
 
GPIO_AFRH_AFR13


	)

3409 
	#GPIO_AFRH_AFRH6
 
GPIO_AFRH_AFR14


	)

3410 
	#GPIO_AFRH_AFRH7
 
GPIO_AFRH_AFR15


	)

3413 
	#GPIO_BRR_BR_0
 ((
uöt32_t
)0x00000001)

	)

3414 
	#GPIO_BRR_BR_1
 ((
uöt32_t
)0x00000002)

	)

3415 
	#GPIO_BRR_BR_2
 ((
uöt32_t
)0x00000004)

	)

3416 
	#GPIO_BRR_BR_3
 ((
uöt32_t
)0x00000008)

	)

3417 
	#GPIO_BRR_BR_4
 ((
uöt32_t
)0x00000010)

	)

3418 
	#GPIO_BRR_BR_5
 ((
uöt32_t
)0x00000020)

	)

3419 
	#GPIO_BRR_BR_6
 ((
uöt32_t
)0x00000040)

	)

3420 
	#GPIO_BRR_BR_7
 ((
uöt32_t
)0x00000080)

	)

3421 
	#GPIO_BRR_BR_8
 ((
uöt32_t
)0x00000100)

	)

3422 
	#GPIO_BRR_BR_9
 ((
uöt32_t
)0x00000200)

	)

3423 
	#GPIO_BRR_BR_10
 ((
uöt32_t
)0x00000400)

	)

3424 
	#GPIO_BRR_BR_11
 ((
uöt32_t
)0x00000800)

	)

3425 
	#GPIO_BRR_BR_12
 ((
uöt32_t
)0x00001000)

	)

3426 
	#GPIO_BRR_BR_13
 ((
uöt32_t
)0x00002000)

	)

3427 
	#GPIO_BRR_BR_14
 ((
uöt32_t
)0x00004000)

	)

3428 
	#GPIO_BRR_BR_15
 ((
uöt32_t
)0x00008000)

	)

3437 
	#I2C_CR1_PE
 ((
uöt32_t
)0x00000001Ë

	)

3438 
	#I2C_CR1_TXIE
 ((
uöt32_t
)0x00000002Ë

	)

3439 
	#I2C_CR1_RXIE
 ((
uöt32_t
)0x00000004Ë

	)

3440 
	#I2C_CR1_ADDRIE
 ((
uöt32_t
)0x00000008Ë

	)

3441 
	#I2C_CR1_NACKIE
 ((
uöt32_t
)0x00000010Ë

	)

3442 
	#I2C_CR1_STOPIE
 ((
uöt32_t
)0x00000020Ë

	)

3443 
	#I2C_CR1_TCIE
 ((
uöt32_t
)0x00000040Ë

	)

3444 
	#I2C_CR1_ERRIE
 ((
uöt32_t
)0x00000080Ë

	)

3445 
	#I2C_CR1_DFN
 ((
uöt32_t
)0x00000F00Ë

	)

3446 
	#I2C_CR1_ANFOFF
 ((
uöt32_t
)0x00001000Ë

	)

3447 
	#I2C_CR1_SWRST
 ((
uöt32_t
)0x00002000Ë

	)

3448 
	#I2C_CR1_TXDMAEN
 ((
uöt32_t
)0x00004000Ë

	)

3449 
	#I2C_CR1_RXDMAEN
 ((
uöt32_t
)0x00008000Ë

	)

3450 
	#I2C_CR1_SBC
 ((
uöt32_t
)0x00010000Ë

	)

3451 
	#I2C_CR1_NOSTRETCH
 ((
uöt32_t
)0x00020000Ë

	)

3452 
	#I2C_CR1_WUPEN
 ((
uöt32_t
)0x00040000Ë

	)

3453 
	#I2C_CR1_GCEN
 ((
uöt32_t
)0x00080000Ë

	)

3454 
	#I2C_CR1_SMBHEN
 ((
uöt32_t
)0x00100000Ë

	)

3455 
	#I2C_CR1_SMBDEN
 ((
uöt32_t
)0x00200000Ë

	)

3456 
	#I2C_CR1_ALERTEN
 ((
uöt32_t
)0x00400000Ë

	)

3457 
	#I2C_CR1_PECEN
 ((
uöt32_t
)0x00800000Ë

	)

3460 
	#I2C_CR2_SADD
 ((
uöt32_t
)0x000003FFË

	)

3461 
	#I2C_CR2_RD_WRN
 ((
uöt32_t
)0x00000400Ë

	)

3462 
	#I2C_CR2_ADD10
 ((
uöt32_t
)0x00000800Ë

	)

3463 
	#I2C_CR2_HEAD10R
 ((
uöt32_t
)0x00001000Ë

	)

3464 
	#I2C_CR2_START
 ((
uöt32_t
)0x00002000Ë

	)

3465 
	#I2C_CR2_STOP
 ((
uöt32_t
)0x00004000Ë

	)

3466 
	#I2C_CR2_NACK
 ((
uöt32_t
)0x00008000Ë

	)

3467 
	#I2C_CR2_NBYTES
 ((
uöt32_t
)0x00FF0000Ë

	)

3468 
	#I2C_CR2_RELOAD
 ((
uöt32_t
)0x01000000Ë

	)

3469 
	#I2C_CR2_AUTOEND
 ((
uöt32_t
)0x02000000Ë

	)

3470 
	#I2C_CR2_PECBYTE
 ((
uöt32_t
)0x04000000Ë

	)

3473 
	#I2C_OAR1_OA1
 ((
uöt32_t
)0x000003FFË

	)

3474 
	#I2C_OAR1_OA1MODE
 ((
uöt32_t
)0x00000400Ë

	)

3475 
	#I2C_OAR1_OA1EN
 ((
uöt32_t
)0x00008000Ë

	)

3478 
	#I2C_OAR2_OA2
 ((
uöt32_t
)0x000000FEË

	)

3479 
	#I2C_OAR2_OA2MSK
 ((
uöt32_t
)0x00000700Ë

	)

3480 
	#I2C_OAR2_OA2EN
 ((
uöt32_t
)0x00008000Ë

	)

3483 
	#I2C_TIMINGR_SCLL
 ((
uöt32_t
)0x000000FFË

	)

3484 
	#I2C_TIMINGR_SCLH
 ((
uöt32_t
)0x0000FF00Ë

	)

3485 
	#I2C_TIMINGR_SDADEL
 ((
uöt32_t
)0x000F0000Ë

	)

3486 
	#I2C_TIMINGR_SCLDEL
 ((
uöt32_t
)0x00F00000Ë

	)

3487 
	#I2C_TIMINGR_PRESC
 ((
uöt32_t
)0xF0000000Ë

	)

3490 
	#I2C_TIMEOUTR_TIMEOUTA
 ((
uöt32_t
)0x00000FFFË

	)

3491 
	#I2C_TIMEOUTR_TIDLE
 ((
uöt32_t
)0x00001000Ë

	)

3492 
	#I2C_TIMEOUTR_TIMOUTEN
 ((
uöt32_t
)0x00008000Ë

	)

3493 
	#I2C_TIMEOUTR_TIMEOUTB
 ((
uöt32_t
)0x0FFF0000Ë

	)

3494 
	#I2C_TIMEOUTR_TEXTEN
 ((
uöt32_t
)0x80000000Ë

	)

3497 
	#I2C_ISR_TXE
 ((
uöt32_t
)0x00000001Ë

	)

3498 
	#I2C_ISR_TXIS
 ((
uöt32_t
)0x00000002Ë

	)

3499 
	#I2C_ISR_RXNE
 ((
uöt32_t
)0x00000004Ë

	)

3500 
	#I2C_ISR_ADDR
 ((
uöt32_t
)0x00000008Ë

	)

3501 
	#I2C_ISR_NACKF
 ((
uöt32_t
)0x00000010Ë

	)

3502 
	#I2C_ISR_STOPF
 ((
uöt32_t
)0x00000020Ë

	)

3503 
	#I2C_ISR_TC
 ((
uöt32_t
)0x00000040Ë

	)

3504 
	#I2C_ISR_TCR
 ((
uöt32_t
)0x00000080Ë

	)

3505 
	#I2C_ISR_BERR
 ((
uöt32_t
)0x00000100Ë

	)

3506 
	#I2C_ISR_ARLO
 ((
uöt32_t
)0x00000200Ë

	)

3507 
	#I2C_ISR_OVR
 ((
uöt32_t
)0x00000400Ë

	)

3508 
	#I2C_ISR_PECERR
 ((
uöt32_t
)0x00000800Ë

	)

3509 
	#I2C_ISR_TIMEOUT
 ((
uöt32_t
)0x00001000Ë

	)

3510 
	#I2C_ISR_ALERT
 ((
uöt32_t
)0x00002000Ë

	)

3511 
	#I2C_ISR_BUSY
 ((
uöt32_t
)0x00008000Ë

	)

3512 
	#I2C_ISR_DIR
 ((
uöt32_t
)0x00010000Ë

	)

3513 
	#I2C_ISR_ADDCODE
 ((
uöt32_t
)0x00FE0000Ë

	)

3516 
	#I2C_ICR_ADDRCF
 ((
uöt32_t
)0x00000008Ë

	)

3517 
	#I2C_ICR_NACKCF
 ((
uöt32_t
)0x00000010Ë

	)

3518 
	#I2C_ICR_STOPCF
 ((
uöt32_t
)0x00000020Ë

	)

3519 
	#I2C_ICR_BERRCF
 ((
uöt32_t
)0x00000100Ë

	)

3520 
	#I2C_ICR_ARLOCF
 ((
uöt32_t
)0x00000200Ë

	)

3521 
	#I2C_ICR_OVRCF
 ((
uöt32_t
)0x00000400Ë

	)

3522 
	#I2C_ICR_PECCF
 ((
uöt32_t
)0x00000800Ë

	)

3523 
	#I2C_ICR_TIMOUTCF
 ((
uöt32_t
)0x00001000Ë

	)

3524 
	#I2C_ICR_ALERTCF
 ((
uöt32_t
)0x00002000Ë

	)

3527 
	#I2C_PECR_PEC
 ((
uöt32_t
)0x000000FFË

	)

3530 
	#I2C_RXDR_RXDATA
 ((
uöt32_t
)0x000000FFË

	)

3533 
	#I2C_TXDR_TXDATA
 ((
uöt32_t
)0x000000FFË

	)

3541 
	#IWDG_KR_KEY
 ((
uöt16_t
)0xFFFFË

	)

3544 
	#IWDG_PR_PR
 ((
uöt8_t
)0x07Ë

	)

3545 
	#IWDG_PR_PR_0
 ((
uöt8_t
)0x01Ë

	)

3546 
	#IWDG_PR_PR_1
 ((
uöt8_t
)0x02Ë

	)

3547 
	#IWDG_PR_PR_2
 ((
uöt8_t
)0x04Ë

	)

3550 
	#IWDG_RLR_RL
 ((
uöt16_t
)0x0FFFË

	)

3553 
	#IWDG_SR_PVU
 ((
uöt8_t
)0x01Ë

	)

3554 
	#IWDG_SR_RVU
 ((
uöt8_t
)0x02Ë

	)

3555 
	#IWDG_SR_WVU
 ((
uöt8_t
)0x04Ë

	)

3558 
	#IWDG_WINR_WIN
 ((
uöt16_t
)0x0FFFË

	)

3567 
	#PWR_CR_LPDS
 ((
uöt16_t
)0x0001Ë

	)

3568 
	#PWR_CR_PDDS
 ((
uöt16_t
)0x0002Ë

	)

3569 
	#PWR_CR_CWUF
 ((
uöt16_t
)0x0004Ë

	)

3570 
	#PWR_CR_CSBF
 ((
uöt16_t
)0x0008Ë

	)

3571 
	#PWR_CR_PVDE
 ((
uöt16_t
)0x0010Ë

	)

3573 
	#PWR_CR_PLS
 ((
uöt16_t
)0x00E0Ë

	)

3574 
	#PWR_CR_PLS_0
 ((
uöt16_t
)0x0020Ë

	)

3575 
	#PWR_CR_PLS_1
 ((
uöt16_t
)0x0040Ë

	)

3576 
	#PWR_CR_PLS_2
 ((
uöt16_t
)0x0080Ë

	)

3578 
	#PWR_CR_PLS_LEV0
 ((
uöt16_t
)0x0000Ë

	)

3579 
	#PWR_CR_PLS_LEV1
 ((
uöt16_t
)0x0020Ë

	)

3580 
	#PWR_CR_PLS_LEV2
 ((
uöt16_t
)0x0040Ë

	)

3581 
	#PWR_CR_PLS_LEV3
 ((
uöt16_t
)0x0060Ë

	)

3582 
	#PWR_CR_PLS_LEV4
 ((
uöt16_t
)0x0080Ë

	)

3583 
	#PWR_CR_PLS_LEV5
 ((
uöt16_t
)0x00A0Ë

	)

3584 
	#PWR_CR_PLS_LEV6
 ((
uöt16_t
)0x00C0Ë

	)

3585 
	#PWR_CR_PLS_LEV7
 ((
uöt16_t
)0x00E0Ë

	)

3587 
	#PWR_CR_DBP
 ((
uöt16_t
)0x0100Ë

	)

3590 
	#PWR_CR_LPSDSR
 
PWR_CR_LPDS


	)

3593 
	#PWR_CSR_WUF
 ((
uöt16_t
)0x0001Ë

	)

3594 
	#PWR_CSR_SBF
 ((
uöt16_t
)0x0002Ë

	)

3595 
	#PWR_CSR_PVDO
 ((
uöt16_t
)0x0004Ë

	)

3596 
	#PWR_CSR_VREFINTRDY
 ((
uöt16_t
)0x0008Ë

	)

3598 
	#PWR_CSR_EWUP1
 ((
uöt16_t
)0x0100Ë

	)

3599 
	#PWR_CSR_EWUP2
 ((
uöt16_t
)0x0200Ë

	)

3600 
	#PWR_CSR_EWUP3
 ((
uöt16_t
)0x0400Ë

	)

3601 
	#PWR_CSR_EWUP4
 ((
uöt16_t
)0x0800Ë

	)

3602 
	#PWR_CSR_EWUP5
 ((
uöt16_t
)0x1000Ë

	)

3603 
	#PWR_CSR_EWUP6
 ((
uöt16_t
)0x2000Ë

	)

3604 
	#PWR_CSR_EWUP7
 ((
uöt16_t
)0x4000Ë

	)

3605 
	#PWR_CSR_EWUP8
 ((
uöt16_t
)0x8000Ë

	)

3608 
	#PWR_CSR_VREFINTRDYF
 
PWR_CSR_VREFINTRDY


	)

3616 
	#RCC_CR_HSION
 ((
uöt32_t
)0x00000001Ë

	)

3617 
	#RCC_CR_HSIRDY
 ((
uöt32_t
)0x00000002Ë

	)

3618 
	#RCC_CR_HSITRIM
 ((
uöt32_t
)0x000000F8Ë

	)

3619 
	#RCC_CR_HSICAL
 ((
uöt32_t
)0x0000FF00Ë

	)

3620 
	#RCC_CR_HSEON
 ((
uöt32_t
)0x00010000Ë

	)

3621 
	#RCC_CR_HSERDY
 ((
uöt32_t
)0x00020000Ë

	)

3622 
	#RCC_CR_HSEBYP
 ((
uöt32_t
)0x00040000Ë

	)

3623 
	#RCC_CR_CSSON
 ((
uöt32_t
)0x00080000Ë

	)

3624 
	#RCC_CR_PLLON
 ((
uöt32_t
)0x01000000Ë

	)

3625 
	#RCC_CR_PLLRDY
 ((
uöt32_t
)0x02000000Ë

	)

3628 
	#RCC_CFGR_SW
 ((
uöt32_t
)0x00000003Ë

	)

3629 
	#RCC_CFGR_SW_0
 ((
uöt32_t
)0x00000001Ë

	)

3630 
	#RCC_CFGR_SW_1
 ((
uöt32_t
)0x00000002Ë

	)

3632 
	#RCC_CFGR_SW_HSI
 ((
uöt32_t
)0x00000000Ë

	)

3633 
	#RCC_CFGR_SW_HSE
 ((
uöt32_t
)0x00000001Ë

	)

3634 
	#RCC_CFGR_SW_PLL
 ((
uöt32_t
)0x00000002Ë

	)

3635 
	#RCC_CFGR_SW_HSI48
 ((
uöt32_t
)0x00000003Ë

	)

3637 
	#RCC_CFGR_SWS
 ((
uöt32_t
)0x0000000CË

	)

3638 
	#RCC_CFGR_SWS_0
 ((
uöt32_t
)0x00000004Ë

	)

3639 
	#RCC_CFGR_SWS_1
 ((
uöt32_t
)0x00000008Ë

	)

3641 
	#RCC_CFGR_SWS_HSI
 ((
uöt32_t
)0x00000000Ë

	)

3642 
	#RCC_CFGR_SWS_HSE
 ((
uöt32_t
)0x00000004Ë

	)

3643 
	#RCC_CFGR_SWS_PLL
 ((
uöt32_t
)0x00000008Ë

	)

3644 
	#RCC_CFGR_SWS_HSI48
 ((
uöt32_t
)0x0000000CË

	)

3646 
	#RCC_CFGR_HPRE
 ((
uöt32_t
)0x000000F0Ë

	)

3647 
	#RCC_CFGR_HPRE_0
 ((
uöt32_t
)0x00000010Ë

	)

3648 
	#RCC_CFGR_HPRE_1
 ((
uöt32_t
)0x00000020Ë

	)

3649 
	#RCC_CFGR_HPRE_2
 ((
uöt32_t
)0x00000040Ë

	)

3650 
	#RCC_CFGR_HPRE_3
 ((
uöt32_t
)0x00000080Ë

	)

3652 
	#RCC_CFGR_HPRE_DIV1
 ((
uöt32_t
)0x00000000Ë

	)

3653 
	#RCC_CFGR_HPRE_DIV2
 ((
uöt32_t
)0x00000080Ë

	)

3654 
	#RCC_CFGR_HPRE_DIV4
 ((
uöt32_t
)0x00000090Ë

	)

3655 
	#RCC_CFGR_HPRE_DIV8
 ((
uöt32_t
)0x000000A0Ë

	)

3656 
	#RCC_CFGR_HPRE_DIV16
 ((
uöt32_t
)0x000000B0Ë

	)

3657 
	#RCC_CFGR_HPRE_DIV64
 ((
uöt32_t
)0x000000C0Ë

	)

3658 
	#RCC_CFGR_HPRE_DIV128
 ((
uöt32_t
)0x000000D0Ë

	)

3659 
	#RCC_CFGR_HPRE_DIV256
 ((
uöt32_t
)0x000000E0Ë

	)

3660 
	#RCC_CFGR_HPRE_DIV512
 ((
uöt32_t
)0x000000F0Ë

	)

3662 
	#RCC_CFGR_PPRE
 ((
uöt32_t
)0x00000700Ë

	)

3663 
	#RCC_CFGR_PPRE_0
 ((
uöt32_t
)0x00000100Ë

	)

3664 
	#RCC_CFGR_PPRE_1
 ((
uöt32_t
)0x00000200Ë

	)

3665 
	#RCC_CFGR_PPRE_2
 ((
uöt32_t
)0x00000400Ë

	)

3667 
	#RCC_CFGR_PPRE_DIV1
 ((
uöt32_t
)0x00000000Ë

	)

3668 
	#RCC_CFGR_PPRE_DIV2
 ((
uöt32_t
)0x00000400Ë

	)

3669 
	#RCC_CFGR_PPRE_DIV4
 ((
uöt32_t
)0x00000500Ë

	)

3670 
	#RCC_CFGR_PPRE_DIV8
 ((
uöt32_t
)0x00000600Ë

	)

3671 
	#RCC_CFGR_PPRE_DIV16
 ((
uöt32_t
)0x00000700Ë

	)

3673 
	#RCC_CFGR_ADCPRE
 ((
uöt32_t
)0x00004000Ë

	)

3676 
	#RCC_CFGR_PLLSRC
 ((
uöt32_t
)0x00018000Ë

	)

3677 
	#RCC_CFGR_PLLSRC_0
 ((
uöt32_t
)0x00008000Ë

	)

3678 
	#RCC_CFGR_PLLSRC_1
 ((
uöt32_t
)0x00010000Ë

	)

3680 
	#RCC_CFGR_PLLSRC_PREDIV1
 ((
uöt32_t
)0x00010000Ë

	)

3682 
	#RCC_CFGR_PLLSRC_HSI_DIV2
 ((
uöt32_t
)0x00000000Ë

	)

3683 
	#RCC_CFGR_PLLSRC_HSI_PREDIV
 ((
uöt32_t
)0x00008000Ë

	)

3685 
	#RCC_CFGR_PLLSRC_HSE_PREDIV
 ((
uöt32_t
)0x00010000Ë

	)

3686 
	#RCC_CFGR_PLLSRC_HSI48_PREDIV
 ((
uöt32_t
)0x00018000Ë

	)

3688 
	#RCC_CFGR_PLLXTPRE
 ((
uöt32_t
)0x00020000Ë

	)

3689 
	#RCC_CFGR_PLLXTPRE_PREDIV1
 ((
uöt32_t
)0x00000000Ë

	)

3690 
	#RCC_CFGR_PLLXTPRE_PREDIV1_Div2
 ((
uöt32_t
)0x00020000Ë

	)

3693 
	#RCC_CFGR_PLLSRC_HSI_Div2
 
RCC_CFGR_PLLSRC_HSI_DIV2


	)

3696 
	#RCC_CFGR_PLLMUL
 ((
uöt32_t
)0x003C0000Ë

	)

3697 
	#RCC_CFGR_PLLMUL_0
 ((
uöt32_t
)0x00040000Ë

	)

3698 
	#RCC_CFGR_PLLMUL_1
 ((
uöt32_t
)0x00080000Ë

	)

3699 
	#RCC_CFGR_PLLMUL_2
 ((
uöt32_t
)0x00100000Ë

	)

3700 
	#RCC_CFGR_PLLMUL_3
 ((
uöt32_t
)0x00200000Ë

	)

3702 
	#RCC_CFGR_PLLMUL2
 ((
uöt32_t
)0x00000000Ë

	)

3703 
	#RCC_CFGR_PLLMUL3
 ((
uöt32_t
)0x00040000Ë

	)

3704 
	#RCC_CFGR_PLLMUL4
 ((
uöt32_t
)0x00080000Ë

	)

3705 
	#RCC_CFGR_PLLMUL5
 ((
uöt32_t
)0x000C0000Ë

	)

3706 
	#RCC_CFGR_PLLMUL6
 ((
uöt32_t
)0x00100000Ë

	)

3707 
	#RCC_CFGR_PLLMUL7
 ((
uöt32_t
)0x00140000Ë

	)

3708 
	#RCC_CFGR_PLLMUL8
 ((
uöt32_t
)0x00180000Ë

	)

3709 
	#RCC_CFGR_PLLMUL9
 ((
uöt32_t
)0x001C0000Ë

	)

3710 
	#RCC_CFGR_PLLMUL10
 ((
uöt32_t
)0x00200000Ë

	)

3711 
	#RCC_CFGR_PLLMUL11
 ((
uöt32_t
)0x00240000Ë

	)

3712 
	#RCC_CFGR_PLLMUL12
 ((
uöt32_t
)0x00280000Ë

	)

3713 
	#RCC_CFGR_PLLMUL13
 ((
uöt32_t
)0x002C0000Ë

	)

3714 
	#RCC_CFGR_PLLMUL14
 ((
uöt32_t
)0x00300000Ë

	)

3715 
	#RCC_CFGR_PLLMUL15
 ((
uöt32_t
)0x00340000Ë

	)

3716 
	#RCC_CFGR_PLLMUL16
 ((
uöt32_t
)0x00380000Ë

	)

3719 
	#RCC_CFGR_PLLMULL
 
RCC_CFGR_PLLMUL


	)

3720 
	#RCC_CFGR_PLLMULL_0
 
RCC_CFGR_PLLMUL_0


	)

3721 
	#RCC_CFGR_PLLMULL_1
 
RCC_CFGR_PLLMUL_1


	)

3722 
	#RCC_CFGR_PLLMULL_2
 
RCC_CFGR_PLLMUL_2


	)

3723 
	#RCC_CFGR_PLLMULL_3
 
RCC_CFGR_PLLMUL_3


	)

3725 
	#RCC_CFGR_PLLMULL2
 
RCC_CFGR_PLLMUL2


	)

3726 
	#RCC_CFGR_PLLMULL3
 
RCC_CFGR_PLLMUL3


	)

3727 
	#RCC_CFGR_PLLMULL4
 
RCC_CFGR_PLLMUL4


	)

3728 
	#RCC_CFGR_PLLMULL5
 
RCC_CFGR_PLLMUL5


	)

3729 
	#RCC_CFGR_PLLMULL6
 
RCC_CFGR_PLLMUL6


	)

3730 
	#RCC_CFGR_PLLMULL7
 
RCC_CFGR_PLLMUL7


	)

3731 
	#RCC_CFGR_PLLMULL8
 
RCC_CFGR_PLLMUL8


	)

3732 
	#RCC_CFGR_PLLMULL9
 
RCC_CFGR_PLLMUL9


	)

3733 
	#RCC_CFGR_PLLMULL10
 
RCC_CFGR_PLLMUL10


	)

3734 
	#RCC_CFGR_PLLMULL11
 
RCC_CFGR_PLLMUL11


	)

3735 
	#RCC_CFGR_PLLMULL12
 
RCC_CFGR_PLLMUL12


	)

3736 
	#RCC_CFGR_PLLMULL13
 
RCC_CFGR_PLLMUL13


	)

3737 
	#RCC_CFGR_PLLMULL14
 
RCC_CFGR_PLLMUL14


	)

3738 
	#RCC_CFGR_PLLMULL15
 
RCC_CFGR_PLLMUL15


	)

3739 
	#RCC_CFGR_PLLMULL16
 
RCC_CFGR_PLLMUL16


	)

3741 
	#RCC_CFGR_MCO
 ((
uöt32_t
)0x0F000000Ë

	)

3742 
	#RCC_CFGR_MCO_0
 ((
uöt32_t
)0x01000000Ë

	)

3743 
	#RCC_CFGR_MCO_1
 ((
uöt32_t
)0x02000000Ë

	)

3744 
	#RCC_CFGR_MCO_2
 ((
uöt32_t
)0x04000000Ë

	)

3745 
	#RCC_CFGR_MCO_3
 ((
uöt32_t
)0x08000000Ë

	)

3747 
	#RCC_CFGR_MCO_NOCLOCK
 ((
uöt32_t
)0x00000000Ë

	)

3748 
	#RCC_CFGR_MCO_HSI14
 ((
uöt32_t
)0x01000000Ë

	)

3749 
	#RCC_CFGR_MCO_LSI
 ((
uöt32_t
)0x02000000Ë

	)

3750 
	#RCC_CFGR_MCO_LSE
 ((
uöt32_t
)0x03000000Ë

	)

3751 
	#RCC_CFGR_MCO_SYSCLK
 ((
uöt32_t
)0x04000000Ë

	)

3752 
	#RCC_CFGR_MCO_HSI
 ((
uöt32_t
)0x05000000Ë

	)

3753 
	#RCC_CFGR_MCO_HSE
 ((
uöt32_t
)0x06000000Ë

	)

3754 
	#RCC_CFGR_MCO_PLL
 ((
uöt32_t
)0x07000000Ë

	)

3755 
	#RCC_CFGR_MCO_HSI48
 ((
uöt32_t
)0x08000000Ë

	)

3757 
	#RCC_CFGR_MCO_PRE
 ((
uöt32_t
)0x70000000Ë

	)

3758 
	#RCC_CFGR_MCO_PRE_1
 ((
uöt32_t
)0x00000000Ë

	)

3759 
	#RCC_CFGR_MCO_PRE_2
 ((
uöt32_t
)0x10000000Ë

	)

3760 
	#RCC_CFGR_MCO_PRE_4
 ((
uöt32_t
)0x20000000Ë

	)

3761 
	#RCC_CFGR_MCO_PRE_8
 ((
uöt32_t
)0x30000000Ë

	)

3762 
	#RCC_CFGR_MCO_PRE_16
 ((
uöt32_t
)0x40000000Ë

	)

3763 
	#RCC_CFGR_MCO_PRE_32
 ((
uöt32_t
)0x50000000Ë

	)

3764 
	#RCC_CFGR_MCO_PRE_64
 ((
uöt32_t
)0x60000000Ë

	)

3765 
	#RCC_CFGR_MCO_PRE_128
 ((
uöt32_t
)0x70000000Ë

	)

3767 
	#RCC_CFGR_PLLNODIV
 ((
uöt32_t
)0x80000000Ë

	)

3770 
	#RCC_CIR_LSIRDYF
 ((
uöt32_t
)0x00000001Ë

	)

3771 
	#RCC_CIR_LSERDYF
 ((
uöt32_t
)0x00000002Ë

	)

3772 
	#RCC_CIR_HSIRDYF
 ((
uöt32_t
)0x00000004Ë

	)

3773 
	#RCC_CIR_HSERDYF
 ((
uöt32_t
)0x00000008Ë

	)

3774 
	#RCC_CIR_PLLRDYF
 ((
uöt32_t
)0x00000010Ë

	)

3775 
	#RCC_CIR_HSI14RDYF
 ((
uöt32_t
)0x00000020Ë

	)

3776 
	#RCC_CIR_HSI48RDYF
 ((
uöt32_t
)0x00000040Ë

	)

3777 
	#RCC_CIR_CSSF
 ((
uöt32_t
)0x00000080Ë

	)

3778 
	#RCC_CIR_LSIRDYIE
 ((
uöt32_t
)0x00000100Ë

	)

3779 
	#RCC_CIR_LSERDYIE
 ((
uöt32_t
)0x00000200Ë

	)

3780 
	#RCC_CIR_HSIRDYIE
 ((
uöt32_t
)0x00000400Ë

	)

3781 
	#RCC_CIR_HSERDYIE
 ((
uöt32_t
)0x00000800Ë

	)

3782 
	#RCC_CIR_PLLRDYIE
 ((
uöt32_t
)0x00001000Ë

	)

3783 
	#RCC_CIR_HSI14RDYIE
 ((
uöt32_t
)0x00002000Ë

	)

3784 
	#RCC_CIR_HSI48RDYIE
 ((
uöt32_t
)0x00004000Ë

	)

3785 
	#RCC_CIR_LSIRDYC
 ((
uöt32_t
)0x00010000Ë

	)

3786 
	#RCC_CIR_LSERDYC
 ((
uöt32_t
)0x00020000Ë

	)

3787 
	#RCC_CIR_HSIRDYC
 ((
uöt32_t
)0x00040000Ë

	)

3788 
	#RCC_CIR_HSERDYC
 ((
uöt32_t
)0x00080000Ë

	)

3789 
	#RCC_CIR_PLLRDYC
 ((
uöt32_t
)0x00100000Ë

	)

3790 
	#RCC_CIR_HSI14RDYC
 ((
uöt32_t
)0x00200000Ë

	)

3791 
	#RCC_CIR_HSI48RDYC
 ((
uöt32_t
)0x00400000Ë

	)

3792 
	#RCC_CIR_CSSC
 ((
uöt32_t
)0x00800000Ë

	)

3795 
	#RCC_APB2RSTR_SYSCFGRST
 ((
uöt32_t
)0x00000001Ë

	)

3796 
	#RCC_APB2RSTR_ADCRST
 ((
uöt32_t
)0x00000200Ë

	)

3797 
	#RCC_APB2RSTR_TIM1RST
 ((
uöt32_t
)0x00000800Ë

	)

3798 
	#RCC_APB2RSTR_SPI1RST
 ((
uöt32_t
)0x00001000Ë

	)

3799 
	#RCC_APB2RSTR_USART1RST
 ((
uöt32_t
)0x00004000Ë

	)

3800 
	#RCC_APB2RSTR_TIM15RST
 ((
uöt32_t
)0x00010000Ë

	)

3801 
	#RCC_APB2RSTR_TIM16RST
 ((
uöt32_t
)0x00020000Ë

	)

3802 
	#RCC_APB2RSTR_TIM17RST
 ((
uöt32_t
)0x00040000Ë

	)

3803 
	#RCC_APB2RSTR_DBGMCURST
 ((
uöt32_t
)0x00400000Ë

	)

3806 
	#RCC_APB2RSTR_ADC1RST
 
RCC_APB2RSTR_ADCRST


	)

3809 
	#RCC_APB1RSTR_TIM2RST
 ((
uöt32_t
)0x00000001Ë

	)

3810 
	#RCC_APB1RSTR_TIM3RST
 ((
uöt32_t
)0x00000002Ë

	)

3811 
	#RCC_APB1RSTR_TIM6RST
 ((
uöt32_t
)0x00000010Ë

	)

3812 
	#RCC_APB1RSTR_TIM7RST
 ((
uöt32_t
)0x00000020Ë

	)

3813 
	#RCC_APB1RSTR_TIM14RST
 ((
uöt32_t
)0x00000100Ë

	)

3814 
	#RCC_APB1RSTR_WWDGRST
 ((
uöt32_t
)0x00000800Ë

	)

3815 
	#RCC_APB1RSTR_SPI2RST
 ((
uöt32_t
)0x00004000Ë

	)

3816 
	#RCC_APB1RSTR_USART2RST
 ((
uöt32_t
)0x00020000Ë

	)

3817 
	#RCC_APB1RSTR_USART3RST
 ((
uöt32_t
)0x00040000Ë

	)

3818 
	#RCC_APB1RSTR_USART4RST
 ((
uöt32_t
)0x00080000Ë

	)

3819 
	#RCC_APB1RSTR_I2C1RST
 ((
uöt32_t
)0x00200000Ë

	)

3820 
	#RCC_APB1RSTR_I2C2RST
 ((
uöt32_t
)0x00400000Ë

	)

3821 
	#RCC_APB1RSTR_USBRST
 ((
uöt32_t
)0x00800000Ë

	)

3822 
	#RCC_APB1RSTR_CANRST
 ((
uöt32_t
)0x02000000Ë

	)

3823 
	#RCC_APB1RSTR_CRSRST
 ((
uöt32_t
)0x08000000Ë

	)

3824 
	#RCC_APB1RSTR_PWRRST
 ((
uöt32_t
)0x10000000Ë

	)

3825 
	#RCC_APB1RSTR_DACRST
 ((
uöt32_t
)0x20000000Ë

	)

3826 
	#RCC_APB1RSTR_CECRST
 ((
uöt32_t
)0x40000000Ë

	)

3829 
	#RCC_AHBENR_DMAEN
 ((
uöt32_t
)0x00000001Ë

	)

3830 
	#RCC_AHBENR_SRAMEN
 ((
uöt32_t
)0x00000004Ë

	)

3831 
	#RCC_AHBENR_FLITFEN
 ((
uöt32_t
)0x00000010Ë

	)

3832 
	#RCC_AHBENR_CRCEN
 ((
uöt32_t
)0x00000040Ë

	)

3833 
	#RCC_AHBENR_GPIOAEN
 ((
uöt32_t
)0x00020000Ë

	)

3834 
	#RCC_AHBENR_GPIOBEN
 ((
uöt32_t
)0x00040000Ë

	)

3835 
	#RCC_AHBENR_GPIOCEN
 ((
uöt32_t
)0x00080000Ë

	)

3836 
	#RCC_AHBENR_GPIODEN
 ((
uöt32_t
)0x00100000Ë

	)

3837 
	#RCC_AHBENR_GPIOEEN
 ((
uöt32_t
)0x00200000Ë

	)

3838 
	#RCC_AHBENR_GPIOFEN
 ((
uöt32_t
)0x00400000Ë

	)

3839 
	#RCC_AHBENR_TSCEN
 ((
uöt32_t
)0x01000000Ë

	)

3842 
	#RCC_AHBENR_DMA1EN
 
RCC_AHBENR_DMAEN


	)

3843 
	#RCC_AHBENR_TSEN
 
RCC_AHBENR_TSCEN


	)

3846 
	#RCC_APB2ENR_SYSCFGCOMPEN
 ((
uöt32_t
)0x00000001Ë

	)

3847 
	#RCC_APB2ENR_ADCEN
 ((
uöt32_t
)0x00000200Ë

	)

3848 
	#RCC_APB2ENR_TIM1EN
 ((
uöt32_t
)0x00000800Ë

	)

3849 
	#RCC_APB2ENR_SPI1EN
 ((
uöt32_t
)0x00001000Ë

	)

3850 
	#RCC_APB2ENR_USART1EN
 ((
uöt32_t
)0x00004000Ë

	)

3851 
	#RCC_APB2ENR_TIM15EN
 ((
uöt32_t
)0x00010000Ë

	)

3852 
	#RCC_APB2ENR_TIM16EN
 ((
uöt32_t
)0x00020000Ë

	)

3853 
	#RCC_APB2ENR_TIM17EN
 ((
uöt32_t
)0x00040000Ë

	)

3854 
	#RCC_APB2ENR_DBGMCUEN
 ((
uöt32_t
)0x00400000Ë

	)

3857 
	#RCC_APB2ENR_SYSCFGEN
 
RCC_APB2ENR_SYSCFGCOMPEN


	)

3858 
	#RCC_APB2ENR_ADC1EN
 
RCC_APB2ENR_ADCEN


	)

3861 
	#RCC_APB1ENR_TIM2EN
 ((
uöt32_t
)0x00000001Ë

	)

3862 
	#RCC_APB1ENR_TIM3EN
 ((
uöt32_t
)0x00000002Ë

	)

3863 
	#RCC_APB1ENR_TIM6EN
 ((
uöt32_t
)0x00000010Ë

	)

3864 
	#RCC_APB1ENR_TIM7EN
 ((
uöt32_t
)0x00000020Ë

	)

3865 
	#RCC_APB1ENR_TIM14EN
 ((
uöt32_t
)0x00000100Ë

	)

3866 
	#RCC_APB1ENR_WWDGEN
 ((
uöt32_t
)0x00000800Ë

	)

3867 
	#RCC_APB1ENR_SPI2EN
 ((
uöt32_t
)0x00004000Ë

	)

3868 
	#RCC_APB1ENR_USART2EN
 ((
uöt32_t
)0x00020000Ë

	)

3869 
	#RCC_APB1ENR_USART3EN
 ((
uöt32_t
)0x00040000Ë

	)

3870 
	#RCC_APB1ENR_USART4EN
 ((
uöt32_t
)0x00080000Ë

	)

3871 
	#RCC_APB1ENR_I2C1EN
 ((
uöt32_t
)0x00200000Ë

	)

3872 
	#RCC_APB1ENR_I2C2EN
 ((
uöt32_t
)0x00400000Ë

	)

3873 
	#RCC_APB1ENR_USBEN
 ((
uöt32_t
)0x00800000Ë

	)

3874 
	#RCC_APB1ENR_CANEN
 ((
uöt32_t
)0x02000000Ë

	)

3875 
	#RCC_APB1ENR_CRSEN
 ((
uöt32_t
)0x08000000Ë

	)

3876 
	#RCC_APB1ENR_PWREN
 ((
uöt32_t
)0x10000000Ë

	)

3877 
	#RCC_APB1ENR_DACEN
 ((
uöt32_t
)0x20000000Ë

	)

3878 
	#RCC_APB1ENR_CECEN
 ((
uöt32_t
)0x40000000Ë

	)

3881 
	#RCC_BDCR_LSEON
 ((
uöt32_t
)0x00000001Ë

	)

3882 
	#RCC_BDCR_LSERDY
 ((
uöt32_t
)0x00000002Ë

	)

3883 
	#RCC_BDCR_LSEBYP
 ((
uöt32_t
)0x00000004Ë

	)

3885 
	#RCC_BDCR_LSEDRV
 ((
uöt32_t
)0x00000018Ë

	)

3886 
	#RCC_BDCR_LSEDRV_0
 ((
uöt32_t
)0x00000008Ë

	)

3887 
	#RCC_BDCR_LSEDRV_1
 ((
uöt32_t
)0x00000010Ë

	)

3889 
	#RCC_BDCR_RTCSEL
 ((
uöt32_t
)0x00000300Ë

	)

3890 
	#RCC_BDCR_RTCSEL_0
 ((
uöt32_t
)0x00000100Ë

	)

3891 
	#RCC_BDCR_RTCSEL_1
 ((
uöt32_t
)0x00000200Ë

	)

3894 
	#RCC_BDCR_RTCSEL_NOCLOCK
 ((
uöt32_t
)0x00000000Ë

	)

3895 
	#RCC_BDCR_RTCSEL_LSE
 ((
uöt32_t
)0x00000100Ë

	)

3896 
	#RCC_BDCR_RTCSEL_LSI
 ((
uöt32_t
)0x00000200Ë

	)

3897 
	#RCC_BDCR_RTCSEL_HSE
 ((
uöt32_t
)0x00000300Ë

	)

3899 
	#RCC_BDCR_RTCEN
 ((
uöt32_t
)0x00008000Ë

	)

3900 
	#RCC_BDCR_BDRST
 ((
uöt32_t
)0x00010000Ë

	)

3903 
	#RCC_CSR_LSION
 ((
uöt32_t
)0x00000001Ë

	)

3904 
	#RCC_CSR_LSIRDY
 ((
uöt32_t
)0x00000002Ë

	)

3905 
	#RCC_CSR_V18PWRRSTF
 ((
uöt32_t
)0x00800000Ë

	)

3906 
	#RCC_CSR_RMVF
 ((
uöt32_t
)0x01000000Ë

	)

3907 
	#RCC_CSR_OBLRSTF
 ((
uöt32_t
)0x02000000Ë

	)

3908 
	#RCC_CSR_PINRSTF
 ((
uöt32_t
)0x04000000Ë

	)

3909 
	#RCC_CSR_PORRSTF
 ((
uöt32_t
)0x08000000Ë

	)

3910 
	#RCC_CSR_SFTRSTF
 ((
uöt32_t
)0x10000000Ë

	)

3911 
	#RCC_CSR_IWDGRSTF
 ((
uöt32_t
)0x20000000Ë

	)

3912 
	#RCC_CSR_WWDGRSTF
 ((
uöt32_t
)0x40000000Ë

	)

3913 
	#RCC_CSR_LPWRRSTF
 ((
uöt32_t
)0x80000000Ë

	)

3916 
	#RCC_CSR_OBL
 
RCC_CSR_OBLRSTF


	)

3918 
	#RCC_AHBRSTR_GPIOARST
 ((
uöt32_t
)0x00020000Ë

	)

3919 
	#RCC_AHBRSTR_GPIOBRST
 ((
uöt32_t
)0x00040000Ë

	)

3920 
	#RCC_AHBRSTR_GPIOCRST
 ((
uöt32_t
)0x00080000Ë

	)

3921 
	#RCC_AHBRSTR_GPIODRST
 ((
uöt32_t
)0x00010000Ë

	)

3922 
	#RCC_AHBRSTR_GPIOERST
 ((
uöt32_t
)0x00020000Ë

	)

3923 
	#RCC_AHBRSTR_GPIOFRST
 ((
uöt32_t
)0x00040000Ë

	)

3924 
	#RCC_AHBRSTR_TSCRST
 ((
uöt32_t
)0x00100000Ë

	)

3927 
	#RCC_AHBRSTR_TSRST
 
RCC_AHBRSTR_TSCRST


	)

3931 
	#RCC_CFGR2_PREDIV1
 ((
uöt32_t
)0x0000000FË

	)

3932 
	#RCC_CFGR2_PREDIV1_0
 ((
uöt32_t
)0x00000001Ë

	)

3933 
	#RCC_CFGR2_PREDIV1_1
 ((
uöt32_t
)0x00000002Ë

	)

3934 
	#RCC_CFGR2_PREDIV1_2
 ((
uöt32_t
)0x00000004Ë

	)

3935 
	#RCC_CFGR2_PREDIV1_3
 ((
uöt32_t
)0x00000008Ë

	)

3937 
	#RCC_CFGR2_PREDIV1_DIV1
 ((
uöt32_t
)0x00000000Ë

	)

3938 
	#RCC_CFGR2_PREDIV1_DIV2
 ((
uöt32_t
)0x00000001Ë

	)

3939 
	#RCC_CFGR2_PREDIV1_DIV3
 ((
uöt32_t
)0x00000002Ë

	)

3940 
	#RCC_CFGR2_PREDIV1_DIV4
 ((
uöt32_t
)0x00000003Ë

	)

3941 
	#RCC_CFGR2_PREDIV1_DIV5
 ((
uöt32_t
)0x00000004Ë

	)

3942 
	#RCC_CFGR2_PREDIV1_DIV6
 ((
uöt32_t
)0x00000005Ë

	)

3943 
	#RCC_CFGR2_PREDIV1_DIV7
 ((
uöt32_t
)0x00000006Ë

	)

3944 
	#RCC_CFGR2_PREDIV1_DIV8
 ((
uöt32_t
)0x00000007Ë

	)

3945 
	#RCC_CFGR2_PREDIV1_DIV9
 ((
uöt32_t
)0x00000008Ë

	)

3946 
	#RCC_CFGR2_PREDIV1_DIV10
 ((
uöt32_t
)0x00000009Ë

	)

3947 
	#RCC_CFGR2_PREDIV1_DIV11
 ((
uöt32_t
)0x0000000AË

	)

3948 
	#RCC_CFGR2_PREDIV1_DIV12
 ((
uöt32_t
)0x0000000BË

	)

3949 
	#RCC_CFGR2_PREDIV1_DIV13
 ((
uöt32_t
)0x0000000CË

	)

3950 
	#RCC_CFGR2_PREDIV1_DIV14
 ((
uöt32_t
)0x0000000DË

	)

3951 
	#RCC_CFGR2_PREDIV1_DIV15
 ((
uöt32_t
)0x0000000EË

	)

3952 
	#RCC_CFGR2_PREDIV1_DIV16
 ((
uöt32_t
)0x0000000FË

	)

3955 
	#RCC_CFGR3_USART1SW
 ((
uöt32_t
)0x00000003Ë

	)

3956 
	#RCC_CFGR3_USART1SW_0
 ((
uöt32_t
)0x00000001Ë

	)

3957 
	#RCC_CFGR3_USART1SW_1
 ((
uöt32_t
)0x00000002Ë

	)

3958 
	#RCC_CFGR3_I2C1SW
 ((
uöt32_t
)0x00000010Ë

	)

3959 
	#RCC_CFGR3_CECSW
 ((
uöt32_t
)0x00000040Ë

	)

3960 
	#RCC_CFGR3_USBSW
 ((
uöt32_t
)0x00000080Ë

	)

3961 
	#RCC_CFGR3_ADCSW
 ((
uöt32_t
)0x00000100Ë

	)

3962 
	#RCC_CFGR3_USART2SW
 ((
uöt32_t
)0x00030000Ë

	)

3963 
	#RCC_CFGR3_USART2SW_0
 ((
uöt32_t
)0x00010000Ë

	)

3964 
	#RCC_CFGR3_USART2SW_1
 ((
uöt32_t
)0x00020000Ë

	)

3967 
	#RCC_CR2_HSI14ON
 ((
uöt32_t
)0x00000001Ë

	)

3968 
	#RCC_CR2_HSI14RDY
 ((
uöt32_t
)0x00000002Ë

	)

3969 
	#RCC_CR2_HSI14DIS
 ((
uöt32_t
)0x00000004Ë

	)

3970 
	#RCC_CR2_HSI14TRIM
 ((
uöt32_t
)0x000000F8Ë

	)

3971 
	#RCC_CR2_HSI14CAL
 ((
uöt32_t
)0x0000FF00Ë

	)

3972 
	#RCC_CR2_HSI48ON
 ((
uöt32_t
)0x00010000Ë

	)

3973 
	#RCC_CR2_HSI48RDY
 ((
uöt32_t
)0x00020000Ë

	)

3974 
	#RCC_CR2_HSI48CAL
 ((
uöt32_t
)0xFF000000Ë

	)

3982 
	#RTC_TR_PM
 ((
uöt32_t
)0x00400000)

	)

3983 
	#RTC_TR_HT
 ((
uöt32_t
)0x00300000)

	)

3984 
	#RTC_TR_HT_0
 ((
uöt32_t
)0x00100000)

	)

3985 
	#RTC_TR_HT_1
 ((
uöt32_t
)0x00200000)

	)

3986 
	#RTC_TR_HU
 ((
uöt32_t
)0x000F0000)

	)

3987 
	#RTC_TR_HU_0
 ((
uöt32_t
)0x00010000)

	)

3988 
	#RTC_TR_HU_1
 ((
uöt32_t
)0x00020000)

	)

3989 
	#RTC_TR_HU_2
 ((
uöt32_t
)0x00040000)

	)

3990 
	#RTC_TR_HU_3
 ((
uöt32_t
)0x00080000)

	)

3991 
	#RTC_TR_MNT
 ((
uöt32_t
)0x00007000)

	)

3992 
	#RTC_TR_MNT_0
 ((
uöt32_t
)0x00001000)

	)

3993 
	#RTC_TR_MNT_1
 ((
uöt32_t
)0x00002000)

	)

3994 
	#RTC_TR_MNT_2
 ((
uöt32_t
)0x00004000)

	)

3995 
	#RTC_TR_MNU
 ((
uöt32_t
)0x00000F00)

	)

3996 
	#RTC_TR_MNU_0
 ((
uöt32_t
)0x00000100)

	)

3997 
	#RTC_TR_MNU_1
 ((
uöt32_t
)0x00000200)

	)

3998 
	#RTC_TR_MNU_2
 ((
uöt32_t
)0x00000400)

	)

3999 
	#RTC_TR_MNU_3
 ((
uöt32_t
)0x00000800)

	)

4000 
	#RTC_TR_ST
 ((
uöt32_t
)0x00000070)

	)

4001 
	#RTC_TR_ST_0
 ((
uöt32_t
)0x00000010)

	)

4002 
	#RTC_TR_ST_1
 ((
uöt32_t
)0x00000020)

	)

4003 
	#RTC_TR_ST_2
 ((
uöt32_t
)0x00000040)

	)

4004 
	#RTC_TR_SU
 ((
uöt32_t
)0x0000000F)

	)

4005 
	#RTC_TR_SU_0
 ((
uöt32_t
)0x00000001)

	)

4006 
	#RTC_TR_SU_1
 ((
uöt32_t
)0x00000002)

	)

4007 
	#RTC_TR_SU_2
 ((
uöt32_t
)0x00000004)

	)

4008 
	#RTC_TR_SU_3
 ((
uöt32_t
)0x00000008)

	)

4011 
	#RTC_DR_YT
 ((
uöt32_t
)0x00F00000)

	)

4012 
	#RTC_DR_YT_0
 ((
uöt32_t
)0x00100000)

	)

4013 
	#RTC_DR_YT_1
 ((
uöt32_t
)0x00200000)

	)

4014 
	#RTC_DR_YT_2
 ((
uöt32_t
)0x00400000)

	)

4015 
	#RTC_DR_YT_3
 ((
uöt32_t
)0x00800000)

	)

4016 
	#RTC_DR_YU
 ((
uöt32_t
)0x000F0000)

	)

4017 
	#RTC_DR_YU_0
 ((
uöt32_t
)0x00010000)

	)

4018 
	#RTC_DR_YU_1
 ((
uöt32_t
)0x00020000)

	)

4019 
	#RTC_DR_YU_2
 ((
uöt32_t
)0x00040000)

	)

4020 
	#RTC_DR_YU_3
 ((
uöt32_t
)0x00080000)

	)

4021 
	#RTC_DR_WDU
 ((
uöt32_t
)0x0000E000)

	)

4022 
	#RTC_DR_WDU_0
 ((
uöt32_t
)0x00002000)

	)

4023 
	#RTC_DR_WDU_1
 ((
uöt32_t
)0x00004000)

	)

4024 
	#RTC_DR_WDU_2
 ((
uöt32_t
)0x00008000)

	)

4025 
	#RTC_DR_MT
 ((
uöt32_t
)0x00001000)

	)

4026 
	#RTC_DR_MU
 ((
uöt32_t
)0x00000F00)

	)

4027 
	#RTC_DR_MU_0
 ((
uöt32_t
)0x00000100)

	)

4028 
	#RTC_DR_MU_1
 ((
uöt32_t
)0x00000200)

	)

4029 
	#RTC_DR_MU_2
 ((
uöt32_t
)0x00000400)

	)

4030 
	#RTC_DR_MU_3
 ((
uöt32_t
)0x00000800)

	)

4031 
	#RTC_DR_DT
 ((
uöt32_t
)0x00000030)

	)

4032 
	#RTC_DR_DT_0
 ((
uöt32_t
)0x00000010)

	)

4033 
	#RTC_DR_DT_1
 ((
uöt32_t
)0x00000020)

	)

4034 
	#RTC_DR_DU
 ((
uöt32_t
)0x0000000F)

	)

4035 
	#RTC_DR_DU_0
 ((
uöt32_t
)0x00000001)

	)

4036 
	#RTC_DR_DU_1
 ((
uöt32_t
)0x00000002)

	)

4037 
	#RTC_DR_DU_2
 ((
uöt32_t
)0x00000004)

	)

4038 
	#RTC_DR_DU_3
 ((
uöt32_t
)0x00000008)

	)

4041 
	#RTC_CR_COE
 ((
uöt32_t
)0x00800000)

	)

4042 
	#RTC_CR_OSEL
 ((
uöt32_t
)0x00600000)

	)

4043 
	#RTC_CR_OSEL_0
 ((
uöt32_t
)0x00200000)

	)

4044 
	#RTC_CR_OSEL_1
 ((
uöt32_t
)0x00400000)

	)

4045 
	#RTC_CR_POL
 ((
uöt32_t
)0x00100000)

	)

4046 
	#RTC_CR_COSEL
 ((
uöt32_t
)0x00080000)

	)

4047 
	#RTC_CR_BKP
 ((
uöt32_t
)0x00040000)

	)

4048 
	#RTC_CR_SUB1H
 ((
uöt32_t
)0x00020000)

	)

4049 
	#RTC_CR_ADD1H
 ((
uöt32_t
)0x00010000)

	)

4050 
	#RTC_CR_TSIE
 ((
uöt32_t
)0x00008000)

	)

4051 
	#RTC_CR_WUTIE
 ((
uöt32_t
)0x00004000)

	)

4052 
	#RTC_CR_ALRAIE
 ((
uöt32_t
)0x00001000)

	)

4053 
	#RTC_CR_TSE
 ((
uöt32_t
)0x00000800)

	)

4054 
	#RTC_CR_WUTE
 ((
uöt32_t
)0x00000400)

	)

4055 
	#RTC_CR_ALRAE
 ((
uöt32_t
)0x00000100)

	)

4056 
	#RTC_CR_FMT
 ((
uöt32_t
)0x00000040)

	)

4057 
	#RTC_CR_BYPSHAD
 ((
uöt32_t
)0x00000020)

	)

4058 
	#RTC_CR_REFCKON
 ((
uöt32_t
)0x00000010)

	)

4059 
	#RTC_CR_TSEDGE
 ((
uöt32_t
)0x00000008)

	)

4060 
	#RTC_CR_WUCKSEL
 ((
uöt32_t
)0x00000007)

	)

4061 
	#RTC_CR_WUCKSEL_0
 ((
uöt32_t
)0x00000001)

	)

4062 
	#RTC_CR_WUCKSEL_1
 ((
uöt32_t
)0x00000002)

	)

4063 
	#RTC_CR_WUCKSEL_2
 ((
uöt32_t
)0x00000004)

	)

4066 
	#RTC_CR_BCK
 
RTC_CR_BKP


	)

4067 
	#RTC_CR_CALSEL
 
RTC_CR_COSEL


	)

4070 
	#RTC_ISR_RECALPF
 ((
uöt32_t
)0x00010000)

	)

4071 
	#RTC_ISR_TAMP3F
 ((
uöt32_t
)0x00008000)

	)

4072 
	#RTC_ISR_TAMP2F
 ((
uöt32_t
)0x00004000)

	)

4073 
	#RTC_ISR_TAMP1F
 ((
uöt32_t
)0x00002000)

	)

4074 
	#RTC_ISR_TSOVF
 ((
uöt32_t
)0x00001000)

	)

4075 
	#RTC_ISR_TSF
 ((
uöt32_t
)0x00000800)

	)

4076 
	#RTC_ISR_WUTF
 ((
uöt32_t
)0x00000400)

	)

4077 
	#RTC_ISR_ALRAF
 ((
uöt32_t
)0x00000100)

	)

4078 
	#RTC_ISR_INIT
 ((
uöt32_t
)0x00000080)

	)

4079 
	#RTC_ISR_INITF
 ((
uöt32_t
)0x00000040)

	)

4080 
	#RTC_ISR_RSF
 ((
uöt32_t
)0x00000020)

	)

4081 
	#RTC_ISR_INITS
 ((
uöt32_t
)0x00000010)

	)

4082 
	#RTC_ISR_SHPF
 ((
uöt32_t
)0x00000008)

	)

4083 
	#RTC_ISR_WUTWF
 ((
uöt32_t
)0x00000004)

	)

4084 
	#RTC_ISR_ALRAWF
 ((
uöt32_t
)0x00000001)

	)

4087 
	#RTC_PRER_PREDIV_A
 ((
uöt32_t
)0x007F0000)

	)

4088 
	#RTC_PRER_PREDIV_S
 ((
uöt32_t
)0x00007FFF)

	)

4091 
	#RTC_WUTR_WUT
 ((
uöt32_t
)0x0000FFFF)

	)

4094 
	#RTC_ALRMAR_MSK4
 ((
uöt32_t
)0x80000000)

	)

4095 
	#RTC_ALRMAR_WDSEL
 ((
uöt32_t
)0x40000000)

	)

4096 
	#RTC_ALRMAR_DT
 ((
uöt32_t
)0x30000000)

	)

4097 
	#RTC_ALRMAR_DT_0
 ((
uöt32_t
)0x10000000)

	)

4098 
	#RTC_ALRMAR_DT_1
 ((
uöt32_t
)0x20000000)

	)

4099 
	#RTC_ALRMAR_DU
 ((
uöt32_t
)0x0F000000)

	)

4100 
	#RTC_ALRMAR_DU_0
 ((
uöt32_t
)0x01000000)

	)

4101 
	#RTC_ALRMAR_DU_1
 ((
uöt32_t
)0x02000000)

	)

4102 
	#RTC_ALRMAR_DU_2
 ((
uöt32_t
)0x04000000)

	)

4103 
	#RTC_ALRMAR_DU_3
 ((
uöt32_t
)0x08000000)

	)

4104 
	#RTC_ALRMAR_MSK3
 ((
uöt32_t
)0x00800000)

	)

4105 
	#RTC_ALRMAR_PM
 ((
uöt32_t
)0x00400000)

	)

4106 
	#RTC_ALRMAR_HT
 ((
uöt32_t
)0x00300000)

	)

4107 
	#RTC_ALRMAR_HT_0
 ((
uöt32_t
)0x00100000)

	)

4108 
	#RTC_ALRMAR_HT_1
 ((
uöt32_t
)0x00200000)

	)

4109 
	#RTC_ALRMAR_HU
 ((
uöt32_t
)0x000F0000)

	)

4110 
	#RTC_ALRMAR_HU_0
 ((
uöt32_t
)0x00010000)

	)

4111 
	#RTC_ALRMAR_HU_1
 ((
uöt32_t
)0x00020000)

	)

4112 
	#RTC_ALRMAR_HU_2
 ((
uöt32_t
)0x00040000)

	)

4113 
	#RTC_ALRMAR_HU_3
 ((
uöt32_t
)0x00080000)

	)

4114 
	#RTC_ALRMAR_MSK2
 ((
uöt32_t
)0x00008000)

	)

4115 
	#RTC_ALRMAR_MNT
 ((
uöt32_t
)0x00007000)

	)

4116 
	#RTC_ALRMAR_MNT_0
 ((
uöt32_t
)0x00001000)

	)

4117 
	#RTC_ALRMAR_MNT_1
 ((
uöt32_t
)0x00002000)

	)

4118 
	#RTC_ALRMAR_MNT_2
 ((
uöt32_t
)0x00004000)

	)

4119 
	#RTC_ALRMAR_MNU
 ((
uöt32_t
)0x00000F00)

	)

4120 
	#RTC_ALRMAR_MNU_0
 ((
uöt32_t
)0x00000100)

	)

4121 
	#RTC_ALRMAR_MNU_1
 ((
uöt32_t
)0x00000200)

	)

4122 
	#RTC_ALRMAR_MNU_2
 ((
uöt32_t
)0x00000400)

	)

4123 
	#RTC_ALRMAR_MNU_3
 ((
uöt32_t
)0x00000800)

	)

4124 
	#RTC_ALRMAR_MSK1
 ((
uöt32_t
)0x00000080)

	)

4125 
	#RTC_ALRMAR_ST
 ((
uöt32_t
)0x00000070)

	)

4126 
	#RTC_ALRMAR_ST_0
 ((
uöt32_t
)0x00000010)

	)

4127 
	#RTC_ALRMAR_ST_1
 ((
uöt32_t
)0x00000020)

	)

4128 
	#RTC_ALRMAR_ST_2
 ((
uöt32_t
)0x00000040)

	)

4129 
	#RTC_ALRMAR_SU
 ((
uöt32_t
)0x0000000F)

	)

4130 
	#RTC_ALRMAR_SU_0
 ((
uöt32_t
)0x00000001)

	)

4131 
	#RTC_ALRMAR_SU_1
 ((
uöt32_t
)0x00000002)

	)

4132 
	#RTC_ALRMAR_SU_2
 ((
uöt32_t
)0x00000004)

	)

4133 
	#RTC_ALRMAR_SU_3
 ((
uöt32_t
)0x00000008)

	)

4136 
	#RTC_WPR_KEY
 ((
uöt32_t
)0x000000FF)

	)

4139 
	#RTC_SSR_SS
 ((
uöt32_t
)0x0003FFFF)

	)

4142 
	#RTC_SHIFTR_SUBFS
 ((
uöt32_t
)0x00007FFF)

	)

4143 
	#RTC_SHIFTR_ADD1S
 ((
uöt32_t
)0x80000000)

	)

4146 
	#RTC_TSTR_PM
 ((
uöt32_t
)0x00400000)

	)

4147 
	#RTC_TSTR_HT
 ((
uöt32_t
)0x00300000)

	)

4148 
	#RTC_TSTR_HT_0
 ((
uöt32_t
)0x00100000)

	)

4149 
	#RTC_TSTR_HT_1
 ((
uöt32_t
)0x00200000)

	)

4150 
	#RTC_TSTR_HU
 ((
uöt32_t
)0x000F0000)

	)

4151 
	#RTC_TSTR_HU_0
 ((
uöt32_t
)0x00010000)

	)

4152 
	#RTC_TSTR_HU_1
 ((
uöt32_t
)0x00020000)

	)

4153 
	#RTC_TSTR_HU_2
 ((
uöt32_t
)0x00040000)

	)

4154 
	#RTC_TSTR_HU_3
 ((
uöt32_t
)0x00080000)

	)

4155 
	#RTC_TSTR_MNT
 ((
uöt32_t
)0x00007000)

	)

4156 
	#RTC_TSTR_MNT_0
 ((
uöt32_t
)0x00001000)

	)

4157 
	#RTC_TSTR_MNT_1
 ((
uöt32_t
)0x00002000)

	)

4158 
	#RTC_TSTR_MNT_2
 ((
uöt32_t
)0x00004000)

	)

4159 
	#RTC_TSTR_MNU
 ((
uöt32_t
)0x00000F00)

	)

4160 
	#RTC_TSTR_MNU_0
 ((
uöt32_t
)0x00000100)

	)

4161 
	#RTC_TSTR_MNU_1
 ((
uöt32_t
)0x00000200)

	)

4162 
	#RTC_TSTR_MNU_2
 ((
uöt32_t
)0x00000400)

	)

4163 
	#RTC_TSTR_MNU_3
 ((
uöt32_t
)0x00000800)

	)

4164 
	#RTC_TSTR_ST
 ((
uöt32_t
)0x00000070)

	)

4165 
	#RTC_TSTR_ST_0
 ((
uöt32_t
)0x00000010)

	)

4166 
	#RTC_TSTR_ST_1
 ((
uöt32_t
)0x00000020)

	)

4167 
	#RTC_TSTR_ST_2
 ((
uöt32_t
)0x00000040)

	)

4168 
	#RTC_TSTR_SU
 ((
uöt32_t
)0x0000000F)

	)

4169 
	#RTC_TSTR_SU_0
 ((
uöt32_t
)0x00000001)

	)

4170 
	#RTC_TSTR_SU_1
 ((
uöt32_t
)0x00000002)

	)

4171 
	#RTC_TSTR_SU_2
 ((
uöt32_t
)0x00000004)

	)

4172 
	#RTC_TSTR_SU_3
 ((
uöt32_t
)0x00000008)

	)

4175 
	#RTC_TSDR_WDU
 ((
uöt32_t
)0x0000E000)

	)

4176 
	#RTC_TSDR_WDU_0
 ((
uöt32_t
)0x00002000)

	)

4177 
	#RTC_TSDR_WDU_1
 ((
uöt32_t
)0x00004000)

	)

4178 
	#RTC_TSDR_WDU_2
 ((
uöt32_t
)0x00008000)

	)

4179 
	#RTC_TSDR_MT
 ((
uöt32_t
)0x00001000)

	)

4180 
	#RTC_TSDR_MU
 ((
uöt32_t
)0x00000F00)

	)

4181 
	#RTC_TSDR_MU_0
 ((
uöt32_t
)0x00000100)

	)

4182 
	#RTC_TSDR_MU_1
 ((
uöt32_t
)0x00000200)

	)

4183 
	#RTC_TSDR_MU_2
 ((
uöt32_t
)0x00000400)

	)

4184 
	#RTC_TSDR_MU_3
 ((
uöt32_t
)0x00000800)

	)

4185 
	#RTC_TSDR_DT
 ((
uöt32_t
)0x00000030)

	)

4186 
	#RTC_TSDR_DT_0
 ((
uöt32_t
)0x00000010)

	)

4187 
	#RTC_TSDR_DT_1
 ((
uöt32_t
)0x00000020)

	)

4188 
	#RTC_TSDR_DU
 ((
uöt32_t
)0x0000000F)

	)

4189 
	#RTC_TSDR_DU_0
 ((
uöt32_t
)0x00000001)

	)

4190 
	#RTC_TSDR_DU_1
 ((
uöt32_t
)0x00000002)

	)

4191 
	#RTC_TSDR_DU_2
 ((
uöt32_t
)0x00000004)

	)

4192 
	#RTC_TSDR_DU_3
 ((
uöt32_t
)0x00000008)

	)

4195 
	#RTC_TSSSR_SS
 ((
uöt32_t
)0x0003FFFF)

	)

4198 
	#RTC_CALR_CALP
 ((
uöt32_t
)0x00008000)

	)

4199 
	#RTC_CALR_CALW8
 ((
uöt32_t
)0x00004000)

	)

4200 
	#RTC_CALR_CALW16
 ((
uöt32_t
)0x00002000)

	)

4201 
	#RTC_CALR_CALM
 ((
uöt32_t
)0x000001FF)

	)

4202 
	#RTC_CALR_CALM_0
 ((
uöt32_t
)0x00000001)

	)

4203 
	#RTC_CALR_CALM_1
 ((
uöt32_t
)0x00000002)

	)

4204 
	#RTC_CALR_CALM_2
 ((
uöt32_t
)0x00000004)

	)

4205 
	#RTC_CALR_CALM_3
 ((
uöt32_t
)0x00000008)

	)

4206 
	#RTC_CALR_CALM_4
 ((
uöt32_t
)0x00000010)

	)

4207 
	#RTC_CALR_CALM_5
 ((
uöt32_t
)0x00000020)

	)

4208 
	#RTC_CALR_CALM_6
 ((
uöt32_t
)0x00000040)

	)

4209 
	#RTC_CALR_CALM_7
 ((
uöt32_t
)0x00000080)

	)

4210 
	#RTC_CALR_CALM_8
 ((
uöt32_t
)0x00000100)

	)

4213 
	#RTC_CAL_CALP
 
RTC_CALR_CALP


	)

4214 
	#RTC_CAL_CALW8
 
RTC_CALR_CALW8


	)

4215 
	#RTC_CAL_CALW16
 
RTC_CALR_CALW16


	)

4216 
	#RTC_CAL_CALM
 
RTC_CALR_CALM


	)

4217 
	#RTC_CAL_CALM_0
 
RTC_CALR_CALM_0


	)

4218 
	#RTC_CAL_CALM_1
 
RTC_CALR_CALM_1


	)

4219 
	#RTC_CAL_CALM_2
 
RTC_CALR_CALM_2


	)

4220 
	#RTC_CAL_CALM_3
 
RTC_CALR_CALM_3


	)

4221 
	#RTC_CAL_CALM_4
 
RTC_CALR_CALM_4


	)

4222 
	#RTC_CAL_CALM_5
 
RTC_CALR_CALM_5


	)

4223 
	#RTC_CAL_CALM_6
 
RTC_CALR_CALM_6


	)

4224 
	#RTC_CAL_CALM_7
 
RTC_CALR_CALM_7


	)

4225 
	#RTC_CAL_CALM_8
 
RTC_CALR_CALM_8


	)

4228 
	#RTC_TAFCR_PC15MODE
 ((
uöt32_t
)0x00800000)

	)

4229 
	#RTC_TAFCR_PC15VALUE
 ((
uöt32_t
)0x00400000)

	)

4230 
	#RTC_TAFCR_PC14MODE
 ((
uöt32_t
)0x00200000)

	)

4231 
	#RTC_TAFCR_PC14VALUE
 ((
uöt32_t
)0x00100000)

	)

4232 
	#RTC_TAFCR_PC13MODE
 ((
uöt32_t
)0x00080000)

	)

4233 
	#RTC_TAFCR_PC13VALUE
 ((
uöt32_t
)0x00040000)

	)

4234 
	#RTC_TAFCR_TAMPPUDIS
 ((
uöt32_t
)0x00008000)

	)

4235 
	#RTC_TAFCR_TAMPPRCH
 ((
uöt32_t
)0x00006000)

	)

4236 
	#RTC_TAFCR_TAMPPRCH_0
 ((
uöt32_t
)0x00002000)

	)

4237 
	#RTC_TAFCR_TAMPPRCH_1
 ((
uöt32_t
)0x00004000)

	)

4238 
	#RTC_TAFCR_TAMPFLT
 ((
uöt32_t
)0x00001800)

	)

4239 
	#RTC_TAFCR_TAMPFLT_0
 ((
uöt32_t
)0x00000800)

	)

4240 
	#RTC_TAFCR_TAMPFLT_1
 ((
uöt32_t
)0x00001000)

	)

4241 
	#RTC_TAFCR_TAMPFREQ
 ((
uöt32_t
)0x00000700)

	)

4242 
	#RTC_TAFCR_TAMPFREQ_0
 ((
uöt32_t
)0x00000100)

	)

4243 
	#RTC_TAFCR_TAMPFREQ_1
 ((
uöt32_t
)0x00000200)

	)

4244 
	#RTC_TAFCR_TAMPFREQ_2
 ((
uöt32_t
)0x00000400)

	)

4245 
	#RTC_TAFCR_TAMPTS
 ((
uöt32_t
)0x00000080)

	)

4246 
	#RTC_TAFCR_TAMP3EDGE
 ((
uöt32_t
)0x00000040)

	)

4247 
	#RTC_TAFCR_TAMP3E
 ((
uöt32_t
)0x00000020)

	)

4248 
	#RTC_TAFCR_TAMP2EDGE
 ((
uöt32_t
)0x00000010)

	)

4249 
	#RTC_TAFCR_TAMP2E
 ((
uöt32_t
)0x00000008)

	)

4250 
	#RTC_TAFCR_TAMPIE
 ((
uöt32_t
)0x00000004)

	)

4251 
	#RTC_TAFCR_TAMP1TRG
 ((
uöt32_t
)0x00000002)

	)

4252 
	#RTC_TAFCR_TAMP1E
 ((
uöt32_t
)0x00000001)

	)

4255 
	#RTC_TAFCR_ALARMOUTTYPE
 
RTC_TAFCR_PC13VALUE


	)

4258 
	#RTC_ALRMASSR_MASKSS
 ((
uöt32_t
)0x0F000000)

	)

4259 
	#RTC_ALRMASSR_MASKSS_0
 ((
uöt32_t
)0x01000000)

	)

4260 
	#RTC_ALRMASSR_MASKSS_1
 ((
uöt32_t
)0x02000000)

	)

4261 
	#RTC_ALRMASSR_MASKSS_2
 ((
uöt32_t
)0x04000000)

	)

4262 
	#RTC_ALRMASSR_MASKSS_3
 ((
uöt32_t
)0x08000000)

	)

4263 
	#RTC_ALRMASSR_SS
 ((
uöt32_t
)0x00007FFF)

	)

4266 
	#RTC_BKP0R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4269 
	#RTC_BKP1R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4272 
	#RTC_BKP2R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4275 
	#RTC_BKP3R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4278 
	#RTC_BKP4R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4286 
	#SPI_CR1_CPHA
 ((
uöt16_t
)0x0001Ë

	)

4287 
	#SPI_CR1_CPOL
 ((
uöt16_t
)0x0002Ë

	)

4288 
	#SPI_CR1_MSTR
 ((
uöt16_t
)0x0004Ë

	)

4289 
	#SPI_CR1_BR
 ((
uöt16_t
)0x0038Ë

	)

4290 
	#SPI_CR1_BR_0
 ((
uöt16_t
)0x0008Ë

	)

4291 
	#SPI_CR1_BR_1
 ((
uöt16_t
)0x0010Ë

	)

4292 
	#SPI_CR1_BR_2
 ((
uöt16_t
)0x0020Ë

	)

4293 
	#SPI_CR1_SPE
 ((
uöt16_t
)0x0040Ë

	)

4294 
	#SPI_CR1_LSBFIRST
 ((
uöt16_t
)0x0080Ë

	)

4295 
	#SPI_CR1_SSI
 ((
uöt16_t
)0x0100Ë

	)

4296 
	#SPI_CR1_SSM
 ((
uöt16_t
)0x0200Ë

	)

4297 
	#SPI_CR1_RXONLY
 ((
uöt16_t
)0x0400Ë

	)

4298 
	#SPI_CR1_CRCL
 ((
uöt16_t
)0x0800Ë

	)

4299 
	#SPI_CR1_CRCNEXT
 ((
uöt16_t
)0x1000Ë

	)

4300 
	#SPI_CR1_CRCEN
 ((
uöt16_t
)0x2000Ë

	)

4301 
	#SPI_CR1_BIDIOE
 ((
uöt16_t
)0x4000Ë

	)

4302 
	#SPI_CR1_BIDIMODE
 ((
uöt16_t
)0x8000Ë

	)

4305 
	#SPI_CR2_RXDMAEN
 ((
uöt16_t
)0x0001Ë

	)

4306 
	#SPI_CR2_TXDMAEN
 ((
uöt16_t
)0x0002Ë

	)

4307 
	#SPI_CR2_SSOE
 ((
uöt16_t
)0x0004Ë

	)

4308 
	#SPI_CR2_NSSP
 ((
uöt16_t
)0x0008Ë

	)

4309 
	#SPI_CR2_FRF
 ((
uöt16_t
)0x0010Ë

	)

4310 
	#SPI_CR2_ERRIE
 ((
uöt16_t
)0x0020Ë

	)

4311 
	#SPI_CR2_RXNEIE
 ((
uöt16_t
)0x0040Ë

	)

4312 
	#SPI_CR2_TXEIE
 ((
uöt16_t
)0x0080Ë

	)

4313 
	#SPI_CR2_DS
 ((
uöt16_t
)0x0F00Ë

	)

4314 
	#SPI_CR2_DS_0
 ((
uöt16_t
)0x0100Ë

	)

4315 
	#SPI_CR2_DS_1
 ((
uöt16_t
)0x0200Ë

	)

4316 
	#SPI_CR2_DS_2
 ((
uöt16_t
)0x0400Ë

	)

4317 
	#SPI_CR2_DS_3
 ((
uöt16_t
)0x0800Ë

	)

4318 
	#SPI_CR2_FRXTH
 ((
uöt16_t
)0x1000Ë

	)

4319 
	#SPI_CR2_LDMARX
 ((
uöt16_t
)0x2000Ë

	)

4320 
	#SPI_CR2_LDMATX
 ((
uöt16_t
)0x4000Ë

	)

4323 
	#SPI_SR_RXNE
 ((
uöt16_t
)0x0001Ë

	)

4324 
	#SPI_SR_TXE
 ((
uöt16_t
)0x0002Ë

	)

4325 
	#SPI_SR_CHSIDE
 ((
uöt16_t
)0x0004Ë

	)

4326 
	#SPI_SR_UDR
 ((
uöt16_t
)0x0008Ë

	)

4327 
	#SPI_SR_CRCERR
 ((
uöt16_t
)0x0010Ë

	)

4328 
	#SPI_SR_MODF
 ((
uöt16_t
)0x0020Ë

	)

4329 
	#SPI_SR_OVR
 ((
uöt16_t
)0x0040Ë

	)

4330 
	#SPI_SR_BSY
 ((
uöt16_t
)0x0080Ë

	)

4331 
	#SPI_SR_FRE
 ((
uöt16_t
)0x0100Ë

	)

4332 
	#SPI_SR_FRLVL
 ((
uöt16_t
)0x0600Ë

	)

4333 
	#SPI_SR_FRLVL_0
 ((
uöt16_t
)0x0200Ë

	)

4334 
	#SPI_SR_FRLVL_1
 ((
uöt16_t
)0x0400Ë

	)

4335 
	#SPI_SR_FTLVL
 ((
uöt16_t
)0x1800Ë

	)

4336 
	#SPI_SR_FTLVL_0
 ((
uöt16_t
)0x0800Ë

	)

4337 
	#SPI_SR_FTLVL_1
 ((
uöt16_t
)0x1000Ë

	)

4340 
	#SPI_DR_DR
 ((
uöt16_t
)0xFFFFË

	)

4343 
	#SPI_CRCPR_CRCPOLY
 ((
uöt16_t
)0xFFFFË

	)

4346 
	#SPI_RXCRCR_RXCRC
 ((
uöt16_t
)0xFFFFË

	)

4349 
	#SPI_TXCRCR_TXCRC
 ((
uöt16_t
)0xFFFFË

	)

4352 
	#SPI_I2SCFGR_CHLEN
 ((
uöt16_t
)0x0001Ë

	)

4353 
	#SPI_I2SCFGR_DATLEN
 ((
uöt16_t
)0x0006Ë

	)

4354 
	#SPI_I2SCFGR_DATLEN_0
 ((
uöt16_t
)0x0002Ë

	)

4355 
	#SPI_I2SCFGR_DATLEN_1
 ((
uöt16_t
)0x0004Ë

	)

4356 
	#SPI_I2SCFGR_CKPOL
 ((
uöt16_t
)0x0008Ë

	)

4357 
	#SPI_I2SCFGR_I2SSTD
 ((
uöt16_t
)0x0030Ë

	)

4358 
	#SPI_I2SCFGR_I2SSTD_0
 ((
uöt16_t
)0x0010Ë

	)

4359 
	#SPI_I2SCFGR_I2SSTD_1
 ((
uöt16_t
)0x0020Ë

	)

4360 
	#SPI_I2SCFGR_PCMSYNC
 ((
uöt16_t
)0x0080Ë

	)

4361 
	#SPI_I2SCFGR_I2SCFG
 ((
uöt16_t
)0x0300Ë

	)

4362 
	#SPI_I2SCFGR_I2SCFG_0
 ((
uöt16_t
)0x0100Ë

	)

4363 
	#SPI_I2SCFGR_I2SCFG_1
 ((
uöt16_t
)0x0200Ë

	)

4364 
	#SPI_I2SCFGR_I2SE
 ((
uöt16_t
)0x0400Ë

	)

4365 
	#SPI_I2SCFGR_I2SMOD
 ((
uöt16_t
)0x0800Ë

	)

4368 
	#SPI_I2SPR_I2SDIV
 ((
uöt16_t
)0x00FFË

	)

4369 
	#SPI_I2SPR_ODD
 ((
uöt16_t
)0x0100Ë

	)

4370 
	#SPI_I2SPR_MCKOE
 ((
uöt16_t
)0x0200Ë

	)

4378 
	#SYSCFG_CFGR1_MEM_MODE
 ((
uöt32_t
)0x00000003Ë

	)

4379 
	#SYSCFG_CFGR1_MEM_MODE_0
 ((
uöt32_t
)0x00000001Ë

	)

4380 
	#SYSCFG_CFGR1_MEM_MODE_1
 ((
uöt32_t
)0x00000002Ë

	)

4381 
	#SYSCFG_CFGR1_PA11_PA12_RMP
 ((
uöt32_t
)0x00000010Ë

	)

4382 
	#SYSCFG_CFGR1_ADC_DMA_RMP
 ((
uöt32_t
)0x00000100Ë

	)

4383 
	#SYSCFG_CFGR1_USART1TX_DMA_RMP
 ((
uöt32_t
)0x00000200Ë

	)

4384 
	#SYSCFG_CFGR1_USART1RX_DMA_RMP
 ((
uöt32_t
)0x00000400Ë

	)

4385 
	#SYSCFG_CFGR1_TIM16_DMA_RMP
 ((
uöt32_t
)0x00000800Ë

	)

4386 
	#SYSCFG_CFGR1_TIM17_DMA_RMP
 ((
uöt32_t
)0x00001000Ë

	)

4387 
	#SYSCFG_CFGR1_TIM16_DMA_RMP2
 ((
uöt32_t
)0x00002000Ë

	)

4388 
	#SYSCFG_CFGR1_TIM17_DMA_RMP2
 ((
uöt32_t
)0x00004000Ë

	)

4389 
	#SYSCFG_CFGR1_I2C_FMP_PB6
 ((
uöt32_t
)0x00010000Ë

	)

4390 
	#SYSCFG_CFGR1_I2C_FMP_PB7
 ((
uöt32_t
)0x00020000Ë

	)

4391 
	#SYSCFG_CFGR1_I2C_FMP_PB8
 ((
uöt32_t
)0x00040000Ë

	)

4392 
	#SYSCFG_CFGR1_I2C_FMP_PB9
 ((
uöt32_t
)0x00080000Ë

	)

4393 
	#SYSCFG_CFGR1_I2C_FMP_I2C1
 ((
uöt32_t
)0x00100000Ë

	)

4394 
	#SYSCFG_CFGR1_I2C_FMP_I2C2
 ((
uöt32_t
)0x00200000Ë

	)

4395 
	#SYSCFG_CFGR1_I2C_FMP_PA9
 ((
uöt32_t
)0x00400000Ë

	)

4396 
	#SYSCFG_CFGR1_I2C_FMP_PA10
 ((
uöt32_t
)0x00800000Ë

	)

4397 
	#SYSCFG_CFGR1_SPI2_DMA_RMP
 ((
uöt32_t
)0x01000000Ë

	)

4398 
	#SYSCFG_CFGR1_USART2_DMA_RMP
 ((
uöt32_t
)0x02000000Ë

	)

4399 
	#SYSCFG_CFGR1_USART3_DMA_RMP
 ((
uöt32_t
)0x04000000Ë

	)

4400 
	#SYSCFG_CFGR1_I2C1_DMA_RMP
 ((
uöt32_t
)0x08000000Ë

	)

4401 
	#SYSCFG_CFGR1_TIM1_DMA_RMP
 ((
uöt32_t
)0x10000000Ë

	)

4402 
	#SYSCFG_CFGR1_TIM2_DMA_RMP
 ((
uöt32_t
)0x20000000Ë

	)

4403 
	#SYSCFG_CFGR1_TIM3_DMA_RMP
 ((
uöt32_t
)0x40000000Ë

	)

4406 
	#SYSCFG_EXTICR1_EXTI0
 ((
uöt16_t
)0x000FË

	)

4407 
	#SYSCFG_EXTICR1_EXTI1
 ((
uöt16_t
)0x00F0Ë

	)

4408 
	#SYSCFG_EXTICR1_EXTI2
 ((
uöt16_t
)0x0F00Ë

	)

4409 
	#SYSCFG_EXTICR1_EXTI3
 ((
uöt16_t
)0xF000Ë

	)

4414 
	#SYSCFG_EXTICR1_EXTI0_PA
 ((
uöt16_t
)0x0000Ë

	)

4415 
	#SYSCFG_EXTICR1_EXTI0_PB
 ((
uöt16_t
)0x0001Ë

	)

4416 
	#SYSCFG_EXTICR1_EXTI0_PC
 ((
uöt16_t
)0x0002Ë

	)

4417 
	#SYSCFG_EXTICR1_EXTI0_PD
 ((
uöt16_t
)0x0003Ë

	)

4418 
	#SYSCFG_EXTICR1_EXTI0_PE
 ((
uöt16_t
)0x0004Ë

	)

4419 
	#SYSCFG_EXTICR1_EXTI0_PF
 ((
uöt16_t
)0x0005Ë

	)

4424 
	#SYSCFG_EXTICR1_EXTI1_PA
 ((
uöt16_t
)0x0000Ë

	)

4425 
	#SYSCFG_EXTICR1_EXTI1_PB
 ((
uöt16_t
)0x0010Ë

	)

4426 
	#SYSCFG_EXTICR1_EXTI1_PC
 ((
uöt16_t
)0x0020Ë

	)

4427 
	#SYSCFG_EXTICR1_EXTI1_PD
 ((
uöt16_t
)0x0030Ë

	)

4428 
	#SYSCFG_EXTICR1_EXTI1_PE
 ((
uöt16_t
)0x0040Ë

	)

4429 
	#SYSCFG_EXTICR1_EXTI1_PF
 ((
uöt16_t
)0x0050Ë

	)

4434 
	#SYSCFG_EXTICR1_EXTI2_PA
 ((
uöt16_t
)0x0000Ë

	)

4435 
	#SYSCFG_EXTICR1_EXTI2_PB
 ((
uöt16_t
)0x0100Ë

	)

4436 
	#SYSCFG_EXTICR1_EXTI2_PC
 ((
uöt16_t
)0x0200Ë

	)

4437 
	#SYSCFG_EXTICR1_EXTI2_PD
 ((
uöt16_t
)0x0300Ë

	)

4438 
	#SYSCFG_EXTICR1_EXTI2_PE
 ((
uöt16_t
)0x0400Ë

	)

4439 
	#SYSCFG_EXTICR1_EXTI2_PF
 ((
uöt16_t
)0x0500Ë

	)

4444 
	#SYSCFG_EXTICR1_EXTI3_PA
 ((
uöt16_t
)0x0000Ë

	)

4445 
	#SYSCFG_EXTICR1_EXTI3_PB
 ((
uöt16_t
)0x1000Ë

	)

4446 
	#SYSCFG_EXTICR1_EXTI3_PC
 ((
uöt16_t
)0x2000Ë

	)

4447 
	#SYSCFG_EXTICR1_EXTI3_PD
 ((
uöt16_t
)0x3000Ë

	)

4448 
	#SYSCFG_EXTICR1_EXTI3_PE
 ((
uöt16_t
)0x4000Ë

	)

4449 
	#SYSCFG_EXTICR1_EXTI3_PF
 ((
uöt16_t
)0x5000Ë

	)

4452 
	#SYSCFG_EXTICR2_EXTI4
 ((
uöt16_t
)0x000FË

	)

4453 
	#SYSCFG_EXTICR2_EXTI5
 ((
uöt16_t
)0x00F0Ë

	)

4454 
	#SYSCFG_EXTICR2_EXTI6
 ((
uöt16_t
)0x0F00Ë

	)

4455 
	#SYSCFG_EXTICR2_EXTI7
 ((
uöt16_t
)0xF000Ë

	)

4460 
	#SYSCFG_EXTICR2_EXTI4_PA
 ((
uöt16_t
)0x0000Ë

	)

4461 
	#SYSCFG_EXTICR2_EXTI4_PB
 ((
uöt16_t
)0x0001Ë

	)

4462 
	#SYSCFG_EXTICR2_EXTI4_PC
 ((
uöt16_t
)0x0002Ë

	)

4463 
	#SYSCFG_EXTICR2_EXTI4_PD
 ((
uöt16_t
)0x0003Ë

	)

4464 
	#SYSCFG_EXTICR2_EXTI4_PE
 ((
uöt16_t
)0x0004Ë

	)

4465 
	#SYSCFG_EXTICR2_EXTI4_PF
 ((
uöt16_t
)0x0005Ë

	)

4470 
	#SYSCFG_EXTICR2_EXTI5_PA
 ((
uöt16_t
)0x0000Ë

	)

4471 
	#SYSCFG_EXTICR2_EXTI5_PB
 ((
uöt16_t
)0x0010Ë

	)

4472 
	#SYSCFG_EXTICR2_EXTI5_PC
 ((
uöt16_t
)0x0020Ë

	)

4473 
	#SYSCFG_EXTICR2_EXTI5_PD
 ((
uöt16_t
)0x0030Ë

	)

4474 
	#SYSCFG_EXTICR2_EXTI5_PE
 ((
uöt16_t
)0x0040Ë

	)

4475 
	#SYSCFG_EXTICR2_EXTI5_PF
 ((
uöt16_t
)0x0050Ë

	)

4480 
	#SYSCFG_EXTICR2_EXTI6_PA
 ((
uöt16_t
)0x0000Ë

	)

4481 
	#SYSCFG_EXTICR2_EXTI6_PB
 ((
uöt16_t
)0x0100Ë

	)

4482 
	#SYSCFG_EXTICR2_EXTI6_PC
 ((
uöt16_t
)0x0200Ë

	)

4483 
	#SYSCFG_EXTICR2_EXTI6_PD
 ((
uöt16_t
)0x0300Ë

	)

4484 
	#SYSCFG_EXTICR2_EXTI6_PE
 ((
uöt16_t
)0x0400Ë

	)

4485 
	#SYSCFG_EXTICR2_EXTI6_PF
 ((
uöt16_t
)0x0500Ë

	)

4490 
	#SYSCFG_EXTICR2_EXTI7_PA
 ((
uöt16_t
)0x0000Ë

	)

4491 
	#SYSCFG_EXTICR2_EXTI7_PB
 ((
uöt16_t
)0x1000Ë

	)

4492 
	#SYSCFG_EXTICR2_EXTI7_PC
 ((
uöt16_t
)0x2000Ë

	)

4493 
	#SYSCFG_EXTICR2_EXTI7_PD
 ((
uöt16_t
)0x3000Ë

	)

4494 
	#SYSCFG_EXTICR2_EXTI7_PE
 ((
uöt16_t
)0x4000Ë

	)

4495 
	#SYSCFG_EXTICR2_EXTI7_PF
 ((
uöt16_t
)0x5000Ë

	)

4498 
	#SYSCFG_EXTICR3_EXTI8
 ((
uöt16_t
)0x000FË

	)

4499 
	#SYSCFG_EXTICR3_EXTI9
 ((
uöt16_t
)0x00F0Ë

	)

4500 
	#SYSCFG_EXTICR3_EXTI10
 ((
uöt16_t
)0x0F00Ë

	)

4501 
	#SYSCFG_EXTICR3_EXTI11
 ((
uöt16_t
)0xF000Ë

	)

4506 
	#SYSCFG_EXTICR3_EXTI8_PA
 ((
uöt16_t
)0x0000Ë

	)

4507 
	#SYSCFG_EXTICR3_EXTI8_PB
 ((
uöt16_t
)0x0001Ë

	)

4508 
	#SYSCFG_EXTICR3_EXTI8_PC
 ((
uöt16_t
)0x0002Ë

	)

4509 
	#SYSCFG_EXTICR3_EXTI8_PD
 ((
uöt16_t
)0x0003Ë

	)

4510 
	#SYSCFG_EXTICR3_EXTI8_PE
 ((
uöt16_t
)0x0004Ë

	)

4515 
	#SYSCFG_EXTICR3_EXTI9_PA
 ((
uöt16_t
)0x0000Ë

	)

4516 
	#SYSCFG_EXTICR3_EXTI9_PB
 ((
uöt16_t
)0x0010Ë

	)

4517 
	#SYSCFG_EXTICR3_EXTI9_PC
 ((
uöt16_t
)0x0020Ë

	)

4518 
	#SYSCFG_EXTICR3_EXTI9_PD
 ((
uöt16_t
)0x0030Ë

	)

4519 
	#SYSCFG_EXTICR3_EXTI9_PE
 ((
uöt16_t
)0x0040Ë

	)

4520 
	#SYSCFG_EXTICR3_EXTI9_PF
 ((
uöt16_t
)0x0050Ë

	)

4525 
	#SYSCFG_EXTICR3_EXTI10_PA
 ((
uöt16_t
)0x0000Ë

	)

4526 
	#SYSCFG_EXTICR3_EXTI10_PB
 ((
uöt16_t
)0x0100Ë

	)

4527 
	#SYSCFG_EXTICR3_EXTI10_PC
 ((
uöt16_t
)0x0200Ë

	)

4528 
	#SYSCFG_EXTICR3_EXTI10_PD
 ((
uöt16_t
)0x0300Ë

	)

4529 
	#SYSCFG_EXTICR3_EXTI10_PE
 ((
uöt16_t
)0x0400Ë

	)

4530 
	#SYSCFG_EXTICR3_EXTI10_PF
 ((
uöt16_t
)0x0500Ë

	)

4535 
	#SYSCFG_EXTICR3_EXTI11_PA
 ((
uöt16_t
)0x0000Ë

	)

4536 
	#SYSCFG_EXTICR3_EXTI11_PB
 ((
uöt16_t
)0x1000Ë

	)

4537 
	#SYSCFG_EXTICR3_EXTI11_PC
 ((
uöt16_t
)0x2000Ë

	)

4538 
	#SYSCFG_EXTICR3_EXTI11_PD
 ((
uöt16_t
)0x3000Ë

	)

4539 
	#SYSCFG_EXTICR3_EXTI11_PE
 ((
uöt16_t
)0x4000Ë

	)

4542 
	#SYSCFG_EXTICR4_EXTI12
 ((
uöt16_t
)0x000FË

	)

4543 
	#SYSCFG_EXTICR4_EXTI13
 ((
uöt16_t
)0x00F0Ë

	)

4544 
	#SYSCFG_EXTICR4_EXTI14
 ((
uöt16_t
)0x0F00Ë

	)

4545 
	#SYSCFG_EXTICR4_EXTI15
 ((
uöt16_t
)0xF000Ë

	)

4550 
	#SYSCFG_EXTICR4_EXTI12_PA
 ((
uöt16_t
)0x0000Ë

	)

4551 
	#SYSCFG_EXTICR4_EXTI12_PB
 ((
uöt16_t
)0x0001Ë

	)

4552 
	#SYSCFG_EXTICR4_EXTI12_PC
 ((
uöt16_t
)0x0002Ë

	)

4553 
	#SYSCFG_EXTICR4_EXTI12_PD
 ((
uöt16_t
)0x0003Ë

	)

4554 
	#SYSCFG_EXTICR4_EXTI12_PE
 ((
uöt16_t
)0x0004Ë

	)

4559 
	#SYSCFG_EXTICR4_EXTI13_PA
 ((
uöt16_t
)0x0000Ë

	)

4560 
	#SYSCFG_EXTICR4_EXTI13_PB
 ((
uöt16_t
)0x0010Ë

	)

4561 
	#SYSCFG_EXTICR4_EXTI13_PC
 ((
uöt16_t
)0x0020Ë

	)

4562 
	#SYSCFG_EXTICR4_EXTI13_PD
 ((
uöt16_t
)0x0030Ë

	)

4563 
	#SYSCFG_EXTICR4_EXTI13_PE
 ((
uöt16_t
)0x0040Ë

	)

4568 
	#SYSCFG_EXTICR4_EXTI14_PA
 ((
uöt16_t
)0x0000Ë

	)

4569 
	#SYSCFG_EXTICR4_EXTI14_PB
 ((
uöt16_t
)0x0100Ë

	)

4570 
	#SYSCFG_EXTICR4_EXTI14_PC
 ((
uöt16_t
)0x0200Ë

	)

4571 
	#SYSCFG_EXTICR4_EXTI14_PD
 ((
uöt16_t
)0x0300Ë

	)

4572 
	#SYSCFG_EXTICR4_EXTI14_PE
 ((
uöt16_t
)0x0400Ë

	)

4577 
	#SYSCFG_EXTICR4_EXTI15_PA
 ((
uöt16_t
)0x0000Ë

	)

4578 
	#SYSCFG_EXTICR4_EXTI15_PB
 ((
uöt16_t
)0x1000Ë

	)

4579 
	#SYSCFG_EXTICR4_EXTI15_PC
 ((
uöt16_t
)0x2000Ë

	)

4580 
	#SYSCFG_EXTICR4_EXTI15_PD
 ((
uöt16_t
)0x3000Ë

	)

4581 
	#SYSCFG_EXTICR4_EXTI15_PE
 ((
uöt16_t
)0x4000Ë

	)

4584 
	#SYSCFG_CFGR2_LOCKUP_LOCK
 ((
uöt32_t
)0x00000001Ë

	)

4585 
	#SYSCFG_CFGR2_SRAM_PARITY_LOCK
 ((
uöt32_t
)0x00000002Ë

	)

4586 
	#SYSCFG_CFGR2_PVD_LOCK
 ((
uöt32_t
)0x00000004Ë

	)

4587 
	#SYSCFG_CFGR2_SRAM_PEF
 ((
uöt32_t
)0x00000100Ë

	)

4590 
	#SYSCFG_CFGR2_SRAM_PE
 
SYSCFG_CFGR2_SRAM_PEF


	)

4597 
	#TIM_CR1_CEN
 ((
uöt16_t
)0x0001Ë

	)

4598 
	#TIM_CR1_UDIS
 ((
uöt16_t
)0x0002Ë

	)

4599 
	#TIM_CR1_URS
 ((
uöt16_t
)0x0004Ë

	)

4600 
	#TIM_CR1_OPM
 ((
uöt16_t
)0x0008Ë

	)

4601 
	#TIM_CR1_DIR
 ((
uöt16_t
)0x0010Ë

	)

4603 
	#TIM_CR1_CMS
 ((
uöt16_t
)0x0060Ë

	)

4604 
	#TIM_CR1_CMS_0
 ((
uöt16_t
)0x0020Ë

	)

4605 
	#TIM_CR1_CMS_1
 ((
uöt16_t
)0x0040Ë

	)

4607 
	#TIM_CR1_ARPE
 ((
uöt16_t
)0x0080Ë

	)

4609 
	#TIM_CR1_CKD
 ((
uöt16_t
)0x0300Ë

	)

4610 
	#TIM_CR1_CKD_0
 ((
uöt16_t
)0x0100Ë

	)

4611 
	#TIM_CR1_CKD_1
 ((
uöt16_t
)0x0200Ë

	)

4614 
	#TIM_CR2_CCPC
 ((
uöt16_t
)0x0001Ë

	)

4615 
	#TIM_CR2_CCUS
 ((
uöt16_t
)0x0004Ë

	)

4616 
	#TIM_CR2_CCDS
 ((
uöt16_t
)0x0008Ë

	)

4618 
	#TIM_CR2_MMS
 ((
uöt16_t
)0x0070Ë

	)

4619 
	#TIM_CR2_MMS_0
 ((
uöt16_t
)0x0010Ë

	)

4620 
	#TIM_CR2_MMS_1
 ((
uöt16_t
)0x0020Ë

	)

4621 
	#TIM_CR2_MMS_2
 ((
uöt16_t
)0x0040Ë

	)

4623 
	#TIM_CR2_TI1S
 ((
uöt16_t
)0x0080Ë

	)

4624 
	#TIM_CR2_OIS1
 ((
uöt16_t
)0x0100Ë

	)

4625 
	#TIM_CR2_OIS1N
 ((
uöt16_t
)0x0200Ë

	)

4626 
	#TIM_CR2_OIS2
 ((
uöt16_t
)0x0400Ë

	)

4627 
	#TIM_CR2_OIS2N
 ((
uöt16_t
)0x0800Ë

	)

4628 
	#TIM_CR2_OIS3
 ((
uöt16_t
)0x1000Ë

	)

4629 
	#TIM_CR2_OIS3N
 ((
uöt16_t
)0x2000Ë

	)

4630 
	#TIM_CR2_OIS4
 ((
uöt16_t
)0x4000Ë

	)

4633 
	#TIM_SMCR_SMS
 ((
uöt16_t
)0x0007Ë

	)

4634 
	#TIM_SMCR_SMS_0
 ((
uöt16_t
)0x0001Ë

	)

4635 
	#TIM_SMCR_SMS_1
 ((
uöt16_t
)0x0002Ë

	)

4636 
	#TIM_SMCR_SMS_2
 ((
uöt16_t
)0x0004Ë

	)

4638 
	#TIM_SMCR_OCCS
 ((
uöt16_t
)0x0008Ë

	)

4640 
	#TIM_SMCR_TS
 ((
uöt16_t
)0x0070Ë

	)

4641 
	#TIM_SMCR_TS_0
 ((
uöt16_t
)0x0010Ë

	)

4642 
	#TIM_SMCR_TS_1
 ((
uöt16_t
)0x0020Ë

	)

4643 
	#TIM_SMCR_TS_2
 ((
uöt16_t
)0x0040Ë

	)

4645 
	#TIM_SMCR_MSM
 ((
uöt16_t
)0x0080Ë

	)

4647 
	#TIM_SMCR_ETF
 ((
uöt16_t
)0x0F00Ë

	)

4648 
	#TIM_SMCR_ETF_0
 ((
uöt16_t
)0x0100Ë

	)

4649 
	#TIM_SMCR_ETF_1
 ((
uöt16_t
)0x0200Ë

	)

4650 
	#TIM_SMCR_ETF_2
 ((
uöt16_t
)0x0400Ë

	)

4651 
	#TIM_SMCR_ETF_3
 ((
uöt16_t
)0x0800Ë

	)

4653 
	#TIM_SMCR_ETPS
 ((
uöt16_t
)0x3000Ë

	)

4654 
	#TIM_SMCR_ETPS_0
 ((
uöt16_t
)0x1000Ë

	)

4655 
	#TIM_SMCR_ETPS_1
 ((
uöt16_t
)0x2000Ë

	)

4657 
	#TIM_SMCR_ECE
 ((
uöt16_t
)0x4000Ë

	)

4658 
	#TIM_SMCR_ETP
 ((
uöt16_t
)0x8000Ë

	)

4661 
	#TIM_DIER_UIE
 ((
uöt16_t
)0x0001Ë

	)

4662 
	#TIM_DIER_CC1IE
 ((
uöt16_t
)0x0002Ë

	)

4663 
	#TIM_DIER_CC2IE
 ((
uöt16_t
)0x0004Ë

	)

4664 
	#TIM_DIER_CC3IE
 ((
uöt16_t
)0x0008Ë

	)

4665 
	#TIM_DIER_CC4IE
 ((
uöt16_t
)0x0010Ë

	)

4666 
	#TIM_DIER_COMIE
 ((
uöt16_t
)0x0020Ë

	)

4667 
	#TIM_DIER_TIE
 ((
uöt16_t
)0x0040Ë

	)

4668 
	#TIM_DIER_BIE
 ((
uöt16_t
)0x0080Ë

	)

4669 
	#TIM_DIER_UDE
 ((
uöt16_t
)0x0100Ë

	)

4670 
	#TIM_DIER_CC1DE
 ((
uöt16_t
)0x0200Ë

	)

4671 
	#TIM_DIER_CC2DE
 ((
uöt16_t
)0x0400Ë

	)

4672 
	#TIM_DIER_CC3DE
 ((
uöt16_t
)0x0800Ë

	)

4673 
	#TIM_DIER_CC4DE
 ((
uöt16_t
)0x1000Ë

	)

4674 
	#TIM_DIER_COMDE
 ((
uöt16_t
)0x2000Ë

	)

4675 
	#TIM_DIER_TDE
 ((
uöt16_t
)0x4000Ë

	)

4678 
	#TIM_SR_UIF
 ((
uöt16_t
)0x0001Ë

	)

4679 
	#TIM_SR_CC1IF
 ((
uöt16_t
)0x0002Ë

	)

4680 
	#TIM_SR_CC2IF
 ((
uöt16_t
)0x0004Ë

	)

4681 
	#TIM_SR_CC3IF
 ((
uöt16_t
)0x0008Ë

	)

4682 
	#TIM_SR_CC4IF
 ((
uöt16_t
)0x0010Ë

	)

4683 
	#TIM_SR_COMIF
 ((
uöt16_t
)0x0020Ë

	)

4684 
	#TIM_SR_TIF
 ((
uöt16_t
)0x0040Ë

	)

4685 
	#TIM_SR_BIF
 ((
uöt16_t
)0x0080Ë

	)

4686 
	#TIM_SR_CC1OF
 ((
uöt16_t
)0x0200Ë

	)

4687 
	#TIM_SR_CC2OF
 ((
uöt16_t
)0x0400Ë

	)

4688 
	#TIM_SR_CC3OF
 ((
uöt16_t
)0x0800Ë

	)

4689 
	#TIM_SR_CC4OF
 ((
uöt16_t
)0x1000Ë

	)

4692 
	#TIM_EGR_UG
 ((
uöt8_t
)0x01Ë

	)

4693 
	#TIM_EGR_CC1G
 ((
uöt8_t
)0x02Ë

	)

4694 
	#TIM_EGR_CC2G
 ((
uöt8_t
)0x04Ë

	)

4695 
	#TIM_EGR_CC3G
 ((
uöt8_t
)0x08Ë

	)

4696 
	#TIM_EGR_CC4G
 ((
uöt8_t
)0x10Ë

	)

4697 
	#TIM_EGR_COMG
 ((
uöt8_t
)0x20Ë

	)

4698 
	#TIM_EGR_TG
 ((
uöt8_t
)0x40Ë

	)

4699 
	#TIM_EGR_BG
 ((
uöt8_t
)0x80Ë

	)

4702 
	#TIM_CCMR1_CC1S
 ((
uöt16_t
)0x0003Ë

	)

4703 
	#TIM_CCMR1_CC1S_0
 ((
uöt16_t
)0x0001Ë

	)

4704 
	#TIM_CCMR1_CC1S_1
 ((
uöt16_t
)0x0002Ë

	)

4706 
	#TIM_CCMR1_OC1FE
 ((
uöt16_t
)0x0004Ë

	)

4707 
	#TIM_CCMR1_OC1PE
 ((
uöt16_t
)0x0008Ë

	)

4709 
	#TIM_CCMR1_OC1M
 ((
uöt16_t
)0x0070Ë

	)

4710 
	#TIM_CCMR1_OC1M_0
 ((
uöt16_t
)0x0010Ë

	)

4711 
	#TIM_CCMR1_OC1M_1
 ((
uöt16_t
)0x0020Ë

	)

4712 
	#TIM_CCMR1_OC1M_2
 ((
uöt16_t
)0x0040Ë

	)

4714 
	#TIM_CCMR1_OC1CE
 ((
uöt16_t
)0x0080Ë

	)

4716 
	#TIM_CCMR1_CC2S
 ((
uöt16_t
)0x0300Ë

	)

4717 
	#TIM_CCMR1_CC2S_0
 ((
uöt16_t
)0x0100Ë

	)

4718 
	#TIM_CCMR1_CC2S_1
 ((
uöt16_t
)0x0200Ë

	)

4720 
	#TIM_CCMR1_OC2FE
 ((
uöt16_t
)0x0400Ë

	)

4721 
	#TIM_CCMR1_OC2PE
 ((
uöt16_t
)0x0800Ë

	)

4723 
	#TIM_CCMR1_OC2M
 ((
uöt16_t
)0x7000Ë

	)

4724 
	#TIM_CCMR1_OC2M_0
 ((
uöt16_t
)0x1000Ë

	)

4725 
	#TIM_CCMR1_OC2M_1
 ((
uöt16_t
)0x2000Ë

	)

4726 
	#TIM_CCMR1_OC2M_2
 ((
uöt16_t
)0x4000Ë

	)

4728 
	#TIM_CCMR1_OC2CE
 ((
uöt16_t
)0x8000Ë

	)

4732 
	#TIM_CCMR1_IC1PSC
 ((
uöt16_t
)0x000CË

	)

4733 
	#TIM_CCMR1_IC1PSC_0
 ((
uöt16_t
)0x0004Ë

	)

4734 
	#TIM_CCMR1_IC1PSC_1
 ((
uöt16_t
)0x0008Ë

	)

4736 
	#TIM_CCMR1_IC1F
 ((
uöt16_t
)0x00F0Ë

	)

4737 
	#TIM_CCMR1_IC1F_0
 ((
uöt16_t
)0x0010Ë

	)

4738 
	#TIM_CCMR1_IC1F_1
 ((
uöt16_t
)0x0020Ë

	)

4739 
	#TIM_CCMR1_IC1F_2
 ((
uöt16_t
)0x0040Ë

	)

4740 
	#TIM_CCMR1_IC1F_3
 ((
uöt16_t
)0x0080Ë

	)

4742 
	#TIM_CCMR1_IC2PSC
 ((
uöt16_t
)0x0C00Ë

	)

4743 
	#TIM_CCMR1_IC2PSC_0
 ((
uöt16_t
)0x0400Ë

	)

4744 
	#TIM_CCMR1_IC2PSC_1
 ((
uöt16_t
)0x0800Ë

	)

4746 
	#TIM_CCMR1_IC2F
 ((
uöt16_t
)0xF000Ë

	)

4747 
	#TIM_CCMR1_IC2F_0
 ((
uöt16_t
)0x1000Ë

	)

4748 
	#TIM_CCMR1_IC2F_1
 ((
uöt16_t
)0x2000Ë

	)

4749 
	#TIM_CCMR1_IC2F_2
 ((
uöt16_t
)0x4000Ë

	)

4750 
	#TIM_CCMR1_IC2F_3
 ((
uöt16_t
)0x8000Ë

	)

4753 
	#TIM_CCMR2_CC3S
 ((
uöt16_t
)0x0003Ë

	)

4754 
	#TIM_CCMR2_CC3S_0
 ((
uöt16_t
)0x0001Ë

	)

4755 
	#TIM_CCMR2_CC3S_1
 ((
uöt16_t
)0x0002Ë

	)

4757 
	#TIM_CCMR2_OC3FE
 ((
uöt16_t
)0x0004Ë

	)

4758 
	#TIM_CCMR2_OC3PE
 ((
uöt16_t
)0x0008Ë

	)

4760 
	#TIM_CCMR2_OC3M
 ((
uöt16_t
)0x0070Ë

	)

4761 
	#TIM_CCMR2_OC3M_0
 ((
uöt16_t
)0x0010Ë

	)

4762 
	#TIM_CCMR2_OC3M_1
 ((
uöt16_t
)0x0020Ë

	)

4763 
	#TIM_CCMR2_OC3M_2
 ((
uöt16_t
)0x0040Ë

	)

4765 
	#TIM_CCMR2_OC3CE
 ((
uöt16_t
)0x0080Ë

	)

4767 
	#TIM_CCMR2_CC4S
 ((
uöt16_t
)0x0300Ë

	)

4768 
	#TIM_CCMR2_CC4S_0
 ((
uöt16_t
)0x0100Ë

	)

4769 
	#TIM_CCMR2_CC4S_1
 ((
uöt16_t
)0x0200Ë

	)

4771 
	#TIM_CCMR2_OC4FE
 ((
uöt16_t
)0x0400Ë

	)

4772 
	#TIM_CCMR2_OC4PE
 ((
uöt16_t
)0x0800Ë

	)

4774 
	#TIM_CCMR2_OC4M
 ((
uöt16_t
)0x7000Ë

	)

4775 
	#TIM_CCMR2_OC4M_0
 ((
uöt16_t
)0x1000Ë

	)

4776 
	#TIM_CCMR2_OC4M_1
 ((
uöt16_t
)0x2000Ë

	)

4777 
	#TIM_CCMR2_OC4M_2
 ((
uöt16_t
)0x4000Ë

	)

4779 
	#TIM_CCMR2_OC4CE
 ((
uöt16_t
)0x8000Ë

	)

4783 
	#TIM_CCMR2_IC3PSC
 ((
uöt16_t
)0x000CË

	)

4784 
	#TIM_CCMR2_IC3PSC_0
 ((
uöt16_t
)0x0004Ë

	)

4785 
	#TIM_CCMR2_IC3PSC_1
 ((
uöt16_t
)0x0008Ë

	)

4787 
	#TIM_CCMR2_IC3F
 ((
uöt16_t
)0x00F0Ë

	)

4788 
	#TIM_CCMR2_IC3F_0
 ((
uöt16_t
)0x0010Ë

	)

4789 
	#TIM_CCMR2_IC3F_1
 ((
uöt16_t
)0x0020Ë

	)

4790 
	#TIM_CCMR2_IC3F_2
 ((
uöt16_t
)0x0040Ë

	)

4791 
	#TIM_CCMR2_IC3F_3
 ((
uöt16_t
)0x0080Ë

	)

4793 
	#TIM_CCMR2_IC4PSC
 ((
uöt16_t
)0x0C00Ë

	)

4794 
	#TIM_CCMR2_IC4PSC_0
 ((
uöt16_t
)0x0400Ë

	)

4795 
	#TIM_CCMR2_IC4PSC_1
 ((
uöt16_t
)0x0800Ë

	)

4797 
	#TIM_CCMR2_IC4F
 ((
uöt16_t
)0xF000Ë

	)

4798 
	#TIM_CCMR2_IC4F_0
 ((
uöt16_t
)0x1000Ë

	)

4799 
	#TIM_CCMR2_IC4F_1
 ((
uöt16_t
)0x2000Ë

	)

4800 
	#TIM_CCMR2_IC4F_2
 ((
uöt16_t
)0x4000Ë

	)

4801 
	#TIM_CCMR2_IC4F_3
 ((
uöt16_t
)0x8000Ë

	)

4804 
	#TIM_CCER_CC1E
 ((
uöt16_t
)0x0001Ë

	)

4805 
	#TIM_CCER_CC1P
 ((
uöt16_t
)0x0002Ë

	)

4806 
	#TIM_CCER_CC1NE
 ((
uöt16_t
)0x0004Ë

	)

4807 
	#TIM_CCER_CC1NP
 ((
uöt16_t
)0x0008Ë

	)

4808 
	#TIM_CCER_CC2E
 ((
uöt16_t
)0x0010Ë

	)

4809 
	#TIM_CCER_CC2P
 ((
uöt16_t
)0x0020Ë

	)

4810 
	#TIM_CCER_CC2NE
 ((
uöt16_t
)0x0040Ë

	)

4811 
	#TIM_CCER_CC2NP
 ((
uöt16_t
)0x0080Ë

	)

4812 
	#TIM_CCER_CC3E
 ((
uöt16_t
)0x0100Ë

	)

4813 
	#TIM_CCER_CC3P
 ((
uöt16_t
)0x0200Ë

	)

4814 
	#TIM_CCER_CC3NE
 ((
uöt16_t
)0x0400Ë

	)

4815 
	#TIM_CCER_CC3NP
 ((
uöt16_t
)0x0800Ë

	)

4816 
	#TIM_CCER_CC4E
 ((
uöt16_t
)0x1000Ë

	)

4817 
	#TIM_CCER_CC4P
 ((
uöt16_t
)0x2000Ë

	)

4818 
	#TIM_CCER_CC4NP
 ((
uöt16_t
)0x8000Ë

	)

4821 
	#TIM_CNT_CNT
 ((
uöt16_t
)0xFFFFË

	)

4824 
	#TIM_PSC_PSC
 ((
uöt16_t
)0xFFFFË

	)

4827 
	#TIM_ARR_ARR
 ((
uöt16_t
)0xFFFFË

	)

4830 
	#TIM_RCR_REP
 ((
uöt8_t
)0xFFË

	)

4833 
	#TIM_CCR1_CCR1
 ((
uöt16_t
)0xFFFFË

	)

4836 
	#TIM_CCR2_CCR2
 ((
uöt16_t
)0xFFFFË

	)

4839 
	#TIM_CCR3_CCR3
 ((
uöt16_t
)0xFFFFË

	)

4842 
	#TIM_CCR4_CCR4
 ((
uöt16_t
)0xFFFFË

	)

4845 
	#TIM_BDTR_DTG
 ((
uöt16_t
)0x00FFË

	)

4846 
	#TIM_BDTR_DTG_0
 ((
uöt16_t
)0x0001Ë

	)

4847 
	#TIM_BDTR_DTG_1
 ((
uöt16_t
)0x0002Ë

	)

4848 
	#TIM_BDTR_DTG_2
 ((
uöt16_t
)0x0004Ë

	)

4849 
	#TIM_BDTR_DTG_3
 ((
uöt16_t
)0x0008Ë

	)

4850 
	#TIM_BDTR_DTG_4
 ((
uöt16_t
)0x0010Ë

	)

4851 
	#TIM_BDTR_DTG_5
 ((
uöt16_t
)0x0020Ë

	)

4852 
	#TIM_BDTR_DTG_6
 ((
uöt16_t
)0x0040Ë

	)

4853 
	#TIM_BDTR_DTG_7
 ((
uöt16_t
)0x0080Ë

	)

4855 
	#TIM_BDTR_LOCK
 ((
uöt16_t
)0x0300Ë

	)

4856 
	#TIM_BDTR_LOCK_0
 ((
uöt16_t
)0x0100Ë

	)

4857 
	#TIM_BDTR_LOCK_1
 ((
uöt16_t
)0x0200Ë

	)

4859 
	#TIM_BDTR_OSSI
 ((
uöt16_t
)0x0400Ë

	)

4860 
	#TIM_BDTR_OSSR
 ((
uöt16_t
)0x0800Ë

	)

4861 
	#TIM_BDTR_BKE
 ((
uöt16_t
)0x1000Ë

	)

4862 
	#TIM_BDTR_BKP
 ((
uöt16_t
)0x2000Ë

	)

4863 
	#TIM_BDTR_AOE
 ((
uöt16_t
)0x4000Ë

	)

4864 
	#TIM_BDTR_MOE
 ((
uöt16_t
)0x8000Ë

	)

4867 
	#TIM_DCR_DBA
 ((
uöt16_t
)0x001FË

	)

4868 
	#TIM_DCR_DBA_0
 ((
uöt16_t
)0x0001Ë

	)

4869 
	#TIM_DCR_DBA_1
 ((
uöt16_t
)0x0002Ë

	)

4870 
	#TIM_DCR_DBA_2
 ((
uöt16_t
)0x0004Ë

	)

4871 
	#TIM_DCR_DBA_3
 ((
uöt16_t
)0x0008Ë

	)

4872 
	#TIM_DCR_DBA_4
 ((
uöt16_t
)0x0010Ë

	)

4874 
	#TIM_DCR_DBL
 ((
uöt16_t
)0x1F00Ë

	)

4875 
	#TIM_DCR_DBL_0
 ((
uöt16_t
)0x0100Ë

	)

4876 
	#TIM_DCR_DBL_1
 ((
uöt16_t
)0x0200Ë

	)

4877 
	#TIM_DCR_DBL_2
 ((
uöt16_t
)0x0400Ë

	)

4878 
	#TIM_DCR_DBL_3
 ((
uöt16_t
)0x0800Ë

	)

4879 
	#TIM_DCR_DBL_4
 ((
uöt16_t
)0x1000Ë

	)

4882 
	#TIM_DMAR_DMAB
 ((
uöt16_t
)0xFFFFË

	)

4885 
	#TIM14_OR_TI1_RMP
 ((
uöt16_t
)0x0003Ë

	)

4886 
	#TIM14_OR_TI1_RMP_0
 ((
uöt16_t
)0x0001Ë

	)

4887 
	#TIM14_OR_TI1_RMP_1
 ((
uöt16_t
)0x0002Ë

	)

4896 
	#USART_CR1_UE
 ((
uöt32_t
)0x00000001Ë

	)

4897 
	#USART_CR1_UESM
 ((
uöt32_t
)0x00000002Ë

	)

4898 
	#USART_CR1_RE
 ((
uöt32_t
)0x00000004Ë

	)

4899 
	#USART_CR1_TE
 ((
uöt32_t
)0x00000008Ë

	)

4900 
	#USART_CR1_IDLEIE
 ((
uöt32_t
)0x00000010Ë

	)

4901 
	#USART_CR1_RXNEIE
 ((
uöt32_t
)0x00000020Ë

	)

4902 
	#USART_CR1_TCIE
 ((
uöt32_t
)0x00000040Ë

	)

4903 
	#USART_CR1_TXEIE
 ((
uöt32_t
)0x00000080Ë

	)

4904 
	#USART_CR1_PEIE
 ((
uöt32_t
)0x00000100Ë

	)

4905 
	#USART_CR1_PS
 ((
uöt32_t
)0x00000200Ë

	)

4906 
	#USART_CR1_PCE
 ((
uöt32_t
)0x00000400Ë

	)

4907 
	#USART_CR1_WAKE
 ((
uöt32_t
)0x00000800Ë

	)

4908 
	#USART_CR1_M
 ((
uöt32_t
)0x00001000Ë

	)

4909 
	#USART_CR1_MME
 ((
uöt32_t
)0x00002000Ë

	)

4910 
	#USART_CR1_CMIE
 ((
uöt32_t
)0x00004000Ë

	)

4911 
	#USART_CR1_OVER8
 ((
uöt32_t
)0x00008000Ë

	)

4912 
	#USART_CR1_DEDT
 ((
uöt32_t
)0x001F0000Ë

	)

4913 
	#USART_CR1_DEDT_0
 ((
uöt32_t
)0x00010000Ë

	)

4914 
	#USART_CR1_DEDT_1
 ((
uöt32_t
)0x00020000Ë

	)

4915 
	#USART_CR1_DEDT_2
 ((
uöt32_t
)0x00040000Ë

	)

4916 
	#USART_CR1_DEDT_3
 ((
uöt32_t
)0x00080000Ë

	)

4917 
	#USART_CR1_DEDT_4
 ((
uöt32_t
)0x00100000Ë

	)

4918 
	#USART_CR1_DEAT
 ((
uöt32_t
)0x03E00000Ë

	)

4919 
	#USART_CR1_DEAT_0
 ((
uöt32_t
)0x00200000Ë

	)

4920 
	#USART_CR1_DEAT_1
 ((
uöt32_t
)0x00400000Ë

	)

4921 
	#USART_CR1_DEAT_2
 ((
uöt32_t
)0x00800000Ë

	)

4922 
	#USART_CR1_DEAT_3
 ((
uöt32_t
)0x01000000Ë

	)

4923 
	#USART_CR1_DEAT_4
 ((
uöt32_t
)0x02000000Ë

	)

4924 
	#USART_CR1_RTOIE
 ((
uöt32_t
)0x04000000Ë

	)

4925 
	#USART_CR1_EOBIE
 ((
uöt32_t
)0x08000000Ë

	)

4928 
	#USART_CR2_ADDM7
 ((
uöt32_t
)0x00000010Ë

	)

4929 
	#USART_CR2_LBDL
 ((
uöt32_t
)0x00000020Ë

	)

4930 
	#USART_CR2_LBDIE
 ((
uöt32_t
)0x00000040Ë

	)

4931 
	#USART_CR2_LBCL
 ((
uöt32_t
)0x00000100Ë

	)

4932 
	#USART_CR2_CPHA
 ((
uöt32_t
)0x00000200Ë

	)

4933 
	#USART_CR2_CPOL
 ((
uöt32_t
)0x00000400Ë

	)

4934 
	#USART_CR2_CLKEN
 ((
uöt32_t
)0x00000800Ë

	)

4935 
	#USART_CR2_STOP
 ((
uöt32_t
)0x00003000Ë

	)

4936 
	#USART_CR2_STOP_0
 ((
uöt32_t
)0x00001000Ë

	)

4937 
	#USART_CR2_STOP_1
 ((
uöt32_t
)0x00002000Ë

	)

4938 
	#USART_CR2_LINEN
 ((
uöt32_t
)0x00004000Ë

	)

4939 
	#USART_CR2_SWAP
 ((
uöt32_t
)0x00008000Ë

	)

4940 
	#USART_CR2_RXINV
 ((
uöt32_t
)0x00010000Ë

	)

4941 
	#USART_CR2_TXINV
 ((
uöt32_t
)0x00020000Ë

	)

4942 
	#USART_CR2_DATAINV
 ((
uöt32_t
)0x00040000Ë

	)

4943 
	#USART_CR2_MSBFIRST
 ((
uöt32_t
)0x00080000Ë

	)

4944 
	#USART_CR2_ABREN
 ((
uöt32_t
)0x00100000Ë

	)

4945 
	#USART_CR2_ABRMODE
 ((
uöt32_t
)0x00600000Ë

	)

4946 
	#USART_CR2_ABRMODE_0
 ((
uöt32_t
)0x00200000Ë

	)

4947 
	#USART_CR2_ABRMODE_1
 ((
uöt32_t
)0x00400000Ë

	)

4948 
	#USART_CR2_RTOEN
 ((
uöt32_t
)0x00800000Ë

	)

4949 
	#USART_CR2_ADD
 ((
uöt32_t
)0xFF000000Ë

	)

4952 
	#USART_CR3_EIE
 ((
uöt32_t
)0x00000001Ë

	)

4953 
	#USART_CR3_IREN
 ((
uöt32_t
)0x00000002Ë

	)

4954 
	#USART_CR3_IRLP
 ((
uöt32_t
)0x00000004Ë

	)

4955 
	#USART_CR3_HDSEL
 ((
uöt32_t
)0x00000008Ë

	)

4956 
	#USART_CR3_NACK
 ((
uöt32_t
)0x00000010Ë

	)

4957 
	#USART_CR3_SCEN
 ((
uöt32_t
)0x00000020Ë

	)

4958 
	#USART_CR3_DMAR
 ((
uöt32_t
)0x00000040Ë

	)

4959 
	#USART_CR3_DMAT
 ((
uöt32_t
)0x00000080Ë

	)

4960 
	#USART_CR3_RTSE
 ((
uöt32_t
)0x00000100Ë

	)

4961 
	#USART_CR3_CTSE
 ((
uöt32_t
)0x00000200Ë

	)

4962 
	#USART_CR3_CTSIE
 ((
uöt32_t
)0x00000400Ë

	)

4963 
	#USART_CR3_ONEBIT
 ((
uöt32_t
)0x00000800Ë

	)

4964 
	#USART_CR3_OVRDIS
 ((
uöt32_t
)0x00001000Ë

	)

4965 
	#USART_CR3_DDRE
 ((
uöt32_t
)0x00002000Ë

	)

4966 
	#USART_CR3_DEM
 ((
uöt32_t
)0x00004000Ë

	)

4967 
	#USART_CR3_DEP
 ((
uöt32_t
)0x00008000Ë

	)

4968 
	#USART_CR3_SCARCNT
 ((
uöt32_t
)0x000E0000Ë

	)

4969 
	#USART_CR3_SCARCNT_0
 ((
uöt32_t
)0x00020000Ë

	)

4970 
	#USART_CR3_SCARCNT_1
 ((
uöt32_t
)0x00040000Ë

	)

4971 
	#USART_CR3_SCARCNT_2
 ((
uöt32_t
)0x00080000Ë

	)

4972 
	#USART_CR3_WUS
 ((
uöt32_t
)0x00300000Ë

	)

4973 
	#USART_CR3_WUS_0
 ((
uöt32_t
)0x00100000Ë

	)

4974 
	#USART_CR3_WUS_1
 ((
uöt32_t
)0x00200000Ë

	)

4975 
	#USART_CR3_WUFIE
 ((
uöt32_t
)0x00400000Ë

	)

4978 
	#USART_BRR_DIV_FRACTION
 ((
uöt16_t
)0x000FË

	)

4979 
	#USART_BRR_DIV_MANTISSA
 ((
uöt16_t
)0xFFF0Ë

	)

4982 
	#USART_GTPR_PSC
 ((
uöt16_t
)0x00FFË

	)

4983 
	#USART_GTPR_GT
 ((
uöt16_t
)0xFF00Ë

	)

4987 
	#USART_RTOR_RTO
 ((
uöt32_t
)0x00FFFFFFË

	)

4988 
	#USART_RTOR_BLEN
 ((
uöt32_t
)0xFF000000Ë

	)

4991 
	#USART_RQR_ABRRQ
 ((
uöt16_t
)0x0001Ë

	)

4992 
	#USART_RQR_SBKRQ
 ((
uöt16_t
)0x0002Ë

	)

4993 
	#USART_RQR_MMRQ
 ((
uöt16_t
)0x0004Ë

	)

4994 
	#USART_RQR_RXFRQ
 ((
uöt16_t
)0x0008Ë

	)

4995 
	#USART_RQR_TXFRQ
 ((
uöt16_t
)0x0010Ë

	)

4998 
	#USART_ISR_PE
 ((
uöt32_t
)0x00000001Ë

	)

4999 
	#USART_ISR_FE
 ((
uöt32_t
)0x00000002Ë

	)

5000 
	#USART_ISR_NE
 ((
uöt32_t
)0x00000004Ë

	)

5001 
	#USART_ISR_ORE
 ((
uöt32_t
)0x00000008Ë

	)

5002 
	#USART_ISR_IDLE
 ((
uöt32_t
)0x00000010Ë

	)

5003 
	#USART_ISR_RXNE
 ((
uöt32_t
)0x00000020Ë

	)

5004 
	#USART_ISR_TC
 ((
uöt32_t
)0x00000040Ë

	)

5005 
	#USART_ISR_TXE
 ((
uöt32_t
)0x00000080Ë

	)

5006 
	#USART_ISR_LBD
 ((
uöt32_t
)0x00000100Ë

	)

5007 
	#USART_ISR_CTSIF
 ((
uöt32_t
)0x00000200Ë

	)

5008 
	#USART_ISR_CTS
 ((
uöt32_t
)0x00000400Ë

	)

5009 
	#USART_ISR_RTOF
 ((
uöt32_t
)0x00000800Ë

	)

5010 
	#USART_ISR_EOBF
 ((
uöt32_t
)0x00001000Ë

	)

5011 
	#USART_ISR_ABRE
 ((
uöt32_t
)0x00004000Ë

	)

5012 
	#USART_ISR_ABRF
 ((
uöt32_t
)0x00008000Ë

	)

5013 
	#USART_ISR_BUSY
 ((
uöt32_t
)0x00010000Ë

	)

5014 
	#USART_ISR_CMF
 ((
uöt32_t
)0x00020000Ë

	)

5015 
	#USART_ISR_SBKF
 ((
uöt32_t
)0x00040000Ë

	)

5016 
	#USART_ISR_RWU
 ((
uöt32_t
)0x00080000Ë

	)

5017 
	#USART_ISR_WUF
 ((
uöt32_t
)0x00100000Ë

	)

5018 
	#USART_ISR_TEACK
 ((
uöt32_t
)0x00200000Ë

	)

5019 
	#USART_ISR_REACK
 ((
uöt32_t
)0x00400000Ë

	)

5022 
	#USART_ICR_PECF
 ((
uöt32_t
)0x00000001Ë

	)

5023 
	#USART_ICR_FECF
 ((
uöt32_t
)0x00000002Ë

	)

5024 
	#USART_ICR_NCF
 ((
uöt32_t
)0x00000004Ë

	)

5025 
	#USART_ICR_ORECF
 ((
uöt32_t
)0x00000008Ë

	)

5026 
	#USART_ICR_IDLECF
 ((
uöt32_t
)0x00000010Ë

	)

5027 
	#USART_ICR_TCCF
 ((
uöt32_t
)0x00000040Ë

	)

5028 
	#USART_ICR_LBDCF
 ((
uöt32_t
)0x00000100Ë

	)

5029 
	#USART_ICR_CTSCF
 ((
uöt32_t
)0x00000200Ë

	)

5030 
	#USART_ICR_RTOCF
 ((
uöt32_t
)0x00000800Ë

	)

5031 
	#USART_ICR_EOBCF
 ((
uöt32_t
)0x00001000Ë

	)

5032 
	#USART_ICR_CMCF
 ((
uöt32_t
)0x00020000Ë

	)

5033 
	#USART_ICR_WUCF
 ((
uöt32_t
)0x00100000Ë

	)

5036 
	#USART_RDR_RDR
 ((
uöt16_t
)0x01FFË

	)

5039 
	#USART_TDR_TDR
 ((
uöt16_t
)0x01FFË

	)

5048 
	#WWDG_CR_T
 ((
uöt8_t
)0x7FË

	)

5049 
	#WWDG_CR_T0
 ((
uöt8_t
)0x01Ë

	)

5050 
	#WWDG_CR_T1
 ((
uöt8_t
)0x02Ë

	)

5051 
	#WWDG_CR_T2
 ((
uöt8_t
)0x04Ë

	)

5052 
	#WWDG_CR_T3
 ((
uöt8_t
)0x08Ë

	)

5053 
	#WWDG_CR_T4
 ((
uöt8_t
)0x10Ë

	)

5054 
	#WWDG_CR_T5
 ((
uöt8_t
)0x20Ë

	)

5055 
	#WWDG_CR_T6
 ((
uöt8_t
)0x40Ë

	)

5057 
	#WWDG_CR_WDGA
 ((
uöt8_t
)0x80Ë

	)

5060 
	#WWDG_CFR_W
 ((
uöt16_t
)0x007FË

	)

5061 
	#WWDG_CFR_W0
 ((
uöt16_t
)0x0001Ë

	)

5062 
	#WWDG_CFR_W1
 ((
uöt16_t
)0x0002Ë

	)

5063 
	#WWDG_CFR_W2
 ((
uöt16_t
)0x0004Ë

	)

5064 
	#WWDG_CFR_W3
 ((
uöt16_t
)0x0008Ë

	)

5065 
	#WWDG_CFR_W4
 ((
uöt16_t
)0x0010Ë

	)

5066 
	#WWDG_CFR_W5
 ((
uöt16_t
)0x0020Ë

	)

5067 
	#WWDG_CFR_W6
 ((
uöt16_t
)0x0040Ë

	)

5069 
	#WWDG_CFR_WDGTB
 ((
uöt16_t
)0x0180Ë

	)

5070 
	#WWDG_CFR_WDGTB0
 ((
uöt16_t
)0x0080Ë

	)

5071 
	#WWDG_CFR_WDGTB1
 ((
uöt16_t
)0x0100Ë

	)

5073 
	#WWDG_CFR_EWI
 ((
uöt16_t
)0x0200Ë

	)

5076 
	#WWDG_SR_EWIF
 ((
uöt8_t
)0x01Ë

	)

5086 #ifde‡
USE_STDPERIPH_DRIVER


5087 
	~"°m32f0xx_c⁄f.h
"

5097 #ifde‡
__˝lu•lus


	@D:\PROJEC~3\BLINK_~3\Blink\inc\SYSTEM~1.H

39 #i‚de‡
__SYSTEM_STM32F0XX_H


40 
	#__SYSTEM_STM32F0XX_H


	)

42 #ifde‡
__˝lu•lus


59 
uöt32_t
 
Sy°emC‹eClock
;

85 
Sy°emInô
();

86 
Sy°emC‹eClockUpd©e
();

91 #ifde‡
__˝lu•lus


	@D:\PROJEC~3\BLINK_~3\Blink\readme.txt

1 
You
 
have
 
to
 
£t
 
the
 
c‹ª˘
 
mem‹y
 
œyout
 
your
 
devi˚
 
ö
Åhê
lökî
 
	gs¸ùt
.

2 
PÀa£
 
check
 
the
 
FLASH
 
™d
 
SRAM
 
	gÀngth
.

4 
	ge
.
	gg
.

7 
	gMEMORY


9 
FLASH
 (
rx
Ë: 
ORIGIN
 = 0x08000000, 
	gLENGTH
 = 0x08000

10 
RAM
 (
rwx
Ë: 
ORIGIN
 = 0x20000000, 
	gLENGTH
 = 0x01000

	@D:\PROJEC~3\BLINK_~3\Blink\src\STARTU~1.S

32 .
sy¡ax
 
	gunifõd


33 .
¨ch
 
	g¨mv6
-
	gm


35 .
	g£˘i⁄
 .
	g°ack


36 .
	gÆign
 3

37 #ifde‡
__STACK_SIZE


38 .
equ
 
	gSèck_Size
, 
	g__STACK_SIZE


40 .
equ
 
	gSèck_Size
, 0x400

42 .
globl
 
	g__SèckT›


43 .
globl
 
__SèckLimô


44 
	g__SèckLimô
:

45 .
•a˚
 
Sèck_Size


46 .
size
 
__SèckLimô
, . - __StackLimit

47 
	g__SèckT›
:

48 .
size
 
__SèckT›
, . - 
	g__SèckT›


50 .
	g£˘i⁄
 .
	ghóp


51 .
	gÆign
 3

52 #ifde‡
__HEAP_SIZE


53 .
equ
 
	gHóp_Size
, 
	g__HEAP_SIZE


55 .
equ
 
	gHóp_Size
, 0xC00

57 .
globl
 
	g__HópBa£


58 .
globl
 
__HópLimô


59 
	g__HópBa£
:

60 .
Hóp_Size


61 .
•a˚
 
Hóp_Size


62 .
ídif


63 .
size
 
__HópBa£
, . - __HeapBase

64 
	g__HópLimô
:

65 .
size
 
__HópLimô
, . - 
	g__HópLimô


67 .
	g£˘i⁄
 .
	gi§_ve˘‹


68 .
	gÆign
 2

69 .
globl
 
__i§_ve˘‹


70 
	g__i§_ve˘‹
:

71 .
__SèckT›


72 .
Re£t_H™dÀr


73 .
NMI_H™dÀr


74 .
H¨dFau…_H™dÀr


82 .
SVC_H™dÀr


85 .
PídSV_H™dÀr


86 .
SysTick_H™dÀr


89 .
WWDG_IRQH™dÀr


90 .
PVD_IRQH™dÀr


91 .
RTC_IRQH™dÀr


92 .
FLASH_IRQH™dÀr


93 .
RCC_IRQH™dÀr


94 .
EXTI0_1_IRQH™dÀr


95 .
EXTI2_3_IRQH™dÀr


96 .
EXTI4_15_IRQH™dÀr


97 .
TS_IRQH™dÀr


98 .
DMA1_Ch™√l1_IRQH™dÀr


99 .
DMA1_Ch™√l2_3_IRQH™dÀr


100 .
DMA1_Ch™√l4_5_IRQH™dÀr


101 .
ADC1_COMP_IRQH™dÀr


102 .
TIM1_BRK_UP_TRG_COM_IRQH™dÀr


103 .
TIM1_CC_IRQH™dÀr


104 .
TIM2_IRQH™dÀr


105 .
TIM3_IRQH™dÀr


106 .
TIM6_DAC_IRQH™dÀr


107 .
TIM7_IRQH™dÀr


108 .
TIM14_IRQH™dÀr


109 .
TIM15_IRQH™dÀr


110 .
TIM16_IRQH™dÀr


111 .
TIM17_IRQH™dÀr


112 .
I2C1_IRQH™dÀr


113 .
I2C2_IRQH™dÀr


114 .
SPI1_IRQH™dÀr


115 .
SPI2_IRQH™dÀr


116 .
USART1_IRQH™dÀr


117 .
USART2_IRQH™dÀr


118 .
USART3_4_IRQH™dÀr


119 .
CEC_IRQH™dÀr


120 .
USB_IRQH™dÀr


121 .
BoŸRAM


124 .
size
 
__i§_ve˘‹
, . - 
	g__i§_ve˘‹


126 .
	gãxt


127 .
	gthumb


128 .
	gthumb_func


129 .
	gÆign
 2

130 .
globl
 
	gRe£t_H™dÀr


131 .
ty≥
 
	gRe£t_H™dÀr
, %
fun˘i⁄


132 
	gRe£t_H™dÀr
:

140 
ldr
 
r1
, =
__ëext


141 
ldr
 
r2
, =
__d©a_°¨t__


142 
ldr
 
r3
, =
__d©a_íd__


144 
subs
 
r3
, 
r2


145 
	gbÀ
 .
Êash_to_øm_lo›_íd


147 
movs
 
	gr4
, 0

148 .
	gÊash_to_øm_lo›
:

149 
ldr
 
r0
, [
r1
,
r4
]

150 
°r
 
	gr0
, [
r2
,
r4
]

151 
adds
 
	gr4
, 4

152 
cmp
 
	gr4
, 
r3


153 
	gb…
 .
	gÊash_to_øm_lo›


154 .
	gÊash_to_øm_lo›_íd
:

156 #i‚de‡
__NO_SYSTEM_INIT


157 
ldr
 
r0
, =
Sy°emInô


158 
blx
 
r0


161 
ldr
 
r0
, =
_°¨t


162 
bx
 
r0


163 .
poﬁ


164 .
size
 
Re£t_H™dÀr
, . - 
	gRe£t_H™dÀr


169 .
	gÆign
 1

170 .
	gthumb_func


171 .
wók
 
	g_°¨t


172 .
ty≥
 
	g_°¨t
, %
fun˘i⁄


173 
	g_°¨t
:

176 
ldr
 
r1
, = 
__bss_°¨t__


177 
ldr
 
r2
, = 
__bss_íd__


178 
movs
 
r3
, #0

179 
	gb
 .
	gfûl_zîo_bss


180 .
	glo›_zîo_bss
:

181 
°r
 
r3
, [
r1
]

182 
adds
 
	gr1
, 4

184 .
	gfûl_zîo_bss
:

185 
cmp
 
r1
, 
r2


186 
	gbcc
 .
lo›_zîo_bss


189 
bl
 
maö


190 
	gb
 .

191 .
size
 
	g_°¨t
, . - _start

196 .
ma¸o
 
def_úq_h™dÀr
 
	gh™dÀr_«me


197 .
	gÆign
 1

198 .
	gthumb_func


199 .
	gwók
 \
	gh™dÀr_«me


200 .
	gty≥
 \
	gh™dÀr_«me
, %
	gfun˘i⁄


201 \
	gh™dÀr_«me
 :

202 
b
 .

203 .
size
 \
h™dÀr_«me
, . - \
	gh™dÀr_«me


204 .
ídm


206 
def_úq_h™dÀr
 
NMI_H™dÀr


207 
def_úq_h™dÀr
 
H¨dFau…_H™dÀr


208 
def_úq_h™dÀr
 
SVC_H™dÀr


209 
def_úq_h™dÀr
 
PídSV_H™dÀr


210 
def_úq_h™dÀr
 
SysTick_H™dÀr


211 
def_úq_h™dÀr
 
DeÁu…_H™dÀr


214 
def_úq_h™dÀr
 
WWDG_IRQH™dÀr


215 
def_úq_h™dÀr
 
PVD_IRQH™dÀr


216 
def_úq_h™dÀr
 
RTC_IRQH™dÀr


217 
def_úq_h™dÀr
 
FLASH_IRQH™dÀr


218 
def_úq_h™dÀr
 
RCC_IRQH™dÀr


219 
def_úq_h™dÀr
 
EXTI0_1_IRQH™dÀr


220 
def_úq_h™dÀr
 
EXTI2_3_IRQH™dÀr


221 
def_úq_h™dÀr
 
EXTI4_15_IRQH™dÀr


222 
def_úq_h™dÀr
 
TS_IRQH™dÀr


223 
def_úq_h™dÀr
 
DMA1_Ch™√l1_IRQH™dÀr


224 
def_úq_h™dÀr
 
DMA1_Ch™√l2_3_IRQH™dÀr


225 
def_úq_h™dÀr
 
DMA1_Ch™√l4_5_IRQH™dÀr


226 
def_úq_h™dÀr
 
ADC1_COMP_IRQH™dÀr


227 
def_úq_h™dÀr
 
TIM1_BRK_UP_TRG_COM_IRQH™dÀr


228 
def_úq_h™dÀr
 
TIM1_CC_IRQH™dÀr


229 
def_úq_h™dÀr
 
TIM2_IRQH™dÀr


230 
def_úq_h™dÀr
 
TIM3_IRQH™dÀr


231 
def_úq_h™dÀr
 
TIM6_DAC_IRQH™dÀr


232 
def_úq_h™dÀr
 
TIM7_IRQH™dÀr


233 
def_úq_h™dÀr
 
TIM14_IRQH™dÀr


234 
def_úq_h™dÀr
 
TIM15_IRQH™dÀr


235 
def_úq_h™dÀr
 
TIM16_IRQH™dÀr


236 
def_úq_h™dÀr
 
TIM17_IRQH™dÀr


237 
def_úq_h™dÀr
 
I2C1_IRQH™dÀr


238 
def_úq_h™dÀr
 
I2C2_IRQH™dÀr


239 
def_úq_h™dÀr
 
SPI1_IRQH™dÀr


240 
def_úq_h™dÀr
 
SPI2_IRQH™dÀr


241 
def_úq_h™dÀr
 
USART1_IRQH™dÀr


242 
def_úq_h™dÀr
 
USART2_IRQH™dÀr


243 
def_úq_h™dÀr
 
USART3_4_IRQH™dÀr


244 
def_úq_h™dÀr
 
CEC_IRQH™dÀr


245 
def_úq_h™dÀr
 
USB_IRQH™dÀr


246 
def_úq_h™dÀr
 
	gBoŸRAM


248 .
	gíd


	@D:\PROJEC~3\BLINK_~3\Blink\src\SYSTEM~1.C

99 
	~"°m32f0xx.h
"

131 
uöt32_t
 
	gSy°emC‹eClock
 = 48000000;

132 
__I
 
uöt8_t
 
	gAHBPªscTabÀ
[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

142 
SëSysClock
();

159 
	$Sy°emInô
 ()

162 
RCC
->
CR
 |(
uöt32_t
)0x00000001;

164 #i‡
	`deföed
 (
STM32F031
Ë|| deföed (
STM32F072
Ë|| deföed (
STM32F042
)

166 
RCC
->
CFGR
 &(
uöt32_t
)0xF8FFB80C;

169 
RCC
->
CFGR
 &(
uöt32_t
)0x08FFB80C;

173 
RCC
->
CR
 &(
uöt32_t
)0xFEF6FFFF;

176 
RCC
->
CR
 &(
uöt32_t
)0xFFFBFFFF;

179 
RCC
->
CFGR
 &(
uöt32_t
)0xFFC0FFFF;

182 
RCC
->
CFGR2
 &(
uöt32_t
)0xFFFFFFF0;

185 
RCC
->
CFGR3
 &(
uöt32_t
)0xFFFFFEAC;

188 
RCC
->
CR2
 &(
uöt32_t
)0xFFFFFFFE;

191 
RCC
->
CIR
 = 0x00000000;

194 
	`SëSysClock
();

195 
	}
}

232 
	$Sy°emC‹eClockUpd©e
 ()

234 
uöt32_t
 
tmp
 = 0, 
∂lmuŒ
 = 0, 
∂lsour˚
 = 0, 
¥ediv1Á˘‹
 = 0;

237 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

239 
tmp
)

242 
Sy°emC‹eClock
 = 
HSI_VALUE
;

245 
Sy°emC‹eClock
 = 
HSE_VALUE
;

249 
∂lmuŒ
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMULL
;

250 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

251 
∂lmuŒ
 = (Öllmull >> 18) + 2;

253 i‡(
∂lsour˚
 == 0x00)

256 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1Ë* 
∂lmuŒ
;

260 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1;

262 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

266 
Sy°emC‹eClock
 = 
HSI_VALUE
;

271 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4)];

273 
Sy°emC‹eClock
 >>
tmp
;

274 
	}
}

284 
	$SëSysClock
()

286 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSESètus
 = 0;

290 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSEON
);

295 
HSESètus
 = 
RCC
->
CR
 & 
RCC_CR_HSERDY
;

296 
SèπUpCou¡î
++;

297 } (
HSESètus
 =0Ë&& (
SèπUpCou¡î
 !
HSE_STARTUP_TIMEOUT
));

299 i‡((
RCC
->
CR
 & 
RCC_CR_HSERDY
Ë!
RESET
)

301 
HSESètus
 = (
uöt32_t
)0x01;

305 
HSESètus
 = (
uöt32_t
)0x00;

308 i‡(
HSESètus
 =(
uöt32_t
)0x01)

311 
FLASH
->
ACR
 = 
FLASH_ACR_PRFTBE
 | 
FLASH_ACR_LATENCY
;

314 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

317 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE_DIV1
;

320 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
));

321 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_PREDIV1
 | 
RCC_CFGR_PLLXTPRE_PREDIV1
 | 
RCC_CFGR_PLLMULL6
);

324 
RCC
->
CR
 |
RCC_CR_PLLON
;

327 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

332 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

333 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

336 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
Ë!(uöt32_t)
RCC_CFGR_SWS_PLL
)

344 
	}
}

	@D:\PROJEC~3\BLINK_~3\Blink\src\main.c

14 
	~"°m32f0xx.h
"

16 
	$maö
()

18 
i
;

20 
RCC
->
AHBENR
 |
RCC_AHBENR_GPIOAEN
;

21 
GPIOA
->
MODER
 |
GPIO_MODER_MODER4_0
;

25 
GPIOA
->
BSRR
 = 
GPIO_BSRR_BS_4
;

27 
i
=0;i<0x250000;i++);

30 
GPIOA
->
BSRR
 = 
GPIO_BSRR_BR_4
;

32 
i
=0;i<0x100000;i++);

34 
	}
}

	@
1
.
0
13
542
D:\PROJEC~3\BLINK_~3\Blink\STM32F~1.LD
D:\PROJEC~3\BLINK_~3\Blink\STM32F~2.LD
D:\PROJEC~3\BLINK_~3\Blink\cmsis\ARM_CO~1.H
D:\PROJEC~3\BLINK_~3\Blink\cmsis\CORE_C~1.H
D:\PROJEC~3\BLINK_~3\Blink\cmsis\CORE_C~2.H
D:\PROJEC~3\BLINK_~3\Blink\cmsis\arm_math.h
D:\PROJEC~3\BLINK_~3\Blink\cmsis\core_cm0.h
D:\PROJEC~3\BLINK_~3\Blink\inc\STM32F~1.H
D:\PROJEC~3\BLINK_~3\Blink\inc\SYSTEM~1.H
D:\PROJEC~3\BLINK_~3\Blink\readme.txt
D:\PROJEC~3\BLINK_~3\Blink\src\STARTU~1.S
D:\PROJEC~3\BLINK_~3\Blink\src\SYSTEM~1.C
D:\PROJEC~3\BLINK_~3\Blink\src\main.c
